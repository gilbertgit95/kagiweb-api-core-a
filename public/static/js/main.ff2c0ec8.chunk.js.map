{"version":3,"sources":["common/utilities/index.js","common/context/accountContext.js","common/context/localStorageContext.js","common/themes/primary.js","common/layouts/publicPageLayout.js","common/themes/themeToggle.jsx","common/context/routerContext.js","common/navs/mainNav.jsx","config/index.js","common/layouts/authLayout.js","common/layouts/mainLayout.js","common/buttons/loadingButton.js","pages/auth/login.js","pages/auth/logout.js","pages/auth/resetPassword.js","pages/auth/forgotPassword.js","pages/home/index.js","pages/account/components/accountCredentialsView.js","pages/account/components/accountCredentialsEdit.js","pages/account/accountCredentials.js","pages/account/accountProfile.js","pages/account/accountSettings.js","pages/admin/lib/subPages.js","common/navs/paginatedNav.jsx","common/layouts/subPagesLayout.js","pages/admin/appSettings.js","pages/admin/appEndpoints.js","pages/admin/appRoles.js","pages/admin/appRoleEndpoints.js","pages/admin/appUsers.js","pages/demo/lib/subPages.js","pages/demo/introduction.js","common/blocks/codeBlock.js","pages/demo/buttons.js","pages/demo/inputs.js","pages/demo/navs.js","pages/notFound/index.js","pages/index.js","App.js","reportWebVitals.js","index.js"],"names":["commonUtilities","waitFor","sec","Promise","resolve","reject","setTimeout","AccountContext","createContext","accountContext","setAccountContext","data","initAccountData","testAccountData","storageName","defaultValue","themeMode","LocalStorageContext","localStorageContext","updateLocalStorage","toggleThemeMode","primary","palette","mode","main","secondary","typography","fontSize","fontFamily","join","PublicPagelayout","props","Container","maxWidth","Box","Grid","container","spacing","item","xs","style","textAlign","children","ThemeToggle","useContext","display","Boolean","noLabel","Typography","variant","gutterBottom","Switch","size","checked","onChange","RouterContext","routerContext","setRouterContext","UseRouterContext","useState","navigate","useNavigate","useEffect","MainNav","anchorElRightMenu","setAnchorElRightMenu","leftMenu","rightMenu","drawer","setDrawer","routerCtx","handleCloseRightMenu","toggleDrawer","anchor","open","event","type","key","onClickNav","e","value","onAction","generateDrawerItems","itemsGroup","role","map","items","itemsIndex","Fragment","List","index","ListItem","button","onClick","ListItemIcon","component","ListItemText","label","length","Divider","AppBar","position","sx","zIndex","theme","isTransparent","background","boxShadow","Toolbar","disableGutters","noWrap","leftLogo","mr","md","flexGrow","IconButton","color","Drawer","onClose","Button","my","middleMenu","Tooltip","title","marginRight","rightLogo","currentTarget","p","mt","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","config","appName","environment","rootRoute","development","api","staging","production","AuthLayout","routerStates","borderRadius","Provider","console","log","alt","width","src","margin","padding","paddingTop","paddingBottom","MainLayout","accountCtx","Avatar","cursor","Badge","badgeContent","LoadingButton","properties","xProps","Set","Object","keys","forEach","has","startIcon","isLoading","CircularProgress","disabled","Login","loginProgress","password","username","errors","internalstates","setInternalStates","login","a","utils","TextField","fullWidth","marginTop","Link","href","Logout","cancel","redirect","ResetPassword","useParams","resetProgress","newPassword","confirmPassword","resetKey","setResetKey","resetPassword","target","InputProps","endAdornment","InputAdornment","edge","ForgotPassword","forgotProgress","addressType","addressValue","forgotRequest","ToggleButtonGroup","exclusive","method","ToggleButton","email","phone","Home","AccountView","AccountEdit","required","AccountCredentials","AccountProfile","AccountSettings","Pages","PaginatedNav","useTheme","location","useLocation","activeNav","navs","navMenu","reduce","acc","filter","matchPath","path","exact","strict","pathname","currentNav","locationRoutes","split","disabledNext","disabledBack","routeOnTop","generateBreadCrumbs","Breadcrumbs","separator","underline","toUpperCase","MobileStepper","steps","activeStep","nextButton","aNav","nextNav","onChangeNav","handleNext","direction","backButton","handleBack","navAnchors","SubPagesLayout","navAnchor","veryLong","setVeryLong","mainSection","useRef","onScroll","mainSectionHeight","windowHeight","window","innerHeight","current","clientHeight","addEventListener","removeEventListener","sm","flexShrink","boxSizing","match","selected","lg","xl","ref","AppSettings","subpages","AppEndpoints","AppRoles","AppRoleEndpoints","AppUsers","Introduction","CodeBlockComponent","defaultTheme","vs2015","atomOneLight","text","language","showLineNumbers","Buttons","Inputs","Navs","NotFound","element","replace","to","App","accountStates","UseAccountContext","localStorageStates","setLocalStorageContext","valObj","newStorageVal","localStorage","setItem","JSON","stringify","localStoreVal","getItem","parsedVal","parse","UseLocalStorageContext","createTheme","PrimaryTheme","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff2c0ec8.chunk.js","sourcesContent":["// import moment from 'moment'\r\n\r\nconst commonUtilities = {\r\n    waitFor(sec) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => resolve(true), sec * 1e3)\r\n        })\r\n    }\r\n}\r\n\r\nexport default commonUtilities","import { useState, createContext } from 'react'\r\nimport utils from '../utilities'\r\n\r\nconst AccountContext = createContext({\r\n    accountContext: {},\r\n    setAccountContext(data) { return },\r\n    initAccountData() { return }\r\n})\r\nexport default AccountContext\r\n\r\nexport const UseAccountContext = () => {\r\n    const [accountContext, setAccountContext] = useState({\"__isLoading\": false})\r\n\r\n    const initAccountData = async () => {\r\n        console.log('account data is being fetched')\r\n        setAccountContext({...accountContext, ...{\"__isLoading\": true}})\r\n        await utils.waitFor(2)\r\n        setAccountContext(testAccountData)\r\n        console.log('account data has loaded')\r\n    }\r\n\r\n    return {accountContext, setAccountContext, initAccountData}\r\n}\r\n\r\nconst testAccountData = {\r\n    \"__isLoading\": false,\r\n    \"id\": \"e79c8692-4cc2-4971-a52c-832e87b27e7f\",\r\n    \"username\": \"gilbert95\",\r\n    \"twoFactorAuth\": false,\r\n    \"disableAccount\": false,\r\n    \"primaryEmail\": null,\r\n    \"secondayEmail\": null,\r\n    \"primaryEmailVerified\": false,\r\n    \"secondaryEmailVerified\": false,\r\n    \"primaryNumber\": null,\r\n    \"secondayNumber\": null,\r\n    \"primaryNumberVerified\": false,\r\n    \"secondaryNumberVerified\": false,\r\n    \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n    \"updatedAt\": \"2021-11-20T15:27:31.513Z\",\r\n    \"roleId\": \"6b1b7d6a-c325-4908-912c-f485078a53fc\",\r\n    \"role\": {\r\n        \"id\": \"e79c8692-4cc2-4971-a52c-832e87b46e8f\",\r\n        \"name\": \"Super admin\",\r\n        \"description\": \"Has access to all endpoints\",\r\n        \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n        \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n    },\r\n    \"claims\": [\r\n        {\r\n            \"id\": \"e79c8692-4cc2-4971-a52c-832e87b11e8f\",\r\n            \"accountId\": \"e79c8692-4cc2-4971-a52c-832e87b28e8f\",\r\n            \"key\": \"fullName\",\r\n            \"value\": \"Master Account\",\r\n            \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n            \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n          },\r\n          {\r\n            \"id\": \"e79c8692-4cc2-4971-a52c-832e87b12e8f\",\r\n            \"accountId\": \"e79c8692-4cc2-4971-a52c-832e87b28e8f\",\r\n            \"key\": \"gender\",\r\n            \"value\": \"Male\",\r\n            \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n            \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n          },\r\n          {\r\n            \"id\": \"e79c8692-4cc2-4971-a52c-832e87b13e8f\",\r\n            \"accountId\": \"e79c8692-4cc2-4971-a52c-832e87b28e8f\",\r\n            \"key\": \"language\",\r\n            \"value\": \"Bisaya\",\r\n            \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n            \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n          },\r\n          {\r\n            \"id\": \"e79c8692-4cc2-4971-a52c-832e87b11e7f\",\r\n            \"accountId\": \"e79c8692-4cc2-4971-a52c-832e87b27e7f\",\r\n            \"key\": \"fullName\",\r\n            \"value\": \"Berto Admin\",\r\n            \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n            \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n          },\r\n          {\r\n            \"id\": \"e79c8692-4cc2-4971-a52c-832e87b12e7f\",\r\n            \"accountId\": \"e79c8692-4cc2-4971-a52c-832e87b27e7f\",\r\n            \"key\": \"gender\",\r\n            \"value\": \"Male\",\r\n            \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n            \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n          },\r\n          {\r\n            \"id\": \"e79c8692-4cc2-4971-a52c-832e87b13e7f\",\r\n            \"accountId\": \"e79c8692-4cc2-4971-a52c-832e87b27e7f\",\r\n            \"key\": \"language\",\r\n            \"value\": \"Bisaya\",\r\n            \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n            \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n          }\r\n    ]\r\n}","import { useEffect, useState, createContext } from 'react'\r\n\r\nconst storageName = 'app_info'\r\n\r\nlet defaultValue = {\r\n    themeMode: 'light'\r\n}\r\n\r\nconst LocalStorageContext = createContext({\r\n    localStorageContext: defaultValue,\r\n    updateLocalStorage(data) { return },\r\n    toggleThemeMode() { return }\r\n})\r\nexport default LocalStorageContext\r\n\r\nexport const UseLocalStorageContext = () => {\r\n    const [localStorageContext, setLocalStorageContext] = useState(defaultValue)\r\n\r\n    const updateLocalStorage = (valObj) => {\r\n        let newStorageVal = {...localStorageContext, ...valObj}\r\n        setLocalStorageContext(newStorageVal)\r\n        localStorage.setItem(storageName, JSON.stringify(newStorageVal))\r\n    }\r\n\r\n    const toggleThemeMode = () => {\r\n        let themeMode = localStorageContext.themeMode\r\n        let newThemeMode = (themeMode && themeMode === 'light')? 'dark': 'light'\r\n        updateLocalStorage({themeMode: newThemeMode})\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log('use effect in localstorage')\r\n        let localStoreVal = localStorage.getItem(storageName)\r\n        let parsedVal = defaultValue\r\n\r\n        if (localStoreVal) {\r\n            parsedVal = JSON.parse(localStoreVal)\r\n        }\r\n\r\n        updateLocalStorage(parsedVal)\r\n\r\n    }, [])\r\n\r\n    return {localStorageContext, updateLocalStorage, toggleThemeMode}\r\n}","const primary = {\r\n    palette: {\r\n        mode: 'dark',\r\n        primary: {\r\n            main: '#176a75',\r\n        },\r\n        secondary: {\r\n            main: '#dc195b',\r\n        }\r\n    },\r\n    typography: {\r\n        fontSize: 14,\r\n        fontFamily: [\r\n          '-apple-system',\r\n          'BlinkMacSystemFont',\r\n          '\"Segoe UI\"',\r\n          'Roboto',\r\n          '\"Helvetica Neue\"',\r\n          'Arial',\r\n          'sans-serif',\r\n          '\"Apple Color Emoji\"',\r\n          '\"Segoe UI Emoji\"',\r\n          '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n    },\r\n}\r\n\r\nexport default primary","import { Outlet } from \"react-router-dom\"\r\nimport Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\n\r\nconst PublicPagelayout = (props) => {\r\n\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <Box>\r\n                <Grid container spacing={2}>\r\n                    {/* <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                        <Typography variant=\"h4\" gutterBottom component=\"div\">\r\n                            { config.appName }\r\n                        </Typography>\r\n                    </Grid> */}\r\n                    <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                        <Box>\r\n                            { props.children? props.children: <Outlet /> }\r\n                        </Box>\r\n                    </Grid>\r\n                    {/* <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Copyrights 2021\r\n                        </Typography>\r\n                    </Grid> */}\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PublicPagelayout","\r\nimport { useContext } from 'react'\r\nimport Switch from '@mui/material/Switch'\r\nimport Typography from '@mui/material/Typography'\r\nimport LocalStorageContext from '../context/localStorageContext.js'\r\n\r\nconst ThemeToggle = (props) => {\r\n\r\n    const { localStorageContext, toggleThemeMode}  = useContext(LocalStorageContext)\r\n\r\n    return (\r\n        <div style={{ display: 'inline-block' }}>\r\n            {\r\n                !Boolean(props.noLabel)? (\r\n                    <Typography variant=\"caption\" display=\"inline-block\" gutterBottom>\r\n                        Dark Mode\r\n                    </Typography>\r\n                ): null\r\n            }\r\n            <Switch\r\n                size='small'\r\n                checked={localStorageContext.themeMode === 'dark'}\r\n                onChange={() => {\r\n                    toggleThemeMode()\r\n                }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeToggle","import { useState, useEffect, createContext } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst RouterContext = createContext({\r\n    routerContext: null,\r\n    setRouterContext(data) { return }\r\n})\r\nexport default RouterContext\r\n\r\nexport const UseRouterContext = () => {\r\n    const [routerContext, setRouterContext] = useState(null)\r\n    const navigate = useNavigate()\r\n\r\n    // life cycles\r\n    useEffect(() => {\r\n        // use to navigate\r\n        if (routerContext) {\r\n        //   console.log('change route in router context triggered: ', routerContext) \r\n          navigate(routerContext)\r\n        }\r\n    }, [routerContext])\r\n\r\n    return {routerContext, setRouterContext}\r\n}","\r\nimport React, { useState, useContext } from 'react'\r\n// import { useNavigate } from \"react-router-dom\"\r\nimport AppBar from '@mui/material/AppBar'\r\nimport Box from '@mui/material/Box'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Typography from '@mui/material/Typography'\r\nimport Menu from '@mui/material/Menu'\r\nimport MenuIcon from '@mui/icons-material/Menu'\r\nimport Container from '@mui/material/Container'\r\nimport Button from '@mui/material/Button'\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport Drawer from '@mui/material/Drawer'\r\nimport List from '@mui/material/List'\r\nimport Divider from '@mui/material/Divider'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport ListItemIcon from '@mui/material/ListItemIcon'\r\nimport ListItemText from '@mui/material/ListItemText'\r\n\r\nimport RouterContext from '../../common/context/routerContext'\r\n\r\nconst MainNav = (props) => {\r\n  const [anchorElRightMenu, setAnchorElRightMenu] = useState(null)\r\n  // const [navRoute, setNavRoute] = useState(null)\r\n  const [drawer, setDrawer] = useState({\r\n      leftMenu: false,\r\n      rightMenu: false\r\n  })\r\n  const routerCtx = useContext(RouterContext)\r\n  // const navigate = useNavigate()\r\n\r\n  // life cycles\r\n  // useEffect(() => {\r\n  //   // use to navigate\r\n  //   if (navRoute) {\r\n  //     console.log('change route in mainNav triggered: ', navRoute)\r\n  //     navigate(navRoute)\r\n  //   }\r\n  // }, [navRoute, navigate])\r\n\r\n  const handleOpenRightMenu = (event) => {\r\n    setAnchorElRightMenu(event.currentTarget)\r\n  }\r\n\r\n  const handleCloseRightMenu = () => {\r\n    setAnchorElRightMenu(null)\r\n  }\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' || event.key === 'Shift')\r\n    ) {\r\n      return\r\n    }\r\n\r\n    setDrawer({ ...drawer, [anchor]: open })\r\n  }\r\n\r\n  const onClickNav = (e) => {\r\n    // check for event info\r\n    if (e && e.type) {\r\n      // navigate to routes if the its a link\r\n      if (e.type === 'link') {\r\n        routerCtx.setRouterContext(e.value)\r\n\r\n      // callback nav value if its an action\r\n      } else if (e.type === 'action') {\r\n        //  check for callback property\r\n        if (props.onAction && typeof props.onAction == 'function') {\r\n          props.onAction(e.value)\r\n        }\r\n      }\r\n    }\r\n\r\n    // return will imediately end the method in the stack\r\n    return\r\n  }\r\n\r\n  const generateDrawerItems = (anchor, itemsGroup) => {\r\n\r\n    return (\r\n      <Box\r\n        // sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\r\n        role=\"presentation\">\r\n        {\r\n          itemsGroup.map((items, itemsIndex) => {\r\n            return (\r\n              <React.Fragment key={anchor + '_groupItemsFragment_' + itemsIndex}>\r\n                <List key={anchor + '_groupItems_' + itemsIndex}>\r\n                  {\r\n                    items.map((item, index) => (\r\n                      <ListItem\r\n                        button\r\n                        onClick={(e) => {\r\n                          onClickNav({type: item.type, value: item.value})\r\n                          if (item.type === 'action' || item.type === 'link') {\r\n                            toggleDrawer(anchor, false)(e)\r\n                          }\r\n                        }}\r\n                        key={anchor + '_groupChildItems_' + itemsIndex + '_' + index}>\r\n                        <ListItemIcon>\r\n                          { item.component? item.component: null }\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={item.label} />\r\n                      </ListItem>\r\n                    ))\r\n                  }\r\n                </List>\r\n\r\n                {/* divider */}\r\n                { itemsIndex < itemsGroup.length -1? <Divider key={anchor + '_groupDivider_' + itemsIndex} />: null }\r\n              </React.Fragment>\r\n            )\r\n          })\r\n        }\r\n      </Box>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n      style={props.isTransparent? { background: 'transparent', boxShadow: 'none'}: {}}>\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n\r\n          {/* logo display for big screen size */}\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            onClick={() => {\r\n              onClickNav({type: props.leftLogo.type, value: props.leftLogo.value})\r\n            }}\r\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}>\r\n            { props.leftLogo? props.leftLogo.component: null }\r\n          </Typography>\r\n\r\n          {/* left drawer for small screen */}\r\n          {\r\n            props.leftMenu && props.leftMenu.length? (\r\n              <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  aria-label={ props.leftLogo? props.leftLogo.label: '' }\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={toggleDrawer('leftMenu', true)}\r\n                  color=\"inherit\">\r\n                  <MenuIcon />\r\n                </IconButton>\r\n                <Drawer\r\n                    anchor={'left'}\r\n                    open={drawer['leftMenu']}\r\n                    onClose={toggleDrawer('leftMenu', false)}>\r\n                    <Toolbar />\r\n                    { generateDrawerItems('leftMenu', props.leftMenu? props.leftMenu: []) }\r\n                </Drawer>\r\n              </Box>\r\n            ): null\r\n          }\r\n\r\n          {/* logo display for small screen size */}\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            onClick={() => {\r\n              onClickNav({type: props.leftLogo.type, value: props.leftLogo.value})\r\n            }}\r\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            { props.leftLogo? props.leftLogo.component: null }\r\n          </Typography>\r\n\r\n          {/* main menu display for bigscreen size */}\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            {\r\n              props.leftMenu? props.leftMenu.map((items, itemsIndex) => {\r\n                return (\r\n                  items.map((item, index) => (\r\n                    <Button\r\n                      onClick={() => {\r\n                        onClickNav({type: item.type, value: item.value})\r\n                      }}\r\n                      key={'groupPlainItems_' + itemsIndex + '_' + index}\r\n                      // onClick={handleCloseNavMenu}\r\n                      sx={{ my: 2, color: 'white', display: 'block' }}>\r\n                      { item.label }\r\n                    </Button>\r\n                  ))\r\n                )\r\n              }): null\r\n            }\r\n          </Box>\r\n\r\n          {/* right settings section */}\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            {/* middle menu */}\r\n            {\r\n              props.middleMenu? props.middleMenu.map((item, index) => {\r\n                return (\r\n                  <Tooltip\r\n                    onClick={() => {\r\n                      onClickNav({type: item.type, value: item.value})\r\n                    }}\r\n                    title={ item.label }\r\n                    style={{marginRight: 15}}\r\n                    key={'middleMenu_' + index}>\r\n                    { item.component }\r\n                  </Tooltip>\r\n                )\r\n              }): null\r\n            }\r\n\r\n            {/* right menu */}\r\n            {/* right menu for big screen */}\r\n            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'inline-block' } }}>\r\n              <Tooltip title={ props.rightLogo? props.rightLogo.label: '' }>\r\n                <IconButton onClick={handleOpenRightMenu} sx={{ p: 0 }}>\r\n                  { props.rightLogo? props.rightLogo.component: null }\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Menu\r\n                sx={{ mt: '45px' }}\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElRightMenu}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={Boolean(anchorElRightMenu)}\r\n                onClose={handleCloseRightMenu}>\r\n                {\r\n                  props.rightMenu? props.rightMenu.map((items, itemsIndex) => {\r\n                    return (\r\n                      <List key={'rightMenuDDgroupItems_' + itemsIndex}>\r\n                        {\r\n                          items.map((item, index) => (\r\n                            <MenuItem\r\n                              key={'rightMenuDDgroupChildItems_' + itemsIndex + '_' + index}\r\n                              onClick={() => {\r\n                                onClickNav({type: item.type, value: item.value})\r\n                                if (item.type === 'action' || item.type === 'link') {\r\n                                  handleCloseRightMenu()\r\n                                }\r\n                              }}>\r\n                              <ListItemIcon>\r\n                                { item.component? item.component: null }\r\n                              </ListItemIcon>\r\n                              <Typography textAlign=\"center\">{item.label}</Typography>\r\n                            </MenuItem>\r\n                          ))\r\n                        }\r\n                        {/* divider */}\r\n                        { itemsIndex < props.rightMenu.length -1? <Divider key={'rightMenuDDgroupItems_groupDivider_' + itemsIndex} />: null }\r\n                      </List>\r\n                    )\r\n                  }): null\r\n                }\r\n              </Menu>\r\n            </Box>\r\n\r\n            {/* right settings for small screen */}\r\n            <Box sx={{ flexGrow: 1, display: { xs: 'inline-block', md: 'none' } }}>\r\n              <Tooltip title={ props.rightLogo? props.rightLogo.label: '' }>\r\n                <IconButton\r\n                  sx={{ p: 0 }}\r\n                  onClick={toggleDrawer('rightMenu', true)}>\r\n                  { props.rightLogo? props.rightLogo.component: null }\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Drawer\r\n                anchor={'top'}\r\n                open={drawer['rightMenu']}\r\n                onClose={toggleDrawer('rightMenu', false)}>\r\n                <Toolbar />\r\n                { generateDrawerItems('rightMenu', props.rightMenu? props.rightMenu: []) }\r\n              </Drawer>\r\n            </Box>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  )\r\n}\r\nexport default MainNav","let config = {\r\n    appName: 'kagiweb',\r\n    environment: 'development',\r\n    rootRoute: 'core',\r\n    // environment: 'staging'\r\n    // environment: 'production'\r\n    development: {\r\n        api: 'http://localhost:5000'\r\n    },\r\n    staging: {\r\n        api: 'http://localhost:5000'\r\n    },\r\n    production: {\r\n        api: 'http://localhost:5000'\r\n    }\r\n}\r\n\r\nconfig = {...config, ...config[config.environment]}\r\n\r\ndelete config.development\r\ndelete config.staging\r\ndelete config.production\r\n\r\nexport default config","import { Outlet } from \"react-router-dom\"\r\nimport Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport MenuIcon from '@mui/icons-material/Menu'\r\nimport MailIcon from '@mui/icons-material/Mail'\r\nimport Button from '@mui/material/IconButton'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport ThemeToggle from '../themes/themeToggle'\r\n\r\nimport MainNav from '../navs/mainNav'\r\nimport config from '../../config'\r\n\r\nimport RouterContext, { UseRouterContext } from '../context/routerContext'\r\n\r\nconst AuthLayout = (props) => {\r\n    const routerStates = UseRouterContext()\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // let accountVal = ctx.accountContext && ctx.accountContext.testVal? ctx.accountContext.testVal: ''\r\n    let rightLogo = {\r\n        label: 'Open settings',\r\n        component: <MenuIcon />,\r\n        type: 'action',\r\n        value: 'openSettings'\r\n    }\r\n    let middleMenu = [\r\n        {\r\n            label: 'Latest news from our team',\r\n            component: (\r\n                <Button size=\"small\" style={{ borderRadius: 5, marginRight: 15 }}>\r\n                    <Typography>News</Typography>\r\n                </Button>\r\n            ),\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/home`\r\n        },\r\n        {\r\n            label: 'Contact or Learn about our Team',\r\n            component: (\r\n                <Button size=\"small\"  style={{ borderRadius: 5, marginRight: 15 }}>\r\n                    <Typography>About Us</Typography>\r\n                </Button>\r\n            ),\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/home`\r\n        }\r\n    ]\r\n    let rightMenu = [\r\n        [\r\n            {\r\n                component: (\r\n                    <Box sx={{ display: 'inline-block' }}>\r\n                        <ThemeToggle noLabel={true} />\r\n                    </Box>\r\n                ),\r\n                label: 'Dark Mode',\r\n                type: 'none',\r\n                value: 'none'\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                component: <MailIcon />,\r\n                label: 'Notes',\r\n                type: 'action',\r\n                value: 'notes'\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                // component: <MailIcon />,\r\n                label: 'Notes II',\r\n                type: 'action',\r\n                value: 'notes II'\r\n            }\r\n        ]\r\n    ]\r\n\r\n    const onNavAction = (e) => {\r\n        console.log('Action: ', e)\r\n    }\r\n\r\n    return (\r\n        <RouterContext.Provider\r\n            value={{\r\n              ...routerStates\r\n            }}>\r\n            <MainNav\r\n                isTransparent={true}\r\n                leftLogo={null}\r\n                leftMenu={[]}\r\n                middleMenu={middleMenu}\r\n                rightLogo={rightLogo}\r\n                rightMenu={rightMenu}\r\n                onAction={onNavAction} />\r\n            <Container maxWidth=\"sm\">\r\n                <Box>\r\n                    <Toolbar />\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                            <img\r\n                                alt=\"logo\"\r\n                                style={{width: 150}}\r\n                                src='/favicon.png' />\r\n                            <Typography variant=\"h4\" gutterBottom component=\"div\">\r\n                                { config.appName }\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                            <Box\r\n                                style={{\r\n                                    width: 300,\r\n                                    margin: 'auto',\r\n                                    padding: 20,\r\n                                    paddingTop: 40,\r\n                                    paddingBottom: 40,\r\n                                    boxShadow: '2px 2px 3px 2px rgb(0 0 0 / 20%)'\r\n                                }}>\r\n                                <Outlet />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                            <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                                Copyrights 2021\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n        </RouterContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthLayout","import { useEffect, useContext } from 'react'\r\nimport { Outlet } from \"react-router-dom\"\r\nimport Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Toolbar from '@mui/material/Toolbar'\r\n// import Typography from '@mui/material/Typography'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport MailIcon from '@mui/icons-material/Mail'\r\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings'\r\nimport SettingsIcon from '@mui/icons-material/Settings'\r\nimport NotificationsIcon from '@mui/icons-material/Notifications'\r\nimport FaceIcon from '@mui/icons-material/Face'\r\nimport LogoutIcon from '@mui/icons-material/Logout'\r\nimport KeyIcon from '@mui/icons-material/Key'\r\n\r\n// import Tooltip from '@mui/material/Tooltip'\r\nimport Badge from '@mui/material/Badge'\r\nimport IconButton from '@mui/material/IconButton'\r\n\r\nimport MainNav from '../navs/mainNav'\r\nimport AccountContext from '../context/accountContext'\r\nimport RouterContext, { UseRouterContext } from '../context/routerContext'\r\nimport ThemeToggle from '../themes/themeToggle'\r\nimport config from '../../config'\r\n\r\nconst MainLayout = (props) => {\r\n    const routerStates = UseRouterContext()\r\n    const accountCtx = useContext(AccountContext)\r\n\r\n    let leftLogo = {\r\n        label: 'Root',\r\n        component: <Avatar sx ={{'& :hover': {cursor: 'pointer'}}} alt=\"Logo\" src=\"/favicon.png\" />,\r\n        type: 'link',\r\n        value: `/${ config.rootRoute }/home`\r\n    }\r\n    let leftMenu = [\r\n        [\r\n            {\r\n              component: <MailIcon />,\r\n              label: 'Home',\r\n              type: 'link',\r\n              value: `/${ config.rootRoute }/home`\r\n            },\r\n            {\r\n                component: <MailIcon />,\r\n                label: 'Demo',\r\n                type: 'link',\r\n                value: `/${ config.rootRoute }/demo`\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                component: <MailIcon />,\r\n                label: 'Notes',\r\n                type: 'action',\r\n                value: 'notes'\r\n            }\r\n        ]\r\n    ]\r\n\r\n    let middleMenu = [\r\n        {\r\n            label: 'Administrator',\r\n            component: (\r\n                <IconButton size=\"large\" sx={{ p: 0 }}>\r\n                    <AdminPanelSettingsIcon color=\"action\" size=\"large\" />\r\n                </IconButton>\r\n            ),\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/admin/appSettings`\r\n        },\r\n        {\r\n            label: 'Notifications',\r\n            component: (\r\n                <IconButton size=\"large\" sx={{ p: 0 }}>\r\n                    <Badge badgeContent={4} color=\"error\">\r\n                        <NotificationsIcon color=\"action\" size=\"large\" />\r\n                    </Badge>\r\n                </IconButton>\r\n            ),\r\n            type: 'action',\r\n            value: 'notifications'\r\n        }\r\n    ]\r\n\r\n    let rightLogo = {\r\n        label: 'Open settings',\r\n        component: <Avatar alt=\"Gebe\" src=\"/static/images/avatar/2.jpg\" />,\r\n        type: 'action',\r\n        value: 'openSettings'\r\n    }\r\n    let rightMenu = [\r\n        [\r\n            {\r\n                component: (\r\n                    <Box sx={{ display: 'inline-block' }}>\r\n                        <ThemeToggle noLabel={true} />\r\n                    </Box>\r\n                ),\r\n                label: 'Dark Mode',\r\n                type: 'none',\r\n                value: 'none'\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                component: <KeyIcon />,\r\n                label: 'Credentials',\r\n                type: 'link',\r\n                value: `/${ config.rootRoute }/account/credentials`\r\n            },\r\n            {\r\n                component: <FaceIcon />,\r\n                label: 'Profile',\r\n                type: 'link',\r\n                value: `/${ config.rootRoute }/account/profile`\r\n            },\r\n            {\r\n                component: <SettingsIcon />,\r\n                label: 'Settings',\r\n                type: 'link',\r\n                value: `/${ config.rootRoute }/account/settings`\r\n            },\r\n            // {\r\n            //     component: <MailIcon />,\r\n            //     label: 'Test Act',\r\n            //     type: 'action',\r\n            //     value: 'test_act'\r\n            // },\r\n        ],\r\n        [\r\n            {\r\n                component: <LogoutIcon />,\r\n                label: 'Logout',\r\n                type: 'link',\r\n                value: `/${ config.rootRoute }/auth/logout`\r\n            }\r\n        ]\r\n    ]\r\n\r\n    const onNavAction = (e) => {\r\n        console.log('Action: ', e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('init main layout')\r\n        accountCtx.initAccountData()\r\n    }, [])\r\n\r\n    return (\r\n        <RouterContext.Provider\r\n            value={{\r\n              ...routerStates\r\n            }}>\r\n            <MainNav\r\n                leftLogo={leftLogo}\r\n                leftMenu={leftMenu}\r\n                middleMenu={middleMenu}\r\n                rightLogo={rightLogo}\r\n                rightMenu={rightMenu}\r\n                onAction={onNavAction} />\r\n\r\n            <Container maxWidth=\"false\">\r\n                <Box>\r\n                    <Toolbar />\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                            {/* <Typography variant=\"h4\" gutterBottom component=\"div\">\r\n                                { config.appName }\r\n                            </Typography> */}\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                            <Box>\r\n                                <Outlet />\r\n                            </Box>\r\n                        </Grid>\r\n                        {/* <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                            <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                                Copyrights 2021\r\n                            </Typography>\r\n                        </Grid> */}\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n        </RouterContext.Provider>\r\n    )\r\n}\r\n\r\nexport default MainLayout","import React from 'react'\r\nimport Button from '@mui/material/Button'\r\nimport CircularProgress from '@mui/material/CircularProgress'\r\n\r\nconst LoadingButton = (props) => {\r\n\r\n    let properties = {}\r\n\r\n    // properties not tobe included\r\n    let xProps = new Set(['isLoading'])\r\n\r\n    // assign object properties\r\n    Object.keys(props).forEach(key => {\r\n        if (xProps.has(key)) return\r\n        properties[key] = props[key]\r\n    })\r\n\r\n    // start icon\r\n    let startIcon = props.startIcon? props.startIcon: null\r\n\r\n    // if isLoading is true, set disabled to true\r\n    if (props.isLoading) {\r\n        startIcon = <CircularProgress size={12} />\r\n        properties.disabled = true\r\n    }\r\n\r\n    return (\r\n        <Button\r\n            {...properties}\r\n            startIcon={ startIcon }>\r\n            { props.children? props.children: '' }\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default LoadingButton","import { useState, useContext } from 'react'\r\n\r\n// import { useNavigate } from \"react-router-dom\"\r\n\r\nimport Link from '@mui/material/Link'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport TextField from '@mui/material/TextField'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/context/accountContext'\r\nimport RouterContext from '../../common/context/routerContext'\r\nimport LoadingButton from '../../common/buttons/loadingButton'\r\nimport utils from '../../common/utilities'\r\nimport config from '../../config'\r\n\r\nconst Login = (props) => {\r\n\r\n    const [internalstates, setInternalStates] = useState({\r\n        loginProgress: false,\r\n        password: '',\r\n        username: '',\r\n        errors: []\r\n    })\r\n    // const [navRoute, setNavRoute] = useState(null)\r\n    const routerCtx = useContext(RouterContext)\r\n    // const navigate = useNavigate()\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'login test value from context'})\r\n    // }\r\n\r\n    const login = async () => {\r\n        setInternalStates({...internalstates, ...{loginProgress: true}})\r\n        await utils.waitFor(2)\r\n        setInternalStates({...internalstates, ...{loginProgress: false}})\r\n        routerCtx.setRouterContext(`/${ config.rootRoute }/home`)\r\n    }\r\n\r\n    // life cycles\r\n    // useEffect(() => {\r\n    //     // use to navigate\r\n    //     if (navRoute) {\r\n    //         navigate(navRoute)\r\n    //     }\r\n    // }, [navRoute, navigate])\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    type='text'\r\n                    label='username / email' />\r\n            </Grid>\r\n            \r\n\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    type='password'\r\n                    label='password' />\r\n            </Grid>\r\n            \r\n\r\n            <Grid item xs={12}>\r\n                <LoadingButton\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='contained'\r\n                    color='primary'\r\n                    onClick={login}\r\n                    isLoading={internalstates.loginProgress}\r\n                    startIcon={<LoginIcon />}>\r\n                    login\r\n                </LoadingButton>\r\n                <Box style={{marginTop: 15}}>\r\n                    <Link\r\n                        color=\"inherit\"\r\n                        href={`/${ config.rootRoute }/auth/forgotPassword`}>\r\n                        Forgot password\r\n                    </Link>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Login","import { useEffect, useContext } from 'react'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport CircularProgress from '@mui/material/CircularProgress'\r\n\r\nimport RouterContext from '../../common/context/routerContext'\r\n\r\n// import { useNavigate } from \"react-router-dom\"\r\nimport utils from '../../common/utilities'\r\nimport config from '../../config'\r\n\r\nconst Logout = (props) => {\r\n    // const [navRoute, setNavRoute] = useState(null)\r\n    const routerCtx = useContext(RouterContext)\r\n    // const navigate = useNavigate()\r\n\r\n    // life cycles\r\n    // useEffect(() => {\r\n    //     // use to navigate\r\n    //     if (navRoute) {\r\n    //         navigate(navRoute)\r\n    //     }\r\n    // }, [navRoute, navigate])\r\n\r\n    useEffect(() => {\r\n        // cancel is use for cleanup\r\n        let cancel = false\r\n        async function redirect() {\r\n            // use temporary wait to\r\n            // recreate logging out request\r\n            await utils.waitFor(2)\r\n\r\n            // then redirect after successful logout\r\n            if (!routerCtx.routerContext && !cancel) {\r\n                routerCtx.setRouterContext(`/${ config.rootRoute }/auth/login`)\r\n            }\r\n        }\r\n\r\n        redirect()\r\n\r\n        // cleanup function on unmount\r\n        return () => {\r\n            cancel = true\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography>\r\n                    Signing out...\r\n                </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <CircularProgress />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Logout","import { useState } from 'react'\r\nimport Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport TextField from '@mui/material/TextField'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport InputAdornment from '@mui/material/InputAdornment'\r\nimport RotateLeftIcon from '@mui/icons-material/RotateLeft'\r\n\r\nimport LoadingButton from '../../common/buttons/loadingButton'\r\nimport utils from '../../common/utilities'\r\nimport config from '../../config'\r\n\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nconst ResetPassword = (props) => {\r\n    const { key } = useParams()\r\n    const [internalstates, setInternalStates] = useState({\r\n        resetProgress: false,\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n        resetKey: '',\r\n        errors: []\r\n    })\r\n    const [resetKey, setResetKey] = useState(key? key: '')\r\n\r\n    const onChangeResetKey = (e) => {\r\n        setResetKey(e.target.value)\r\n    }\r\n\r\n    const handleResetKeyValue = (e) => {\r\n        let keyVal = key? key: ''\r\n        setResetKey(keyVal)\r\n    }\r\n\r\n    const resetPassword = async () => {\r\n        setInternalStates({...internalstates, ...{resetProgress: true}})\r\n        await utils.waitFor(2)\r\n        setInternalStates({...internalstates, ...{resetProgress: false}})\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography>\r\n                    Please enter the correct key and the new password you wanted.\r\n                </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    value={resetKey}\r\n                    onChange={onChangeResetKey}\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    type='text'\r\n                    label='Reset Key'\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"Reset key\"\r\n                                    onClick={handleResetKeyValue}\r\n                                    edge=\"end\">\r\n                                    <RotateLeftIcon />\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        ),\r\n                    }} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    type='password'\r\n                    label='New Password' />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    type='password'\r\n                    label='Confirm Password' />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <LoadingButton\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='contained'\r\n                    color='primary'\r\n                    onClick={resetPassword}\r\n                    isLoading={internalstates.resetProgress}\r\n                    startIcon={<LoginIcon />}>\r\n                    Reset\r\n                </LoadingButton>\r\n                <Box style={{marginTop: 15}}>\r\n                    <Link\r\n                        style={{margin: 10}}\r\n                        color=\"inherit\"\r\n                        href={`/${ config.rootRoute }/auth/forgotPassword`}>\r\n                        Forgot password\r\n                    </Link>\r\n                    <Link\r\n                        style={{margin: 10}}\r\n                        color=\"inherit\"\r\n                        href={`/${ config.rootRoute }/auth/login`}>\r\n                        Login\r\n                    </Link>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ResetPassword","import { useState } from 'react'\r\nimport Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport TextField from '@mui/material/TextField'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\nimport EmailIcon from '@mui/icons-material/Email'\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone'\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport ToggleButton from '@mui/material/ToggleButton'\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\r\n\r\nimport LoadingButton from '../../common/buttons/loadingButton'\r\nimport utils from '../../common/utilities'\r\nimport config from '../../config'\r\n\r\nconst ForgotPassword = (props) => { \r\n    const [internalstates, setInternalStates] = useState({\r\n        forgotProgress: false,\r\n        addressType: 'email',\r\n        addressValue: '',\r\n        errors: []\r\n    })\r\n\r\n    const promptText = {\r\n        email: 'A password reset code or link will be sent to this email address.',\r\n        phone: 'A password reset code or link will be sent to this phone number.'\r\n    }\r\n\r\n    const switchMethod = (e, method) => {\r\n        setInternalStates({...internalstates, ...{addressType: method}})\r\n    }\r\n\r\n    const forgotRequest = async () => {\r\n        setInternalStates({...internalstates, ...{forgotProgress: true}})\r\n        await utils.waitFor(2)\r\n        setInternalStates({...internalstates, ...{forgotProgress: false}})\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12} style={{marginTop: 0, paddingTop: 0, textAlign: 'right'}}>\r\n                <ToggleButtonGroup\r\n                    value={internalstates.addressType}\r\n                    exclusive\r\n                    onChange={switchMethod}\r\n                    aria-label=\"Address Type\">\r\n                    <ToggleButton size=\"small\" value=\"email\">\r\n                        <Tooltip title=\"Send reset code to my Email\">\r\n                            <EmailIcon />\r\n                        </Tooltip>\r\n                    </ToggleButton>\r\n                    <ToggleButton size=\"small\" value=\"phone\">\r\n                        <Tooltip title=\"Send reset code to my Phone\">\r\n                            <ContactPhoneIcon />\r\n                        </Tooltip>\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Typography>\r\n                    { promptText[internalstates.addressType] }\r\n                </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    type='text'\r\n                    label={ internalstates.addressType === 'email'? 'Email Address': 'Phone Number' } />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <LoadingButton\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='contained'\r\n                    color='primary'\r\n                    onClick={forgotRequest}\r\n                    isLoading={internalstates.forgotProgress}\r\n                    startIcon={<LoginIcon />}>\r\n                    Submit\r\n                </LoadingButton>\r\n                <Box style={{marginTop: 15}}>\r\n                    <Link\r\n                        color=\"inherit\"\r\n                        href={`/${ config.rootRoute }/auth/login`}>\r\n                        Back to login\r\n                    </Link>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword","// import { useState, useContext } from 'react'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/context/accountContext'\r\n\r\nconst Home = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography>Home Content</Typography>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Home","// import React, { useState, useEffect, useContext } from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\n// import TextField from '@mui/material/TextField'\r\n// import Button from '@mui/material/Button'\r\n// import AccountContext from '../../../common/context/accountContext'\r\n\r\n\r\nconst AccountView = (props) => {\r\n\r\n    return (\r\n        <Box>\r\n            Account credentials View\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={6}></Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AccountView","import React, { useEffect, useContext } from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport TextField from '@mui/material/TextField'\r\nimport Button from '@mui/material/Button'\r\nimport AccountContext from '../../../common/context/accountContext'\r\n\r\nconst AccountEdit = (props) => {\r\n    const accountCtx = useContext(AccountContext)\r\n\r\n    useEffect(() => {\r\n        console.log('data in account edit: ', accountCtx.accountContext)\r\n\r\n    },[accountCtx.accountContext])\r\n\r\n    return (\r\n        <Box>\r\n            <Grid container spacing={2}>\r\n                {/* <Grid item xs={12}>\r\n                    Account Edit\r\n                </Grid> */}\r\n                <Grid item xs={12} md={6} sx={{textAlign: {xs: 'center', md: 'right'}}}>\r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        Required Fields\r\n                    </Grid>\r\n\r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"outlined-required\"\r\n                            label=\"Required\"\r\n                            defaultValue=\"Hello World\" />\r\n                    </Grid>\r\n                    \r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"outlined-required\"\r\n                            label=\"Required\"\r\n                            defaultValue=\"Hello World\" />\r\n                    </Grid>\r\n\r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"outlined-required\"\r\n                            label=\"Required\"\r\n                            defaultValue=\"Hello World\" />\r\n                    </Grid>\r\n\r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        <Button variant=\"contained\">Primary</Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6} sx={{textAlign: {xs: 'center', md: 'left'}}}>\r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        Required Fields\r\n                    </Grid>\r\n\r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"outlined-required\"\r\n                            label=\"Required\"\r\n                            defaultValue=\"Hello World\" />\r\n                    </Grid>\r\n                    \r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"outlined-required\"\r\n                            label=\"Required\"\r\n                            defaultValue=\"Hello World\" />\r\n                    </Grid>\r\n\r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"outlined-required\"\r\n                            label=\"Required\"\r\n                            defaultValue=\"Hello World\" />\r\n                    </Grid>\r\n\r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        <Button variant=\"contained\">Primary</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AccountEdit","import Grid from '@mui/material/Grid'\r\n\r\n// import AccountContext from '../../common/context/accountContext'\r\nimport AccountView from './components/accountCredentialsView'\r\nimport AccountEdit from './components/accountCredentialsEdit'\r\n\r\nconst AccountCredentials = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                {/* <Typography>Account Core Content</Typography> */}\r\n                <AccountView />\r\n                <AccountEdit />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default AccountCredentials","// import { useState, useContext } from 'react'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/context/accountContext'\r\n\r\nconst AccountProfile = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography>Account Profile Content</Typography>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default AccountProfile","// import { useState, useContext } from 'react'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/context/accountContext'\r\n\r\nconst AccountSettings = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography>Account Settings Content</Typography>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default AccountSettings","import config from '../../../config'\r\nimport MailIcon from '@mui/icons-material/Mail'\r\nimport SettingsApplicationsIcon from '@mui/icons-material/SettingsApplications'\r\nimport LinkIcon from '@mui/icons-material/Link'\r\nimport AccessibilityNewIcon from '@mui/icons-material/AccessibilityNew'\r\nimport SettingsAccessibilityIcon from '@mui/icons-material/SettingsAccessibility';\r\nimport PeopleIcon from '@mui/icons-material/People'\r\n\r\nconst Pages = [\r\n    [\r\n        {\r\n            component: <SettingsApplicationsIcon />,\r\n            label: 'App Settings',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/admin/appSettings`\r\n        },\r\n        {\r\n            component: <LinkIcon />,\r\n            label: 'Endpoints',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/admin/appEndpoints`\r\n        },\r\n        {\r\n            component: <AccessibilityNewIcon />,\r\n            label: 'Role',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/admin/appRoles`\r\n        },\r\n        {\r\n            component: <SettingsAccessibilityIcon />,\r\n            label: 'Role Endpoints',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/admin/appRoleEndpoints`\r\n        },\r\n        {\r\n            component: <PeopleIcon />,\r\n            label: 'App Users',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/admin/appUsers`\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            component: <MailIcon />,\r\n            label: 'Notes',\r\n            type: 'action',\r\n            value: 'notes'\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            // component: <MailIcon />,\r\n            label: 'Notes II',\r\n            type: 'action',\r\n            value: 'notes II'\r\n        }\r\n    ]\r\n]\r\n\r\nexport default Pages","import { matchPath } from 'react-router'\r\nimport { useTheme } from '@mui/material/styles'\r\nimport { useLocation } from 'react-router-dom'\r\nimport MobileStepper from '@mui/material/MobileStepper'\r\nimport Button from '@mui/material/Button'\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft'\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight'\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight'\r\nimport Divider from '@mui/material/Divider'\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs'\r\nimport Link from '@mui/material/Link'\r\n\r\nconst PaginatedNav = (props) => {\r\n\r\n    const theme = useTheme();\r\n    const location = useLocation()\r\n\r\n    const handleNext = (navs, aNav) => {\r\n        let nextNav = aNav + 1\r\n\r\n        if (props.onChangeNav) props.onChangeNav(navs[nextNav])\r\n    }\r\n\r\n    const handleBack = (navs, aNav) => {\r\n        let nextNav = aNav - 1\r\n\r\n        if (props.onChangeNav) props.onChangeNav(navs[nextNav])\r\n    }\r\n\r\n    let activeNav = 0\r\n    let navs = (props.navMenu || [])\r\n        .reduce((acc, item) => {\r\n            acc = [...acc, ...item]\r\n            return acc\r\n        }, [])\r\n        .filter(item => item.type === 'link')\r\n        .map(item => ({\r\n            type: item.type,\r\n            value: item.value,\r\n            label: item.label\r\n        }))\r\n\r\n    navs.forEach((item, index) => {\r\n\r\n        let match = matchPath(\r\n            {\r\n                path: item.value,\r\n                exact: true,\r\n                strict: true\r\n            },\r\n            location.pathname\r\n        )\r\n\r\n        if (match) activeNav = index\r\n    })\r\n\r\n    let currentNav = navs[activeNav]\r\n    let locationRoutes = currentNav.value.split('/')\r\n\r\n    // clean and create breadcrumbs items\r\n    locationRoutes = locationRoutes.filter((item, index) => {\r\n        if (!Boolean(item)) return false\r\n        if (index >= locationRoutes.length - 1) return false\r\n\r\n        return true\r\n    })\r\n\r\n    let disabledNext = activeNav === (navs.length - 1)\r\n    let disabledBack = activeNav === 0\r\n\r\n    let routeOnTop = typeof props.routeOnTop === 'boolean'? props.routeOnTop: true\r\n\r\n    const generateBreadCrumbs = () => {\r\n        return (\r\n            <Breadcrumbs\r\n                style={{padding: 10}}\r\n                separator={<ArrowRightIcon fontSize=\"small\" />}\r\n                aria-label=\"breadcrumb\">\r\n                {\r\n                    locationRoutes.map((item, index) => (\r\n                        <Link\r\n                            key={'breadcrumb_' + index}\r\n                            underline=\"none\"\r\n                            fontSize=\"small\"\r\n                            color=\"inherit\">\r\n                            { item.toUpperCase() }\r\n                        </Link>\r\n                    ))\r\n                }\r\n                <Link\r\n                    underline=\"none\"\r\n                    color=\"text.primary\"\r\n                    fontSize=\"small\"\r\n                    aria-current=\"page\">\r\n                    { currentNav.label.toUpperCase() }\r\n                </Link>\r\n            </Breadcrumbs>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                routeOnTop? (\r\n                    <>\r\n                        { generateBreadCrumbs() }\r\n                        <Divider />\r\n                    </>\r\n                ): null\r\n            }\r\n\r\n\r\n            <MobileStepper\r\n                steps={ navs.length }\r\n                variant=\"dots\"\r\n                position=\"static\"\r\n                activeStep={ activeNav }\r\n                sx={{ maxWidth: '100%', flexGrow: 1 }}\r\n                nextButton={\r\n                    <Button size=\"small\" onClick={ () => handleNext(navs, activeNav) } disabled={ disabledNext }>\r\n                        { disabledNext? 'Next':  navs[activeNav + 1].label }\r\n                        { theme.direction === 'rtl' ? <KeyboardArrowLeft />: <KeyboardArrowRight /> }\r\n                    </Button>\r\n                }\r\n                backButton={\r\n                    <Button size=\"small\" onClick={() => handleBack(navs, activeNav) } disabled={ disabledBack }>\r\n                        { theme.direction === 'rtl' ?  <KeyboardArrowRight />: <KeyboardArrowLeft /> }\r\n                        { disabledBack? 'Back':  navs[activeNav - 1].label }\r\n                    </Button>\r\n                } />\r\n            \r\n            \r\n            {\r\n                !routeOnTop? (\r\n                    <>\r\n                        <Divider />\r\n                        { generateBreadCrumbs() }\r\n                    </>\r\n                ): null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaginatedNav","import React, {useContext, useState, useEffect, useRef} from 'react'\r\nimport { matchPath } from 'react-router'\r\nimport { useLocation } from 'react-router-dom'\r\n// import { useNavigate } from 'react-router-dom'\r\nimport Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Divider from '@mui/material/Divider'\r\n// import MenuList from '@mui/material/MenuList'\r\n// import MenuItem from '@mui/material/MenuItem'\r\nimport List from '@mui/material/List'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport ListItemIcon from '@mui/material/ListItemIcon'\r\nimport ListItemText from '@mui/material/ListItemText'\r\n// import Check from '@mui/icons-material/Check'\r\nimport Drawer from '@mui/material/Drawer'\r\nimport Toolbar from '@mui/material/Toolbar'\r\n\r\nimport PaginatedNav from '../../common/navs/paginatedNav'\r\nimport RouterContext from '../../common/context/routerContext'\r\n\r\nconst drawerWidth = 200\r\nconst navAnchors = new Set(['left', 'right'])\r\n\r\nconst SubPagesLayout = (props) => {\r\n\r\n    // default to left when no anchore is setted\r\n    const navAnchor = props.navAnchor && navAnchors.has(props.navAnchor)? props.navAnchor: 'left'\r\n\r\n    const routerCtx = useContext(RouterContext)\r\n    const location = useLocation()\r\n    const [veryLong, setVeryLong] = useState(false)\r\n    const mainSection = useRef()\r\n    // const navigate = useNavigate()\r\n\r\n    const onClickNav = (e) => {\r\n        // check for event info\r\n        if (e && e.type) {\r\n          // navigate to routes if the its a link\r\n          if (e.type === 'link') {\r\n            routerCtx.setRouterContext(e.value)\r\n    \r\n          // callback nav value if its an action\r\n          } else if (e.type === 'action') {\r\n            //  check for callback property\r\n            if (props.onAction && typeof props.onAction == 'function') {\r\n              props.onAction(e.value)\r\n            }\r\n          }\r\n        }\r\n    \r\n        // return will imediately end the method in the stack\r\n        return\r\n    }\r\n\r\n    const generateDrawerItems = (anchor, itemsGroup) => {\r\n\r\n        return (\r\n          <Box\r\n            role='presentation'>\r\n            {\r\n              itemsGroup.map((items, itemsIndex) => {\r\n                return (\r\n                  <React.Fragment key={anchor + '_groupItemsFragment_' + itemsIndex}>\r\n                    <List key={anchor + '_groupItems_' + itemsIndex}>\r\n                      {\r\n                        items.map((item, index) => {\r\n                          let match = null\r\n\r\n                          // proceed to matching if item is a link\r\n                          if (item.type === 'link') {\r\n                            match = matchPath(\r\n                              {\r\n                                path: item.value,\r\n                                exact: true,\r\n                                strict: true\r\n                              },\r\n                              location.pathname\r\n                            )\r\n                          }\r\n\r\n                          return (\r\n                            <ListItem\r\n                              button\r\n                              selected={ Boolean(match) }\r\n                              onClick={(e) => {\r\n                                onClickNav({type: item.type, value: item.value})\r\n                              }}\r\n                              key={anchor + '_groupChildItems_' + itemsIndex + '_' + index}>\r\n                              <ListItemIcon>\r\n                                { item.component? item.component: null }\r\n                              </ListItemIcon>\r\n                              <ListItemText primary={item.label} />\r\n                            </ListItem>\r\n                          )\r\n                        })\r\n                      }\r\n                    </List>\r\n    \r\n                    {/* divider */}\r\n                    { itemsIndex < itemsGroup.length -1? <Divider key={anchor + '_groupDivider_' + itemsIndex} />: null }\r\n                  </React.Fragment>\r\n                )\r\n              })\r\n            }\r\n          </Box>\r\n        )\r\n    }\r\n\r\n    // if (mainSection && mainSection.current && mainSection.current.clientHeight) {\r\n    //   console.log(mainSection.current.clientHeight)\r\n    // }\r\n    useEffect(() => {\r\n      const onScroll = () => {\r\n        let mainSectionHeight = 0\r\n        let windowHeight = window.innerHeight\r\n\r\n        if (mainSection && mainSection.current && mainSection.current.clientHeight) {\r\n          mainSectionHeight = mainSection.current.clientHeight\r\n\r\n          setVeryLong(mainSectionHeight >= windowHeight)\r\n        }\r\n      }\r\n\r\n      window.addEventListener('scroll', onScroll)\r\n      return () => {\r\n        window.removeEventListener('scroll', onScroll)\r\n      }\r\n    }, [])\r\n\r\n    return (\r\n        <Container maxWidth='lg'>\r\n            <Box>\r\n                <Drawer\r\n                    variant='permanent'\r\n                    anchor={navAnchor}\r\n                    sx={{\r\n                        display: { xs: 'none', sm: 'none', md: 'block' },\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n                    }}\r\n                    open>\r\n                    <Toolbar />\r\n                    <Divider />\r\n                    { generateDrawerItems('subPagesNav', props.navMenu? props.navMenu: []) }\r\n                </Drawer>\r\n                <Grid container spacing={2}>\r\n                    {\r\n                      navAnchor === 'left'? (\r\n                        <Grid\r\n                          item md={3} lg={2} xl={1}\r\n                          sx={{ display: { xs: 'none', sm: 'block' }}}>\r\n                        </Grid>\r\n                      ): null\r\n                    }\r\n\r\n                    <Grid item xs={12} sm={12} md={9} lg={10} xl={11} style={{textAlign: 'center'}}>\r\n                        <Box\r\n                          sx={{\r\n                            display: { sm: 'block', md: 'none' },\r\n                          }}>\r\n                          <PaginatedNav\r\n                            navMenu={ props.navMenu }\r\n                            onChangeNav={(e) => {\r\n                              onClickNav({type: e.type, value: e.value})\r\n                            }} />\r\n                        </Box>\r\n                        <Box ref={mainSection}>\r\n                            { props.children? props.children: null }\r\n                        </Box>\r\n                        \r\n                        {/* show pagination when in mobile view and when the page is long */}\r\n                        {\r\n                          veryLong? (\r\n                            <Box\r\n                              sx={{\r\n                                display: { sm: 'block', md: 'none' },\r\n                              }}>\r\n                              <PaginatedNav\r\n                                routeOnTop={false}\r\n                                navMenu={ props.navMenu }\r\n                                onChangeNav={(e) => {\r\n                                  onClickNav({type: e.type, value: e.value})\r\n                                }} />\r\n                            </Box>\r\n                          ): null\r\n                        }\r\n                    </Grid>\r\n\r\n                    {\r\n                      navAnchor === 'right'? (\r\n                        <Grid\r\n                          item md={3} lg={2} xl={1}\r\n                          sx={{ display: { xs: 'none', sm: 'block' }}}>\r\n                        </Grid>\r\n                      ): null\r\n                    }\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SubPagesLayout","// import { useState, useContext } from 'react'\r\nimport subpages from './lib/subPages'\r\n\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/context/accountContext'\r\n\r\nconst AppSettings = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Grid item xs={12}>\r\n                <Typography>App Settings</Typography>\r\n            </Grid>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default AppSettings","// import { useState, useContext } from 'react'\r\nimport subpages from './lib/subPages'\r\n\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/context/accountContext'\r\n\r\nconst AppEndpoints = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Grid item xs={12}>\r\n                <Typography>App Endpoints</Typography>\r\n            </Grid>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default AppEndpoints","// import { useState, useContext } from 'react'\r\nimport subpages from './lib/subPages'\r\n\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/context/accountContext'\r\n\r\nconst AppRoles = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Grid item xs={12}>\r\n                <Typography>App Roles</Typography>\r\n            </Grid>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default AppRoles","// import { useState, useContext } from 'react'\r\nimport subpages from './lib/subPages'\r\n\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/context/accountContext'\r\n\r\nconst AppRoleEndpoints = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Grid item xs={12}>\r\n                <Typography>App Role Endpoints</Typography>\r\n            </Grid>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default AppRoleEndpoints","// import { useState, useContext } from 'react'\r\nimport subpages from './lib/subPages'\r\n\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/context/accountContext'\r\n\r\nconst AppUsers = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Grid item xs={12}>\r\n                <Typography>App Users</Typography>\r\n            </Grid>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default AppUsers","import config from '../../../config'\r\nimport CommitIcon from '@mui/icons-material/Commit'\r\n\r\nconst Pages = [\r\n    [\r\n        {\r\n            component: <CommitIcon />,\r\n            label: 'Introduction',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/demo/introduction`\r\n        },\r\n        {\r\n            component: <CommitIcon />,\r\n            label: 'Buttons',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/demo/buttons`\r\n        },\r\n        {\r\n            component: <CommitIcon />,\r\n            label: 'Inputs',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/demo/inputs`\r\n        },\r\n        {\r\n            component: <CommitIcon />,\r\n            label: 'Navigations',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/demo/navigations`\r\n        }\r\n    ]\r\n]\r\n\r\nexport default Pages","// import { useState, useContext } from 'react'\r\nimport subpages from './lib/subPages'\r\n\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/context/accountContext'\r\n\r\nconst Introduction = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Grid item xs={12}>\r\n                <Typography>Introduction</Typography>\r\n            </Grid>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default Introduction","import { useContext } from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport LocalStorageContext from '../context/localStorageContext'\r\nimport { CodeBlock, vs2015, atomOneLight } from \"react-code-blocks\"\r\n// import CircularProgress from '@mui/material/CircularProgress'\r\n\r\nconst CodeBlockComponent = (props) => {\r\n    const {localStorageContext} = useContext(LocalStorageContext)\r\n\r\n    let themeMode = localStorageContext.themeMode\r\n    let defaultTheme = themeMode === 'dark'? vs2015: atomOneLight\r\n    \r\n    return (\r\n        <Box style={props.style? props.style: {}}>\r\n            <CodeBlock\r\n                text={props.text? props.text: ''}\r\n                language={props.language? props.language: 'javascript'}\r\n                showLineNumbers={Boolean(props.showLineNumbers)}\r\n                theme={props.theme? props.theme: defaultTheme} />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CodeBlockComponent","// import { useState, useContext } from 'react'\r\nimport subpages from './lib/subPages'\r\n\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\nimport CodeBlock from '../../common/blocks/codeBlock'\r\n\r\n// import AccountContext from '../../common/context/accountContext'\r\n\r\nconst testCode = `\r\nimport React from 'react'\r\nimport Button from '@mui/material/Button'\r\nimport CircularProgress from '@mui/material/CircularProgress'\r\n\r\nconst LoadingButton = (props) => {\r\n\r\n    let properties = {}\r\n\r\n    // properties not tobe included\r\n    let xProps = new Set(['isLoading'])\r\n\r\n    // assign object properties\r\n    Object.keys(props).forEach(key => {\r\n        if (xProps.has(key)) return\r\n        properties[key] = props[key]\r\n    })\r\n\r\n    // start icon\r\n    let startIcon = props.startIcon? props.startIcon: null\r\n\r\n    // if isLoading is true, set disabled to true\r\n    if (props.isLoading) {\r\n        startIcon = <CircularProgress size={12} />\r\n        properties.disabled = true\r\n    }\r\n\r\n    return (\r\n        <Button\r\n            {...properties}\r\n            startIcon={ startIcon }>\r\n            { props.children? props.children: '' }\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default LoadingButton\r\n`\r\n\r\nconst Buttons = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n    \r\n\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Grid item xs={12}>\r\n                <Typography>Buttons</Typography>\r\n\r\n                <CodeBlock\r\n                    style={{\r\n                        textAlign: 'left',\r\n                        margin: 'auto'\r\n                    }}\r\n                    text={testCode}\r\n                    language={'jsx'}\r\n                    showLineNumbers={true}\r\n                    theme={null} />\r\n            </Grid>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default Buttons","// import { useState, useContext } from 'react'\r\nimport subpages from './lib/subPages'\r\n\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/context/accountContext'\r\n\r\nconst Inputs = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Grid item xs={12}>\r\n                <Typography>Inputs</Typography>\r\n            </Grid>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default Inputs","// import { useState, useContext } from 'react'\r\nimport subpages from './lib/subPages'\r\n\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/context/accountContext'\r\n\r\nconst Navs = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Grid item xs={12}>\r\n                <Typography>Navigations</Typography>\r\n            </Grid>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default Navs","// import { useState, useContext } from 'react'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\nconst NotFound = (props) => {\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography\r\n                    style={{marginTop: '5%'}}\r\n                    color='secondary'\r\n                    variant='h4'\r\n                    gutterBottom\r\n                    component='div'>\r\n                    Error 404 not found Content.\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default NotFound","// import { useState } from 'react'\r\nimport {\r\n    Navigate,\r\n    BrowserRouter,\r\n    Routes,\r\n    Route\r\n} from 'react-router-dom'\r\n\r\n// layouts components\r\nimport PublicPageLayout from '../common/layouts/publicPageLayout'\r\nimport AuthLayout from '../common/layouts/authLayout'\r\nimport MainLayout from '../common/layouts/mainLayout'\r\n\r\n// auth pages\r\nimport Login from './auth/login'\r\nimport Logout from './auth/logout'\r\nimport ResetPassword from './auth/resetPassword'\r\nimport ForgotPassword from './auth/forgotPassword'\r\n\r\n// root pages\r\nimport Home from './home'\r\n\r\n// acount pages\r\nimport AccountCredentials from './account/accountCredentials'\r\nimport AccountProfile from './account/accountProfile'\r\nimport AccountSettings from './account/accountSettings'\r\n\r\n// admin pages\r\nimport AppSettings from './admin/appSettings'\r\nimport AppEndpoints from './admin/appEndpoints'\r\nimport AppRoles from './admin/appRoles'\r\nimport AppRoleEndpoints from './admin/appRoleEndpoints'\r\nimport AppUsers from './admin/appUsers'\r\n\r\n// demo pages\r\nimport DemoIntroduction from './demo/introduction'\r\nimport DemoButtons from './demo/buttons'\r\nimport DemoInputs from './demo/inputs'\r\nimport DemoNavigations from './demo/navs'\r\n\r\n// error page\r\nimport NotFound from './notFound'\r\n\r\nimport config from '../config'\r\n\r\nconst Pages = (props) => {\r\n    // console.log(config)\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Routes>\r\n                {/* initial redirect */}\r\n                <Route path=\"/\" element={<Navigate replace to={`/${ config.rootRoute }/auth/login`} />} />\r\n\r\n                {/* auth pages */}\r\n                <Route path={`${ config.rootRoute }/auth/`} element={<AuthLayout />}>\r\n                    <Route path=\"\" element={<Navigate replace to={`/${ config.rootRoute }/auth/login`} />} />\r\n                    <Route path=\"login\" element={<Login />} />\r\n                    <Route path=\"logout\" element={<Logout />} />\r\n                    <Route path=\"resetPassword\" element={<ResetPassword />} />\r\n                    <Route path=\"resetPassword/:key\" element={<ResetPassword />} />\r\n                    <Route path=\"forgotPassword\" element={<ForgotPassword />} />\r\n                </Route>\r\n\r\n                {/* Root pages */}\r\n                <Route path={`${ config.rootRoute }/`} element={<MainLayout />}>\r\n                    <Route path=\"\" element={<Navigate replace to={`/${ config.rootRoute }/home`} />} />\r\n                    <Route path=\"home\" element={<Home />} />\r\n                </Route>\r\n\r\n                {/* Account pages */}\r\n                <Route path={`${ config.rootRoute }/account/`} element={<MainLayout />}>\r\n                    <Route path=\"\" element={<Navigate replace to={`/${ config.rootRoute }/account/credentials`} />} />\r\n                    <Route path=\"credentials\" element={<AccountCredentials />} />\r\n                    <Route path=\"profile\" element={<AccountProfile />} />\r\n                    <Route path=\"settings\" element={<AccountSettings />} />\r\n                </Route>\r\n\r\n                {/* Admin pages */}\r\n                <Route path={`${ config.rootRoute }/admin/`} element={<MainLayout />}>\r\n                    <Route path=\"\" element={<Navigate replace to={`/${ config.rootRoute }/admin/appSettings`} />} />\r\n                    <Route path=\"appSettings\" element={<AppSettings />} />\r\n                    <Route path=\"appEndpoints\" element={<AppEndpoints />} />\r\n                    <Route path=\"appRoles\" element={<AppRoles />} />\r\n                    <Route path=\"appRoleEndpoints\" element={<AppRoleEndpoints />} />\r\n                    <Route path=\"appUsers\" element={<AppUsers />} />\r\n                </Route>\r\n\r\n                {/* Demo pages */}\r\n                <Route path={`${ config.rootRoute }/demo/`} element={<MainLayout />}>\r\n                    <Route path=\"\" element={<Navigate replace to={`/${ config.rootRoute }/demo/introduction`} />} />\r\n                    <Route path=\"introduction\" element={<DemoIntroduction />} />\r\n                    <Route path=\"buttons\" element={<DemoButtons />} />\r\n                    <Route path=\"inputs\" element={<DemoInputs />} />\r\n                    <Route path=\"navigations\" element={<DemoNavigations />} />\r\n                </Route>\r\n\r\n                {/* error page */}\r\n                <Route\r\n                    path='*'\r\n                    element={\r\n                        <PublicPageLayout>\r\n                            <NotFound />\r\n                        </PublicPageLayout>\r\n                    }></Route>\r\n            </Routes>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Pages","// import React, { useStates, useEffect } from 'react'\r\nimport AccountContext, { UseAccountContext } from './common/context/accountContext'\r\nimport LocalStorageContext, { UseLocalStorageContext } from './common/context/localStorageContext'\r\n// import RouterContext, { UseRouterContext } from './common/context/routerContext'\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles'\r\nimport CssBaseline from '@mui/material/CssBaseline'\r\nimport PrimaryTheme from './common/themes/primary'\r\nimport Pages from './pages'\r\n\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  const accountStates = UseAccountContext()\r\n  const localStorageStates = UseLocalStorageContext()\r\n  // const routerStates = UseRouterContext()\r\n\r\n  let theme = createTheme({\r\n    ...PrimaryTheme,\r\n    ...{\r\n      palette: {\r\n        ...PrimaryTheme.palette,\r\n        ...{ mode: localStorageStates.localStorageContext.themeMode}\r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <LocalStorageContext.Provider\r\n      value={{\r\n        ...localStorageStates\r\n      }}>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <AccountContext.Provider\r\n          value={{\r\n            ...accountStates\r\n          }}>\r\n          {/* <RouterContext.Provider\r\n            value={{\r\n              ...routerStates\r\n            }}> */}\r\n          <Pages />\r\n          {/* </RouterContext.Provider> */}\r\n        </AccountContext.Provider>\r\n      </ThemeProvider>\r\n    </LocalStorageContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}