{"version":3,"sources":["common/themes/primary.js","common/utilities/localStorage.js","config/index.js","common/contexts/localStorageContext.js","common/utilities/index.js","common/contexts/accountContext.js","common/contexts/adminContext.js","common/layouts/publicPageLayout.js","common/themes/themeToggle.jsx","common/layouts/initalLoadingLayout.js","common/contexts/routerContext.js","common/navs/mainNav.jsx","common/layouts/authLayout.js","common/layouts/mainLayout.js","common/buttons/loadingButton.js","pages/auth/login.js","pages/auth/resetPassword.js","pages/auth/forgotPassword.js","pages/home/index.js","pages/notifications/index.js","common/blocks/openCloseBox.js","common/blocks/keyValueBlock.js","common/blocks/genBlock.js","pages/account/components/accountCredentialsView.js","common/navs/verticalStepsNav.jsx","pages/account/components/accountCredentialsEdit.js","pages/account/accountCredentials.js","pages/account/components/accountProfileView.js","common/inputs/radioList.js","pages/account/components/accountProfileEdit.js","pages/account/accountProfile.js","pages/account/components/accountSettingsView.js","pages/account/components/accountSettingsEdit.js","pages/account/accountSettings.js","pages/admin/lib/subPages.js","common/navs/paginatedNav.jsx","common/layouts/subPagesLayout.js","pages/admin/components/appSettingsView.js","pages/admin/components/appSettingsEdit.js","pages/admin/appSettings.js","pages/admin/appEndpoints.js","pages/admin/appRoles.js","pages/admin/appRoleEndpoints.js","pages/admin/appUsers.js","pages/demo/lib/subPages.js","pages/demo/introduction.js","common/blocks/codeBlock.js","pages/demo/buttons.js","common/inputs/checkList.js","pages/demo/inputs.js","common/lists/basicList.js","pages/demo/lists.js","pages/demo/navs.js","pages/demo/blocks.js","pages/notFound/index.js","pages/index.js","App.js","reportWebVitals.js","index.js"],"names":["primary","palette","mode","main","secondary","typography","fontSize","fontFamily","join","LocalStorage","setItem","storeName","obj","jsonValue","JSON","stringify","localStorage","e","getItem","parse","config","appName","environment","rootRoute","localStorageName","notifLength","development","api","staging","production","defaultValue","themeMode","authKey","LocalStorageContext","createContext","localStorageContext","updateLocalStorage","data","toggleThemeMode","commonUtilities","waitFor","sec","Promise","resolve","reject","setTimeout","AccountContext","accountContext","setAccountContext","signIn","signOut","testAccountData","AdminContext","adminContext","setAdminContext","PublicPagelayout","props","Container","maxWidth","Box","Grid","container","spacing","item","xs","style","textAlign","children","ThemeToggle","useContext","display","Boolean","noLabel","Typography","variant","gutterBottom","Switch","size","checked","onChange","InitialLoadinglayout","useState","hasInitialized","setHasInitialized","AccCtx","initalLoading","__isLoading","userDataIsLoading","useEffect","marginTop","alt","width","src","margin","padding","LinearProgress","color","RouterContext","routerContext","setRouterContext","useRouterContext","navigate","useNavigate","MainNav","anchorElRightMenu","setAnchorElRightMenu","leftMenu","rightMenu","drawer","setDrawer","routerCtx","handleCloseRightMenu","toggleDrawer","anchor","open","event","type","key","onClickNav","value","onAction","generateDrawerItems","itemsGroup","role","map","items","itemsIndex","Fragment","List","index","ListItem","button","onClick","ListItemIcon","component","ListItemText","label","length","Divider","AppBar","position","isTransparent","background","boxShadow","Toolbar","disableGutters","noWrap","leftLogo","marginLeft","sx","mr","md","flexGrow","IconButton","Drawer","onClose","Button","my","marginRight","middleMenu","Tooltip","title","rightLogo","currentTarget","p","mt","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","AuthLayout","routerStates","lsCtx","borderRadius","__action","__isLoggedIn","Provider","console","log","paddingTop","paddingBottom","MainLayout","Avatar","cursor","Badge","badgeContent","paddingLeft","LoadingButton","properties","xProps","Set","Object","keys","forEach","has","startIcon","isLoading","CircularProgress","disabled","Login","loginProgress","password","username","errors","internalstates","setInternalStates","login","a","loginResult","TextField","fullWidth","Link","href","ResetPassword","useParams","resetProgress","newPassword","confirmPassword","resetKey","setResetKey","resetPassword","utils","target","InputProps","endAdornment","InputAdornment","edge","ForgotPassword","forgotProgress","addressType","addressValue","forgotRequest","ToggleButtonGroup","exclusive","method","ToggleButton","email","phone","Home","Notifications","OpenCloseBox","isOpen","zIndex","left","top","btnIcon","onOpen","btnLabel","styles","lineBreak","td","paddingRight","verticalAlign","KeyValueBlock","border","cellSpacing","row","rowIndex","GenBlockComponent","marginBottom","Skeleton","animation","height","replace","toLowerCase","description","textIndent","AccountView","setIsLoading","sm","VerticalLinearStepperNav","activeStep","setActiveStep","steps","loadingStates","setLoadingStates","handleNext","result","stps","views","action","prevActiveStep","handleBack","handleFinalAction","finalView","nextLabel","nextBtnLabel","finishLabel","finishBtnlabel","finalLabel","finalBtnLabel","push","Stepper","orientation","step","Step","StepLabel","disableLabelClick","some","fontWeight","StepContent","mb","Paper","square","elevation","caption","AccountEdit","accountCtx","useSnackbar","enqueueSnackbar","closeSnackbar","icon","required","persist","autoHideDuration","AccountCredentials","openUpdate","states","setStates","AccountProfileView","RadioList","selected","colNum","propSize","colSize","values","every","Math","min","list","groupList","groupSize","ceil","i","slice","subList","subListIndex","FormGroup","FormControlLabel","control","Radio","name","radioListName","grid","fields","AccountProfileEdit","uploadProfilePicRef","useRef","accept","ref","hidden","current","click","rows","multiline","AccountProfile","AccountSettingsView","AccountSettingsEdit","AccountSettings","Pages","PaginatedNav","theme","useTheme","location","useLocation","activeNav","navs","navMenu","reduce","acc","filter","matchPath","path","exact","strict","pathname","currentNav","locationRoutes","split","disabledNext","disabledBack","routeOnTop","generateBreadCrumbs","Breadcrumbs","separator","underline","toUpperCase","MobileStepper","nextButton","aNav","nextNav","onChangeNav","direction","backButton","navAnchors","SubPagesLayout","navAnchor","veryLong","setVeryLong","mainSection","match","onScroll","mainSectionHeight","windowHeight","window","innerHeight","clientHeight","addEventListener","removeEventListener","lg","AppSettingsView","AppSettingsEdit","AppSettings","subpages","AppEndpoints","AppRoles","AppRoleEndpoints","AppUsers","Introduction","CodeBlockComponent","defaultTheme","vs2015","atomOneLight","rendered","fontStyle","code","text","language","showLineNumbers","Buttons","CheckList","Checkbox","Inputs","setItems","selectedRadio","setSelectedRadio","checkItems","variants","BasicList","itemCount","dense","minWidth","Lists","Navs","testCodeBlockDescription","Blocks","NotFound","element","to","App","adminStates","useAdminContext","accountStates","storageName","lsVal","init","useAccountContext","localStorageStates","setLocalStorageContext","newStorageVal","store","useLocalStorageContext","createTheme","PrimaryTheme","ThemeProvider","CssBaseline","maxSnack","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b386ef2b.chunk.js","sourcesContent":["const primary = {\r\n    palette: {\r\n        mode: 'dark',\r\n        primary: {\r\n            main: '#176a75',\r\n        },\r\n        secondary: {\r\n            main: '#dc195b',\r\n        }\r\n    },\r\n    typography: {\r\n        fontSize: 14,\r\n        fontFamily: [\r\n          '-apple-system',\r\n          'BlinkMacSystemFont',\r\n          '\"Segoe UI\"',\r\n          'Roboto',\r\n          '\"Helvetica Neue\"',\r\n          'Arial',\r\n          'sans-serif',\r\n          '\"Apple Color Emoji\"',\r\n          '\"Segoe UI Emoji\"',\r\n          '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n    },\r\n}\r\n\r\nexport default primary","const LocalStorage = {\r\n    setItem(storeName, obj) {\r\n        try {\r\n            const jsonValue = JSON.stringify(obj)\r\n            localStorage.setItem(storeName, jsonValue)\r\n        } catch (e) {\r\n            // saving error\r\n            return\r\n        }\r\n    },\r\n\r\n    getItem(storeName) {\r\n        try {\r\n            const jsonValue = localStorage.getItem(storeName)\r\n            return jsonValue != null ? JSON.parse(jsonValue) : null\r\n        } catch(e) {\r\n            // error reading value\r\n            return\r\n        }\r\n    }\r\n};\r\n\r\nexport default LocalStorage;","let config = {\r\n    appName: 'kagiweb',\r\n    environment: 'development',\r\n    rootRoute: 'core',\r\n    localStorageName: 'app_info',\r\n    notifLength: 5,\r\n    // environment: 'staging'\r\n    // environment: 'production'\r\n    development: {\r\n        api: 'http://localhost:5000'\r\n    },\r\n    staging: {\r\n        api: 'http://localhost:5000'\r\n    },\r\n    production: {\r\n        api: 'http://localhost:5000'\r\n    }\r\n}\r\n\r\nconfig = {...config, ...config[config.environment]}\r\n\r\ndelete config.development\r\ndelete config.staging\r\ndelete config.production\r\n\r\nexport default config","import { useEffect, useState, createContext } from 'react'\r\nimport LocalStorage from '../utilities/localStorage'\r\nimport config from '../../config'\r\n\r\nlet defaultValue = {\r\n    themeMode: 'light',\r\n    authKey: null\r\n}\r\n\r\nconst LocalStorageContext = createContext({\r\n    localStorageContext: defaultValue,\r\n    updateLocalStorage(data) { return },\r\n    toggleThemeMode() { return }\r\n})\r\nexport default LocalStorageContext\r\n\r\nexport const useLocalStorageContext = () => {\r\n    const storageName = config.localStorageName\r\n    const [localStorageContext, setLocalStorageContext] = useState({})\r\n\r\n    const updateLocalStorage = (obj) => {\r\n        let newStorageVal = {...localStorageContext, ...obj}\r\n        setLocalStorageContext(newStorageVal)\r\n        LocalStorage.setItem(storageName, newStorageVal)\r\n    }\r\n\r\n    const toggleThemeMode = () => {\r\n        let themeMode = localStorageContext.themeMode\r\n        let newThemeMode = (themeMode && themeMode === 'light')? 'dark': 'light'\r\n        updateLocalStorage({themeMode: newThemeMode})\r\n    }\r\n\r\n    useEffect(() => {\r\n        let init = () => {\r\n            let store = LocalStorage.getItem(storageName)\r\n\r\n            if (store) {\r\n                setLocalStorageContext(store)\r\n            } else {\r\n                setLocalStorageContext(defaultValue)\r\n                LocalStorage.setItem(storageName, defaultValue)\r\n            }\r\n        }\r\n\r\n        init()\r\n\r\n    }, [])\r\n\r\n    return {\r\n        localStorageContext,\r\n        updateLocalStorage,\r\n        toggleThemeMode\r\n    }\r\n}","// import moment from 'moment'\r\n\r\nconst commonUtilities = {\r\n    waitFor(sec) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => resolve(true), sec * 1e3)\r\n        })\r\n    }\r\n}\r\n\r\nexport default commonUtilities","import { useState, useEffect, createContext } from 'react'\r\nimport config from '../../config'\r\nimport utils from '../utilities'\r\nimport LocalStorage from '../utilities/localStorage'\r\n\r\nconst AccountContext = createContext({\r\n    accountContext: {},\r\n    setAccountContext(data) { return },\r\n    signIn() { return },\r\n    signOut() { return }\r\n})\r\nexport default AccountContext\r\n\r\nexport const useAccountContext = () => {\r\n    const storageName = config.localStorageName\r\n\r\n    const [accountContext, setAccountContext] = useState({})\r\n\r\n    const signIn = async ({username, password}) => {\r\n      console.log('account data is being fetched by signing in')\r\n      setAccountContext({\r\n        ...accountContext,\r\n        ...{\"__isLoading\": true}\r\n      })\r\n      await utils.waitFor(2)\r\n      setAccountContext(testAccountData)\r\n      console.log('account data has loaded')\r\n      return { authKey: 'berear_test123' }\r\n    }\r\n\r\n    const signOut = async () => {\r\n      setAccountContext({\"__isLoading\": false})\r\n    }\r\n\r\n    useEffect(() => {\r\n      // check auth key if it exist\r\n      // console.log('authKey: ', lsCtx.localStorageContext.authKey)\r\n      let localStoreVal = LocalStorage.getItem(storageName)\r\n      let lsVal = localStoreVal? localStoreVal: {}\r\n\r\n      // if a token exist, then fetch user value using the token\r\n      let init = async () => {\r\n        if (lsVal.authKey) {\r\n          console.log('account data is being fetched by using authKey')\r\n          setAccountContext({\r\n            ...accountContext,\r\n            ...{\"__isLoading\": true}\r\n          })\r\n          await utils.waitFor(3)\r\n          setAccountContext(testAccountData)\r\n          console.log('account data has loaded')\r\n        } else {\r\n          setAccountContext({\r\n            ...accountContext,\r\n            ...{\"__isLoading\": false}\r\n          })\r\n        }\r\n      }\r\n\r\n      init()\r\n\r\n    }, [])\r\n\r\n    return {\r\n      accountContext,\r\n      setAccountContext,\r\n      signIn,\r\n      signOut\r\n    }\r\n}\r\n\r\nconst testAccountData = {\r\n    \"__isLoading\": false,\r\n    \"__isLoggedIn\": true,\r\n    \"id\": \"e79c8692-4cc2-4971-a52c-832e87b27e7f\",\r\n    \"username\": \"gilbert95\",\r\n    \"twoFactorAuth\": false,\r\n    \"disableAccount\": false,\r\n    \"primaryEmail\": null,\r\n    \"secondayEmail\": null,\r\n    \"primaryEmailVerified\": false,\r\n    \"secondaryEmailVerified\": false,\r\n    \"primaryNumber\": null,\r\n    \"secondayNumber\": null,\r\n    \"primaryNumberVerified\": false,\r\n    \"secondaryNumberVerified\": false,\r\n    \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n    \"updatedAt\": \"2021-11-20T15:27:31.513Z\",\r\n    \"roleId\": \"6b1b7d6a-c325-4908-912c-f485078a53fc\",\r\n    \"role\": {\r\n        \"id\": \"e79c8692-4cc2-4971-a52c-832e87b46e8f\",\r\n        \"name\": \"Super admin\",\r\n        \"description\": \"Has access to all endpoints\",\r\n        \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n        \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n    },\r\n    \"claims\": [\r\n        {\r\n            \"id\": \"e79c8692-4cc2-4971-a52c-832e87b11e8f\",\r\n            \"accountId\": \"e79c8692-4cc2-4971-a52c-832e87b28e8f\",\r\n            \"key\": \"fullName\",\r\n            \"value\": \"Master Account\",\r\n            \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n            \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n          },\r\n          {\r\n            \"id\": \"e79c8692-4cc2-4971-a52c-832e87b12e8f\",\r\n            \"accountId\": \"e79c8692-4cc2-4971-a52c-832e87b28e8f\",\r\n            \"key\": \"gender\",\r\n            \"value\": \"Male\",\r\n            \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n            \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n          },\r\n          {\r\n            \"id\": \"e79c8692-4cc2-4971-a52c-832e87b13e8f\",\r\n            \"accountId\": \"e79c8692-4cc2-4971-a52c-832e87b28e8f\",\r\n            \"key\": \"language\",\r\n            \"value\": \"Bisaya\",\r\n            \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n            \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n          },\r\n          {\r\n            \"id\": \"e79c8692-4cc2-4971-a52c-832e87b11e7f\",\r\n            \"accountId\": \"e79c8692-4cc2-4971-a52c-832e87b27e7f\",\r\n            \"key\": \"fullName\",\r\n            \"value\": \"Berto Admin\",\r\n            \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n            \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n          },\r\n          {\r\n            \"id\": \"e79c8692-4cc2-4971-a52c-832e87b12e7f\",\r\n            \"accountId\": \"e79c8692-4cc2-4971-a52c-832e87b27e7f\",\r\n            \"key\": \"gender\",\r\n            \"value\": \"Male\",\r\n            \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n            \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n          },\r\n          {\r\n            \"id\": \"e79c8692-4cc2-4971-a52c-832e87b13e7f\",\r\n            \"accountId\": \"e79c8692-4cc2-4971-a52c-832e87b27e7f\",\r\n            \"key\": \"language\",\r\n            \"value\": \"Bisaya\",\r\n            \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n            \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n          }\r\n    ]\r\n}","import { useState, useEffect, createContext } from 'react'\r\n// import config from '../../config'\r\n// import utils from '../utilities'\r\n// import LocalStorage from '../utilities/localStorage'\r\n\r\nconst AdminContext = createContext({\r\n    adminContext: {},\r\n    setAdminContext(data) { return }\r\n})\r\nexport default AdminContext\r\n\r\nexport const useAdminContext = () => {\r\n    const [adminContext, setAdminContext] = useState({})\r\n\r\n    return {\r\n      adminContext,\r\n      setAdminContext\r\n    }\r\n}\r\n\r\nconst testAdminEndpointsData = [\r\n  {\r\n    id: 'db422ca5-b0a0-43b1-9381-417be994f08e',\r\n    endpoint: '/api/v1/endpoints/new',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'POST',\r\n    description: 'create a single endpoint',\r\n    createdAt: '2021-11-08T06:19:31.163Z',\r\n    updatedAt: '2021-11-08T08:11:11.815Z'\r\n  },\r\n  {\r\n    id: 'e1dd4461-3cb6-4a8c-8b18-2b4aa99e4d5b',\r\n    endpoint: '/api/v1/endpoints/:id',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'PUT',\r\n    description: 'update a single endpoint',\r\n    createdAt: '2021-11-08T08:12:28.774Z',\r\n    updatedAt: '2021-11-08T08:12:28.774Z'\r\n  },\r\n  {\r\n    id: 'e4401d03-bc3f-4ee2-b344-073b638e0b9c',\r\n    endpoint: '/api/v1/endpoints/:id',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'GET',\r\n    description: 'get a single endpoint',\r\n    createdAt: '2021-11-08T08:13:13.994Z',\r\n    updatedAt: '2021-11-08T08:13:13.994Z'\r\n  },\r\n  {\r\n    id: 'c6ff0af1-851c-480c-ba97-69fef72316d2',\r\n    endpoint: '/api/v1/endpoints/:id',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'DELETE',\r\n    description: 'delete a single endpoint',\r\n    createdAt: '2021-11-08T08:11:58.199Z',\r\n    updatedAt: '2021-11-08T08:14:26.998Z'\r\n  },\r\n  {\r\n    id: '1fc0327c-37a3-45e1-90a4-a9fd1893c6e8',\r\n    endpoint: '/api/v1/accounts/new',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'POST',\r\n    description: 'create single account',\r\n    createdAt: '2021-11-08T13:17:53.715Z',\r\n    updatedAt: '2021-11-08T13:17:53.715Z'\r\n  },\r\n  {\r\n    id: 'e02d2dfe-eb9e-4928-b601-888ea6d8c52b',\r\n    endpoint: '/api/v1/accounts/:id',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'GET',\r\n    description: 'get single account',\r\n    createdAt: '2021-11-08T13:18:24.390Z',\r\n    updatedAt: '2021-11-08T13:18:24.390Z'\r\n  },\r\n  {\r\n    id: '0d20f262-d07e-4eb7-a8da-6c0d4854b72e',\r\n    endpoint: '/api/v1/accounts/:id',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'PUT',\r\n    description: 'update single account',\r\n    createdAt: '2021-11-08T13:18:40.558Z',\r\n    updatedAt: '2021-11-08T13:18:40.558Z'\r\n  },\r\n  {\r\n    id: 'dd28b232-0b27-471c-9c10-fd63f0d8d05f',\r\n    endpoint: '/api/v1/accounts/:id',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'DELETE',\r\n    description: 'delete single account',\r\n    createdAt: '2021-11-08T13:18:54.019Z',\r\n    updatedAt: '2021-11-08T13:18:54.019Z'\r\n  },\r\n  {\r\n    id: 'a1890c7f-bd91-4a87-8aa3-cb21cfc1468e',\r\n    endpoint: '/api/v1/accounts',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'GET',\r\n    description: 'bulk fetch accounts',\r\n    createdAt: '2021-11-08T13:20:18.013Z',\r\n    updatedAt: '2021-11-08T13:20:18.013Z'\r\n  },\r\n  {\r\n    id: '01609e17-5afd-47be-92ff-1565a627baea',\r\n    endpoint: '/api/v1/accounts',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'POST',\r\n    description: 'bulk create accounts',\r\n    createdAt: '2021-11-08T13:20:30.454Z',\r\n    updatedAt: '2021-11-08T13:20:30.454Z'\r\n  },\r\n  {\r\n    id: '9785205b-1e7b-4e3b-bb86-ef0cddda3f53',\r\n    endpoint: '/api/v1/accounts',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'PUT',\r\n    description: 'bulk update accounts',\r\n    createdAt: '2021-11-08T13:20:43.055Z',\r\n    updatedAt: '2021-11-08T13:20:43.055Z'\r\n  },\r\n  {\r\n    id: '526999dc-8998-4c47-9971-1d17f4317997',\r\n    endpoint: '/api/v1/roles/new',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'POST',\r\n    description: 'create single role',\r\n    createdAt: '2021-11-08T13:22:46.998Z',\r\n    updatedAt: '2021-11-08T13:22:46.998Z'\r\n  },\r\n  {\r\n    id: '21f92321-dad4-4819-a2dd-45da972008a8',\r\n    endpoint: '/api/v1/roles/:id',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'GET',\r\n    description: 'get single role',\r\n    createdAt: '2021-11-08T13:23:08.220Z',\r\n    updatedAt: '2021-11-08T13:23:08.220Z'\r\n  },\r\n  {\r\n    id: 'f61f1767-0752-4d37-b5d5-cbe24d81f13c',\r\n    endpoint: '/api/v1/roles/:id',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'PUT',\r\n    description: 'update single role',\r\n    createdAt: '2021-11-08T13:23:32.317Z',\r\n    updatedAt: '2021-11-08T13:23:32.317Z'\r\n  },\r\n  {\r\n    id: '929bd67b-27a4-4095-ada1-8c8326a907de',\r\n    endpoint: '/api/v1/roles/:id',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'DELETE',\r\n    description: 'delete single role',\r\n    createdAt: '2021-11-08T13:23:48.731Z',\r\n    updatedAt: '2021-11-08T13:23:48.731Z'\r\n  },\r\n  {\r\n    id: '1572e48d-409f-4fe9-a8ac-cf070419915a',\r\n    endpoint: '/api/v1/roles',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'DELETE',\r\n    description: 'bulk delete roles',\r\n    createdAt: '2021-11-08T13:24:10.326Z',\r\n    updatedAt: '2021-11-08T13:24:10.326Z'\r\n  },\r\n  {\r\n    id: '74918fc2-3941-4214-a170-dcfb234fa066',\r\n    endpoint: '/api/v1/roles',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'GET',\r\n    description: 'bulk fetch roles',\r\n    createdAt: '2021-11-08T13:24:39.841Z',\r\n    updatedAt: '2021-11-08T13:24:39.841Z'\r\n  },\r\n  {\r\n    id: '56f7f65d-3b50-4ddc-8aeb-1e44f2690d73',\r\n    endpoint: '/api/v1/roles',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'POST',\r\n    description: 'bulk create roles',\r\n    createdAt: '2021-11-08T13:24:59.611Z',\r\n    updatedAt: '2021-11-08T13:24:59.611Z'\r\n  },\r\n  {\r\n    id: '6bf63711-8a5c-4374-900b-23d6dec29b5c',\r\n    endpoint: '/api/v1/roles',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'PUT',\r\n    description: 'bulk update roles',\r\n    createdAt: '2021-11-08T13:25:10.494Z',\r\n    updatedAt: '2021-11-08T13:25:10.494Z'\r\n  },\r\n  {\r\n    id: 'cbb7d880-2208-4b57-b365-8821d82213d6',\r\n    endpoint: '/api/v1/endpoints',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'DELETE',\r\n    description: 'bulk delete endpoints',\r\n    createdAt: '2021-11-08T13:13:56.937Z',\r\n    updatedAt: '2021-11-08T13:13:56.937Z'\r\n  },\r\n  {\r\n    id: 'a9aba5d6-b765-48b7-9c4c-fd127f3e7717',\r\n    endpoint: '/api/v1/endpoints',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'GET',\r\n    description: 'bulk fetch endpoints',\r\n    createdAt: '2021-11-08T13:14:30.368Z',\r\n    updatedAt: '2021-11-08T13:14:30.368Z'\r\n  },\r\n  {\r\n    id: '274410c8-eab3-4a0f-8801-1d55fa69cbe0',\r\n    endpoint: '/api/v1/endpoints',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'POST',\r\n    description: 'bulk create endpoints',\r\n    createdAt: '2021-11-08T13:14:52.127Z',\r\n    updatedAt: '2021-11-08T13:14:52.127Z'\r\n  },\r\n  {\r\n    id: '9801be83-6e88-4096-9349-cb57637fc8ce',\r\n    endpoint: '/api/v1/endpoints',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'PUT',\r\n    description: 'bulk update endpoints',\r\n    createdAt: '2021-11-08T13:15:16.586Z',\r\n    updatedAt: '2021-11-08T13:15:16.586Z'\r\n  },\r\n  {\r\n    id: '1fbd3c27-8c8a-49a3-ada7-7a94783cd538',\r\n    endpoint: '/api/v1/accounts',\r\n    name: '',\r\n    type: 'server',\r\n    category: 'route',\r\n    subcategory: 'DELETE',\r\n    description: 'bulk delete accounts',\r\n    createdAt: '2021-11-08T13:20:02.136Z',\r\n    updatedAt: '2021-11-08T13:20:02.136Z'\r\n  }\r\n]","import { Outlet } from \"react-router-dom\"\r\nimport Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\n\r\nconst PublicPagelayout = (props) => {\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <Box>\r\n                <Grid container spacing={2}>\r\n                    {/* <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                        <Typography variant=\"h4\" gutterBottom component=\"div\">\r\n                            { config.appName }\r\n                        </Typography>\r\n                    </Grid> */}\r\n                    <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                        <Box>\r\n                            { props.children? props.children: <Outlet /> }\r\n                        </Box>\r\n                    </Grid>\r\n                    {/* <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Copyrights 2021\r\n                        </Typography>\r\n                    </Grid> */}\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PublicPagelayout","\r\nimport { useContext } from 'react'\r\nimport Switch from '@mui/material/Switch'\r\nimport Typography from '@mui/material/Typography'\r\nimport LocalStorageContext from '../contexts/localStorageContext.js'\r\n\r\nconst ThemeToggle = (props) => {\r\n\r\n    const { localStorageContext, toggleThemeMode}  = useContext(LocalStorageContext)\r\n\r\n    return (\r\n        <div style={{ display: 'inline-block' }}>\r\n            {\r\n                !Boolean(props.noLabel)? (\r\n                    <Typography variant=\"caption\" display=\"inline-block\" gutterBottom>\r\n                        Dark Mode\r\n                    </Typography>\r\n                ): null\r\n            }\r\n            <Switch\r\n                size='small'\r\n                checked={localStorageContext.themeMode === 'dark'}\r\n                onChange={() => {\r\n                    toggleThemeMode()\r\n                }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeToggle","import { useState, useEffect, useContext } from 'react'\r\nimport Grid from '@mui/material/Grid'\r\nimport Box from '@mui/material/Box'\r\nimport Typography from '@mui/material/Typography'\r\nimport LinearProgress from '@mui/material/LinearProgress'\r\n\r\nimport AccountContext from '../contexts/accountContext'\r\nimport config from '../../config'\r\n\r\nconst InitialLoadinglayout = (props) => {\r\n    const [hasInitialized, setHasInitialized] = useState(false)\r\n    const AccCtx = useContext(AccountContext)\r\n    let initalLoading = typeof AccCtx.accountContext.__isLoading !== 'boolean'\r\n    let userDataIsLoading = Boolean(AccCtx.accountContext.__isLoading)\r\n\r\n    useEffect(() => {\r\n        if (   typeof AccCtx.accountContext.__isLoading === 'boolean'\r\n            && !Boolean(AccCtx.accountContext.__isLoading)) {\r\n            setHasInitialized(true)\r\n        }\r\n    }, [AccCtx.accountContext])\r\n\r\n    // do not render the content if states not yet loaded\r\n    if (initalLoading) return null\r\n\r\n    return (\r\n        <>\r\n            {\r\n                userDataIsLoading && !hasInitialized? (\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}\r\n                            style={{\r\n                                textAlign: 'center',\r\n                                marginTop: '10%'\r\n                            }}>\r\n                            <img\r\n                                alt=\"logo\"\r\n                                style={{width: 150}}\r\n                                src='/favicon.png' />\r\n                            <Typography variant=\"h4\">\r\n                                { config.appName }\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Box\r\n                                style={{\r\n                                    margin: 'auto',\r\n                                    padding: 20,\r\n                                    width: '50%',\r\n                                    textAlign: 'center'\r\n                                }}>\r\n                                <LinearProgress />\r\n                                <Typography\r\n                                    color='primary'\r\n                                    variant='subtitle1'\r\n                                    style={{\r\n                                        marginTop: 15\r\n                                    }}>\r\n                                    Loading initial user data\r\n                                </Typography>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                ): props.children\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InitialLoadinglayout","import { useState, useEffect, createContext } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst RouterContext = createContext({\r\n    routerContext: null,\r\n    setRouterContext(data) { return }\r\n})\r\nexport default RouterContext\r\n\r\nexport const useRouterContext = () => {\r\n    const [routerContext, setRouterContext] = useState(null)\r\n    const navigate = useNavigate()\r\n\r\n    // life cycles\r\n    useEffect(() => {\r\n        // use to navigate\r\n        if (routerContext) {\r\n        //   console.log('change route in router context triggered: ', routerContext)\r\n          navigate(routerContext)\r\n        }\r\n    }, [routerContext])\r\n\r\n    return {routerContext, setRouterContext}\r\n}","\r\nimport React, { useState, useEffect, useContext } from 'react'\r\nimport useMediaQuery from '@mui/material/useMediaQuery'\r\nimport { useTheme } from '@mui/material/styles'\r\n// import { useNavigate } from \"react-router-dom\"\r\nimport AppBar from '@mui/material/AppBar'\r\nimport Box from '@mui/material/Box'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Typography from '@mui/material/Typography'\r\nimport Menu from '@mui/material/Menu'\r\nimport MenuIcon from '@mui/icons-material/Menu'\r\nimport Container from '@mui/material/Container'\r\nimport Button from '@mui/material/Button'\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport Drawer from '@mui/material/Drawer'\r\nimport List from '@mui/material/List'\r\nimport Divider from '@mui/material/Divider'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport ListItemIcon from '@mui/material/ListItemIcon'\r\nimport ListItemText from '@mui/material/ListItemText'\r\n\r\nimport RouterContext from '../../common/contexts/routerContext'\r\n\r\nconst MainNav = (props) => {\r\n  const [anchorElRightMenu, setAnchorElRightMenu] = useState(null)\r\n  const [drawer, setDrawer] = useState({\r\n      leftMenu: false,\r\n      rightMenu: false\r\n  })\r\n\r\n  const routerCtx = useContext(RouterContext)\r\n\r\n  const handleOpenRightMenu = (event) => {\r\n    setAnchorElRightMenu(event.currentTarget)\r\n  }\r\n\r\n  const handleCloseRightMenu = () => {\r\n    setAnchorElRightMenu(null)\r\n  }\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' || event.key === 'Shift')\r\n    ) {\r\n      return\r\n    }\r\n\r\n    setDrawer({ ...drawer, [anchor]: open })\r\n  }\r\n\r\n  const onClickNav = (e) => {\r\n    // check for event info\r\n    if (e && e.type) {\r\n      // navigate to routes if the its a link\r\n      if (e.type === 'link') {\r\n        routerCtx.setRouterContext(e.value)\r\n\r\n      // callback nav value if its an action\r\n      } else if (e.type === 'action') {\r\n        //  check for callback property\r\n        if (props.onAction && typeof props.onAction == 'function') {\r\n          props.onAction(e.value)\r\n        }\r\n      }\r\n    }\r\n\r\n    // return will imediately end the method in the stack\r\n    return\r\n  }\r\n\r\n  const generateDrawerItems = (anchor, itemsGroup) => {\r\n\r\n    return (\r\n      <Box\r\n        role=\"presentation\">\r\n        {\r\n          itemsGroup.map((items, itemsIndex) => {\r\n            return (\r\n              <React.Fragment key={anchor + '_groupItemsFragment_' + itemsIndex}>\r\n                <List key={anchor + '_groupItems_' + itemsIndex}>\r\n                  {\r\n                    items.map((item, index) => (\r\n                      <ListItem\r\n                        button\r\n                        onClick={(e) => {\r\n                          onClickNav({type: item.type, value: item.value})\r\n                          if (item.type === 'action' || item.type === 'link') {\r\n                            toggleDrawer(anchor, false)(e)\r\n                          }\r\n                        }}\r\n                        key={anchor + '_groupChildItems_' + itemsIndex + '_' + index}>\r\n                        <ListItemIcon>\r\n                          { item.component? item.component: null }\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={item.label} />\r\n                      </ListItem>\r\n                    ))\r\n                  }\r\n                </List>\r\n\r\n                {/* divider */}\r\n                { itemsIndex < itemsGroup.length -1? <Divider key={anchor + '_groupDivider_' + itemsIndex} />: null }\r\n              </React.Fragment>\r\n            )\r\n          })\r\n        }\r\n      </Box>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      style={props.isTransparent? { background: 'transparent', boxShadow: 'none'}: {}}>\r\n      {/* <Grid container> */}\r\n        <Toolbar disableGutters>\r\n\r\n          {/* logo display for big screen size */}\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            onClick={() => {\r\n              onClickNav({type: props.leftLogo.type, value: props.leftLogo.value})\r\n            }}\r\n            style={{ marginLeft: 20 }}\r\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}>\r\n            { props.leftLogo? props.leftLogo.component: null }\r\n          </Typography>\r\n\r\n          {/* left drawer for small screen */}\r\n          {\r\n            props.leftMenu && props.leftMenu.length? (\r\n              <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  aria-label={ props.leftLogo? props.leftLogo.label: '' }\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={toggleDrawer('leftMenu', true)}\r\n                  color=\"inherit\">\r\n                  <MenuIcon />\r\n                </IconButton>\r\n                <Drawer\r\n                    anchor={'left'}\r\n                    open={drawer['leftMenu']}\r\n                    onClose={toggleDrawer('leftMenu', false)}>\r\n                    { generateDrawerItems('leftMenu', props.leftMenu? props.leftMenu: []) }\r\n                </Drawer>\r\n              </Box>\r\n            ): null\r\n          }\r\n\r\n          {/* logo display for small screen size */}\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            onClick={() => {\r\n              onClickNav({type: props.leftLogo.type, value: props.leftLogo.value})\r\n            }}\r\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            { props.leftLogo? props.leftLogo.component: null }\r\n          </Typography>\r\n\r\n          {/* main menu display for bigscreen size */}\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            {\r\n              props.leftMenu? props.leftMenu.map((items, itemsIndex) => {\r\n                return (\r\n                  items.map((item, index) => (\r\n                    <Button\r\n                      onClick={() => {\r\n                        onClickNav({type: item.type, value: item.value})\r\n                      }}\r\n                      key={'groupPlainItems_' + itemsIndex + '_' + index}\r\n                      // onClick={handleCloseNavMenu}\r\n                      sx={{ my: 2, color: 'white', display: 'block' }}>\r\n                      { item.label }\r\n                    </Button>\r\n                  ))\r\n                )\r\n              }): null\r\n            }\r\n          </Box>\r\n\r\n          {/* right settings section */}\r\n          <Box style={{ marginRight: 20 }} sx={{ flexGrow: 0 }}>\r\n            {/* middle menu */}\r\n            {\r\n              props.middleMenu? props.middleMenu.map((item, index) => {\r\n                return (\r\n                  <Tooltip\r\n                    onClick={() => {\r\n                      onClickNav({type: item.type, value: item.value})\r\n                    }}\r\n                    title={ item.label }\r\n                    style={{marginRight: 15}}\r\n                    key={'middleMenu_' + index}>\r\n                    { item.component }\r\n                  </Tooltip>\r\n                )\r\n              }): null\r\n            }\r\n\r\n            {/* right menu */}\r\n            {/* right menu for big screen */}\r\n            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'inline-block' } }}>\r\n              <Tooltip title={ props.rightLogo? props.rightLogo.label: '' }>\r\n                <IconButton onClick={handleOpenRightMenu} sx={{ p: 0 }}>\r\n                  { props.rightLogo? props.rightLogo.component: null }\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Menu\r\n                sx={{ mt: '45px' }}\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElRightMenu}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={Boolean(anchorElRightMenu)}\r\n                onClose={handleCloseRightMenu}>\r\n                {\r\n                  props.rightMenu? props.rightMenu.map((items, itemsIndex) => {\r\n                    return (\r\n                      <List key={'rightMenuDDgroupItems_' + itemsIndex}>\r\n                        {\r\n                          items.map((item, index) => (\r\n                            <MenuItem\r\n                              key={'rightMenuDDgroupChildItems_' + itemsIndex + '_' + index}\r\n                              onClick={() => {\r\n                                onClickNav({type: item.type, value: item.value})\r\n                                if (item.type === 'action' || item.type === 'link') {\r\n                                  handleCloseRightMenu()\r\n                                }\r\n                              }}>\r\n                              <ListItemIcon>\r\n                                { item.component? item.component: null }\r\n                              </ListItemIcon>\r\n                              <Typography textAlign=\"center\">{item.label}</Typography>\r\n                            </MenuItem>\r\n                          ))\r\n                        }\r\n                        {/* divider */}\r\n                        { itemsIndex < props.rightMenu.length -1? <Divider key={'rightMenuDDgroupItems_groupDivider_' + itemsIndex} />: null }\r\n                      </List>\r\n                    )\r\n                  }): null\r\n                }\r\n              </Menu>\r\n            </Box>\r\n\r\n            {/* right settings for small screen */}\r\n            <Box sx={{ flexGrow: 1, display: { xs: 'inline-block', md: 'none' } }}>\r\n              <Tooltip title={ props.rightLogo? props.rightLogo.label: '' }>\r\n                <IconButton\r\n                  sx={{ p: 0 }}\r\n                  onClick={toggleDrawer('rightMenu', true)}>\r\n                  { props.rightLogo? props.rightLogo.component: null }\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Drawer\r\n                anchor={'top'}\r\n                open={drawer['rightMenu']}\r\n                onClose={toggleDrawer('rightMenu', false)}>\r\n                { generateDrawerItems('rightMenu', props.rightMenu? props.rightMenu: []) }\r\n              </Drawer>\r\n            </Box>\r\n          </Box>\r\n        </Toolbar>\r\n      {/* </Container> */}\r\n    </AppBar>\r\n  )\r\n}\r\nexport default MainNav","import { useContext, useEffect } from 'react'\r\nimport { Outlet } from 'react-router-dom'\r\nimport Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport MenuIcon from '@mui/icons-material/Menu'\r\nimport MailIcon from '@mui/icons-material/Mail'\r\nimport Button from '@mui/material/IconButton'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport ThemeToggle from '../themes/themeToggle'\r\n\r\nimport InitialLoadinglayout from './initalLoadingLayout'\r\nimport MainNav from '../navs/mainNav'\r\nimport config from '../../config'\r\n\r\nimport AccountContext from '../contexts/accountContext'\r\nimport RouterContext, { useRouterContext } from '../contexts/routerContext'\r\nimport LocalStorageContext from '../contexts/localStorageContext'\r\n\r\nconst AuthLayout = (props) => {\r\n    const AccCtx = useContext(AccountContext)\r\n    const routerStates = useRouterContext()\r\n    const lsCtx = useContext(LocalStorageContext)\r\n\r\n    let rightLogo = {\r\n        label: 'Open settings',\r\n        component: <MenuIcon />,\r\n        type: 'action',\r\n        value: 'openSettings'\r\n    }\r\n    let middleMenu = [\r\n        {\r\n            label: 'Latest news from our team',\r\n            component: (\r\n                <Button size=\"small\" style={{ borderRadius: 5, marginRight: 15 }}>\r\n                    <Typography>News</Typography>\r\n                </Button>\r\n            ),\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/home`\r\n        },\r\n        {\r\n            label: 'Contact or Learn about our Team',\r\n            component: (\r\n                <Button size=\"small\"  style={{ borderRadius: 5, marginRight: 15 }}>\r\n                    <Typography>About Us</Typography>\r\n                </Button>\r\n            ),\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/home`\r\n        }\r\n    ]\r\n    let rightMenu = [\r\n        [\r\n            {\r\n                component: (\r\n                    <Box sx={{ display: 'inline-block' }}>\r\n                        <ThemeToggle noLabel={true} />\r\n                    </Box>\r\n                ),\r\n                label: 'Dark Mode',\r\n                type: 'none',\r\n                value: 'none'\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                component: <MailIcon />,\r\n                label: 'Notes',\r\n                type: 'action',\r\n                value: 'notes'\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                // component: <MailIcon />,\r\n                label: 'Notes II',\r\n                type: 'action',\r\n                value: 'notes II'\r\n            }\r\n        ]\r\n    ]\r\n\r\n    const onNavAction = (e) => {\r\n        console.log('Action: ', e)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        //  if user action is to signout, then clear credentials\r\n        if (   AccCtx.accountContext.__action\r\n            && AccCtx.accountContext.__action === 'clearCredentials') {\r\n            //  redirect to home page\r\n            lsCtx.updateLocalStorage({authKey: null})\r\n            AccCtx.signOut()\r\n\r\n            return\r\n        }\r\n\r\n        // if user is logged in redirect to home page\r\n        if (   typeof AccCtx.accountContext.__isLoggedIn === 'boolean'\r\n            && Boolean(AccCtx.accountContext.__isLoggedIn)) {\r\n            //  redirect to home page\r\n            routerStates.setRouterContext(`/${ config.rootRoute }/home`)\r\n        }\r\n\r\n    }, [AccCtx.accountContext])\r\n\r\n    return (\r\n        <RouterContext.Provider\r\n            value={{\r\n              ...routerStates\r\n            }}>\r\n            <InitialLoadinglayout>\r\n                <MainNav\r\n                    isTransparent={true}\r\n                    leftLogo={null}\r\n                    leftMenu={[]}\r\n                    middleMenu={middleMenu}\r\n                    rightLogo={rightLogo}\r\n                    rightMenu={rightMenu}\r\n                    onAction={onNavAction} />\r\n                <Container maxWidth=\"sm\">\r\n                    <Box>\r\n                        <Toolbar />\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                                <img\r\n                                    alt=\"logo\"\r\n                                    style={{width: 150}}\r\n                                    src='/favicon.png' />\r\n                                <Typography variant=\"h4\" gutterBottom component=\"div\">\r\n                                    { config.appName }\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                                <Box\r\n                                    style={{\r\n                                        width: 300,\r\n                                    margin: 'auto',\r\n                                    padding: 20,\r\n                                    paddingTop: 40,\r\n                                    paddingBottom: 40,\r\n                                    boxShadow: '2px 2px 3px 2px rgb(0 0 0 / 20%)'\r\n                                }}>\r\n                                <Outlet />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                            <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                                Copyrights 2021\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n            </InitialLoadinglayout>\r\n        </RouterContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthLayout","import { useContext } from 'react'\r\nimport { Outlet } from \"react-router-dom\"\r\nimport Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport MailIcon from '@mui/icons-material/Mail'\r\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings'\r\nimport SettingsIcon from '@mui/icons-material/Settings'\r\nimport NotificationsIcon from '@mui/icons-material/Notifications'\r\nimport FaceIcon from '@mui/icons-material/Face'\r\nimport LogoutIcon from '@mui/icons-material/Logout'\r\nimport KeyIcon from '@mui/icons-material/Key'\r\n\r\nimport Badge from '@mui/material/Badge'\r\nimport IconButton from '@mui/material/IconButton'\r\n\r\nimport MainNav from '../navs/mainNav'\r\nimport AccountContext from '../contexts/accountContext'\r\nimport RouterContext, { useRouterContext } from '../contexts/routerContext'\r\nimport ThemeToggle from '../themes/themeToggle'\r\nimport config from '../../config'\r\n\r\nconst MainLayout = (props) => {\r\n    const routerStates = useRouterContext()\r\n    const AccCtx = useContext(AccountContext)\r\n\r\n    let leftLogo = {\r\n        label: 'Root',\r\n        component: <Avatar sx ={{'& :hover': {cursor: 'pointer'}}} alt=\"Logo\" src=\"/favicon.png\" />,\r\n        type: 'link',\r\n        value: `/${ config.rootRoute }/home`\r\n    }\r\n    let leftMenu = [\r\n        [\r\n            {\r\n              component: <MailIcon />,\r\n              label: 'Home',\r\n              type: 'link',\r\n              value: `/${ config.rootRoute }/home`\r\n            },\r\n            {\r\n                component: <MailIcon />,\r\n                label: 'Demo',\r\n                type: 'link',\r\n                value: `/${ config.rootRoute }/demo`\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                component: <MailIcon />,\r\n                label: 'Notes',\r\n                type: 'action',\r\n                value: 'notes'\r\n            }\r\n        ]\r\n    ]\r\n\r\n    let middleMenu = [\r\n        {\r\n            label: 'Administrator',\r\n            component: (\r\n                <IconButton size=\"large\" sx={{ p: 0 }}>\r\n                    <AdminPanelSettingsIcon color=\"action\" size=\"large\" />\r\n                </IconButton>\r\n            ),\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/admin/appSettings`\r\n        },\r\n        {\r\n            label: 'Notifications',\r\n            component: (\r\n                <IconButton size=\"large\" sx={{ p: 0 }}>\r\n                    <Badge badgeContent={4} color=\"error\">\r\n                        <NotificationsIcon color=\"action\" size=\"large\" />\r\n                    </Badge>\r\n                </IconButton>\r\n            ),\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/notifications`\r\n        }\r\n    ]\r\n\r\n    let rightLogo = {\r\n        label: 'Open settings',\r\n        component: <Avatar alt=\"Gebe\" src=\"/static/images/avatar/2.jpg\" />,\r\n        type: 'action',\r\n        value: 'openSettings'\r\n    }\r\n    let rightMenu = [\r\n        [\r\n            {\r\n                component: (\r\n                    <Box sx={{ display: 'inline-block' }}>\r\n                        <ThemeToggle noLabel={true} />\r\n                    </Box>\r\n                ),\r\n                label: 'Dark Mode',\r\n                type: 'none',\r\n                value: 'none'\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                component: <KeyIcon />,\r\n                label: 'Credentials',\r\n                type: 'link',\r\n                value: `/${ config.rootRoute }/account/credentials`\r\n            },\r\n            {\r\n                component: <FaceIcon />,\r\n                label: 'Profile',\r\n                type: 'link',\r\n                value: `/${ config.rootRoute }/account/profile`\r\n            },\r\n            {\r\n                component: <SettingsIcon />,\r\n                label: 'Settings',\r\n                type: 'link',\r\n                value: `/${ config.rootRoute }/account/settings`\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                component: <LogoutIcon />,\r\n                label: 'Logout',\r\n                type: 'action',\r\n                value: 'logout'\r\n            }\r\n        ]\r\n    ]\r\n\r\n    const onNavAction = (e) => {\r\n        if (e === 'logout') {\r\n            AccCtx.setAccountContext({ ...AccCtx.accountContext, ...{__action: 'clearCredentials'} })\r\n            routerStates.setRouterContext(`/${ config.rootRoute }/auth/`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <RouterContext.Provider\r\n            value={{\r\n              ...routerStates\r\n            }}>\r\n            <MainNav\r\n                leftLogo={leftLogo}\r\n                leftMenu={leftMenu}\r\n                middleMenu={middleMenu}\r\n                rightLogo={rightLogo}\r\n                rightMenu={rightMenu}\r\n                onAction={onNavAction} />\r\n\r\n            <Container maxWidth=\"false\">\r\n                <Box>\r\n                    <Toolbar />\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} style={{paddingLeft: 0, paddingTop: 30}}>\r\n                            <Box>\r\n                                <Outlet />\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n        </RouterContext.Provider>\r\n    )\r\n}\r\n\r\nexport default MainLayout","import React from 'react'\r\nimport Button from '@mui/material/Button'\r\nimport CircularProgress from '@mui/material/CircularProgress'\r\n\r\nconst LoadingButton = (props) => {\r\n\r\n    let properties = {}\r\n\r\n    // properties not tobe included\r\n    let xProps = new Set(['isLoading'])\r\n\r\n    // assign object properties\r\n    Object.keys(props).forEach(key => {\r\n        if (xProps.has(key)) return\r\n        properties[key] = props[key]\r\n    })\r\n\r\n    // start icon\r\n    let startIcon = props.startIcon? props.startIcon: null\r\n\r\n    // if isLoading is true, set disabled to true\r\n    if (props.isLoading) {\r\n        startIcon = <CircularProgress size={12} />\r\n        properties.disabled = true\r\n    }\r\n\r\n    return (\r\n        <Button\r\n            {...properties}\r\n            startIcon={ startIcon }>\r\n            { props.children? props.children: '' }\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default LoadingButton","import { useState, useContext } from 'react'\r\n\r\nimport Link from '@mui/material/Link'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport TextField from '@mui/material/TextField'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\n\r\nimport AccountContext from '../../common/contexts/accountContext'\r\nimport RouterContext from '../../common/contexts/routerContext'\r\nimport LocalStorageContext from '../../common/contexts/localStorageContext'\r\nimport LoadingButton from '../../common/buttons/loadingButton'\r\nimport utils from '../../common/utilities'\r\nimport config from '../../config'\r\n\r\nconst Login = (props) => {\r\n\r\n    const [internalstates, setInternalStates] = useState({\r\n        loginProgress: false,\r\n        password: '',\r\n        username: '',\r\n        errors: []\r\n    })\r\n    const routerCtx = useContext(RouterContext)\r\n    const AccCtx = useContext(AccountContext)\r\n    const lsCtx = useContext(LocalStorageContext)\r\n\r\n    const login = async () => {\r\n        let username = ''\r\n        let password = ''\r\n\r\n        setInternalStates({...internalstates, ...{loginProgress: true}})\r\n        let loginResult = await AccCtx.signIn({username, password})\r\n        setInternalStates({...internalstates, ...{loginProgress: false}})\r\n        lsCtx.updateLocalStorage({authKey: loginResult.authKey})\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    type='text'\r\n                    label='username / email' />\r\n            </Grid>\r\n            \r\n\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    type='password'\r\n                    label='password' />\r\n            </Grid>\r\n            \r\n\r\n            <Grid item xs={12}>\r\n                <LoadingButton\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='contained'\r\n                    color='primary'\r\n                    onClick={login}\r\n                    isLoading={internalstates.loginProgress}\r\n                    startIcon={<LoginIcon />}>\r\n                    login\r\n                </LoadingButton>\r\n                <Box style={{marginTop: 15}}>\r\n                    <Link\r\n                        color=\"inherit\"\r\n                        href={`/${ config.rootRoute }/auth/forgotPassword`}>\r\n                        Forgot password\r\n                    </Link>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Login","import { useState } from 'react'\r\nimport Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport TextField from '@mui/material/TextField'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport InputAdornment from '@mui/material/InputAdornment'\r\nimport RotateLeftIcon from '@mui/icons-material/RotateLeft'\r\n\r\nimport LoadingButton from '../../common/buttons/loadingButton'\r\nimport utils from '../../common/utilities'\r\nimport config from '../../config'\r\n\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nconst ResetPassword = (props) => {\r\n    const { key } = useParams()\r\n    const [internalstates, setInternalStates] = useState({\r\n        resetProgress: false,\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n        resetKey: '',\r\n        errors: []\r\n    })\r\n    const [resetKey, setResetKey] = useState(key? key: '')\r\n\r\n    const onChangeResetKey = (e) => {\r\n        setResetKey(e.target.value)\r\n    }\r\n\r\n    const handleResetKeyValue = (e) => {\r\n        let keyVal = key? key: ''\r\n        setResetKey(keyVal)\r\n    }\r\n\r\n    const resetPassword = async () => {\r\n        setInternalStates({...internalstates, ...{resetProgress: true}})\r\n        await utils.waitFor(2)\r\n        setInternalStates({...internalstates, ...{resetProgress: false}})\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography>\r\n                    Please enter the correct key and the new password you wanted.\r\n                </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    value={resetKey}\r\n                    onChange={onChangeResetKey}\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    type='text'\r\n                    label='Reset Key'\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"Reset key\"\r\n                                    onClick={handleResetKeyValue}\r\n                                    edge=\"end\">\r\n                                    <RotateLeftIcon />\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        ),\r\n                    }} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    type='password'\r\n                    label='New Password' />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    type='password'\r\n                    label='Confirm Password' />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <LoadingButton\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='contained'\r\n                    color='primary'\r\n                    onClick={resetPassword}\r\n                    isLoading={internalstates.resetProgress}\r\n                    startIcon={<LoginIcon />}>\r\n                    Reset\r\n                </LoadingButton>\r\n                <Box style={{marginTop: 15}}>\r\n                    <Link\r\n                        style={{margin: 10}}\r\n                        color=\"inherit\"\r\n                        href={`/${ config.rootRoute }/auth/forgotPassword`}>\r\n                        Forgot password\r\n                    </Link>\r\n                    <Link\r\n                        style={{margin: 10}}\r\n                        color=\"inherit\"\r\n                        href={`/${ config.rootRoute }/auth/login`}>\r\n                        Login\r\n                    </Link>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ResetPassword","import { useState } from 'react'\r\nimport Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport TextField from '@mui/material/TextField'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\nimport EmailIcon from '@mui/icons-material/Email'\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone'\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport ToggleButton from '@mui/material/ToggleButton'\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\r\n\r\nimport LoadingButton from '../../common/buttons/loadingButton'\r\nimport utils from '../../common/utilities'\r\nimport config from '../../config'\r\n\r\nconst ForgotPassword = (props) => { \r\n    const [internalstates, setInternalStates] = useState({\r\n        forgotProgress: false,\r\n        addressType: 'email',\r\n        addressValue: '',\r\n        errors: []\r\n    })\r\n\r\n    const promptText = {\r\n        email: 'A password reset code or link will be sent to this email address.',\r\n        phone: 'A password reset code or link will be sent to this phone number.'\r\n    }\r\n\r\n    const switchMethod = (e, method) => {\r\n        setInternalStates({...internalstates, ...{addressType: method}})\r\n    }\r\n\r\n    const forgotRequest = async () => {\r\n        setInternalStates({...internalstates, ...{forgotProgress: true}})\r\n        await utils.waitFor(2)\r\n        setInternalStates({...internalstates, ...{forgotProgress: false}})\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12} style={{marginTop: 0, paddingTop: 0, textAlign: 'right'}}>\r\n                <ToggleButtonGroup\r\n                    value={internalstates.addressType}\r\n                    exclusive\r\n                    onChange={switchMethod}\r\n                    aria-label=\"Address Type\">\r\n                    <ToggleButton size=\"small\" value=\"email\">\r\n                        <Tooltip title=\"Send reset code to my Email\">\r\n                            <EmailIcon />\r\n                        </Tooltip>\r\n                    </ToggleButton>\r\n                    <ToggleButton size=\"small\" value=\"phone\">\r\n                        <Tooltip title=\"Send reset code to my Phone\">\r\n                            <ContactPhoneIcon />\r\n                        </Tooltip>\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Typography>\r\n                    { promptText[internalstates.addressType] }\r\n                </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    type='text'\r\n                    label={ internalstates.addressType === 'email'? 'Email Address': 'Phone Number' } />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <LoadingButton\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='contained'\r\n                    color='primary'\r\n                    onClick={forgotRequest}\r\n                    isLoading={internalstates.forgotProgress}\r\n                    startIcon={<LoginIcon />}>\r\n                    Submit\r\n                </LoadingButton>\r\n                <Box style={{marginTop: 15}}>\r\n                    <Link\r\n                        color=\"inherit\"\r\n                        href={`/${ config.rootRoute }/auth/login`}>\r\n                        Back to login\r\n                    </Link>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword","// import { useState, useContext } from 'react'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/contexts/accountContext'\r\n\r\nconst Home = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography>Home Content</Typography>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Home","// import { useState, useContext } from 'react'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/contexts/accountContext'\r\n\r\nconst Notifications = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Notifications test value from context'})\r\n    // }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography>Notifications Content</Typography>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Notifications","import Box from '@mui/material/Box'\r\nimport Button from '@mui/material/Button'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\n\r\nconst OpenCloseBox = (props) => {\r\n\r\n    return (\r\n        props.isOpen? (\r\n            <Box>\r\n                <Box style={{ position: 'relative' }}>\r\n                    <IconButton\r\n                        style={{\r\n                            zIndex: 1,\r\n                            position: 'absolute',\r\n                            left: 'calc(100% - 30px)',\r\n                            top: 0\r\n                        }}\r\n                        aria-label='close'\r\n                        onClick={() => {\r\n                            if (props.onClose && typeof props.onClose === 'function') {\r\n                                props.onClose()\r\n                            }\r\n                        }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Box>\r\n                { props.children }\r\n            </Box>\r\n        ): (\r\n            <Button\r\n                color='primary'\r\n                variant='contained'\r\n                startIcon={props.btnIcon? props.btnIcon: null}\r\n                onClick={() => {\r\n                    if (props.onOpen && typeof props.onOpen === 'function') {\r\n                        props.onOpen()\r\n                    }\r\n                }}>\r\n                { props.btnLabel? props.btnLabel: 'Open' }\r\n            </Button>\r\n        )\r\n    )\r\n}\r\n\r\nexport default OpenCloseBox","import { NoEncryption } from '@mui/icons-material'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nconst KeyValueBlock = (props) => {\r\n    let data = props.data? props.data: []\r\n    let style = props.style? props.style: {}\r\n\r\n    return (\r\n        <table border='0' cellSpacing='0' style={style}>\r\n            <tbody>\r\n                {\r\n                    data.map((row, rowIndex) => {\r\n                        return (\r\n                            <tr key={ 'row_' + rowIndex }>\r\n                                <td style={{...styles.td, ...styles.key}}>\r\n                                    <Typography\r\n                                        color='primary'\r\n                                        variant='body1'>\r\n                                        { row.key }\r\n                                    </Typography>\r\n                                </td>\r\n                                <td style={{...styles.td, ...styles.value}}>\r\n                                    <Typography\r\n                                        variant='body1'>\r\n                                        { row.value }\r\n                                    </Typography>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    key: {\r\n        // textAlign: 'right',\r\n        // borderRight: '1px solid'\r\n    },\r\n    value: {\r\n        lineBreak: 'anywhere',\r\n    },\r\n    td: {\r\n        padding: 10,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n        paddingRight: 5,\r\n        verticalAlign: 'top'\r\n    }\r\n}\r\n\r\nexport default KeyValueBlock","import Box from '@mui/material/Box'\r\nimport WebhookIcon from '@mui/icons-material/Webhook'\r\nimport Skeleton from '@mui/material/Skeleton'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nconst GenBlockComponent = (props) => {\r\n    let isLoading = typeof props.isLoading === 'boolean'? props.isLoading: false\r\n    \r\n    return (\r\n        <Box\r\n            style={{\r\n                ...{marginBottom: 20, textAlign: 'left'},\r\n                ...(props.style? props.style: {})\r\n            }}>\r\n            {\r\n                !isLoading? (\r\n                    <>\r\n                        {\r\n                            props.title?  (\r\n                                <Typography\r\n                                    variant='h6'\r\n                                    color='primary'   \r\n                                    id={props.title.replace(/\\s/g, '').toLowerCase()}\r\n                                    style={{marginBottom: 5}}>\r\n                                    <WebhookIcon size='small' /> <span>{ props.title }</span>\r\n                                </Typography>\r\n                            ): null\r\n                        }\r\n                        { props.description?  <Typography variant='body1' style={{marginBottom: 15, textIndent: 50}}>{ props.description }</Typography>: null }\r\n                        {\r\n                            props.children? (\r\n                                <Box style={{marginTop: 10}}>\r\n                                    { props.children }\r\n                                </Box>\r\n                            ): null\r\n                        }\r\n                    </>\r\n                ): (\r\n                    <>\r\n                        <Typography\r\n                            component=\"div\"\r\n                            variant=\"h3\">\r\n                            <Skeleton\r\n                                animation=\"wave\"\r\n                                style={{width: 200}} />\r\n                        </Typography>\r\n                        <Typography\r\n                            component=\"div\"\r\n                            variant=\"caption\">\r\n                            <Skeleton\r\n                                animation=\"wave\" />\r\n                        </Typography>\r\n                        <Typography\r\n                            component=\"div\"\r\n                            variant=\"caption\">\r\n                            <Skeleton\r\n                                animation=\"wave\"\r\n                                style={{ width: '85%'}} />\r\n                        </Typography>\r\n                        <Skeleton\r\n                            animation=\"wave\"\r\n                            variant='rectangular'\r\n                            style={{height: 150, marginTop: 10}}>\r\n                        </Skeleton>\r\n                    </>\r\n                )\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default GenBlockComponent","import { useState, useEffect } from 'react'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\n// import Typography from '@mui/material/Typography'\r\n// import Divider from '@mui/material/Divider'\r\n// import TextField from '@mui/material/TextField'\r\n// import Button from '@mui/material/Button'\r\n// import AccountContext from '../../../common/contexts/accountContext'\r\n// import VerticalSteps from '../../../common/navs/verticalSteps'\r\n// import LoadingButton from '../../../common/buttons/loadingButton'\r\nimport KeyValueBlock from '../../../common/blocks/keyValueBlock'\r\nimport GenBlock from '../../../common/blocks/genBlock'\r\n\r\nconst AccountView = (props) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            setIsLoading(true)\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 1000)\r\n        }\r\n\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Grid\r\n                style={{ marginBottom: 20 }}\r\n                container>\r\n                <Grid\r\n                    item xs={12} sm={12} md={4}\r\n                    style={{ padding: 5 }}>\r\n                    <GenBlock\r\n                        isLoading={isLoading}\r\n                        title={ 'Base Credentials' }>\r\n                        <KeyValueBlock\r\n                            data={[\r\n                                { key: 'Username', value: 'username101' },\r\n                                { key: 'Type', value: 'Super Admin' }\r\n                            ]}/>\r\n                    </GenBlock>\r\n                </Grid>\r\n\r\n                <Grid\r\n                    item xs={12} sm={12} md={4}\r\n                    style={{ padding: 5 }}>\r\n                    <GenBlock\r\n                        isLoading={isLoading}\r\n                        title={ 'Emails Adresses' }>\r\n                        <KeyValueBlock\r\n                            data={[\r\n                                { key: 'Primary', value: 'test101@gmail.com' },\r\n                                { key: 'Secondary', value: '--' }\r\n                            ]}/>\r\n                    </GenBlock>\r\n                </Grid>\r\n\r\n                <Grid\r\n                    item xs={12} sm={12} md={4}\r\n                    style={{ padding: 5 }}>\r\n                    <GenBlock\r\n                        isLoading={isLoading}\r\n                        title={ 'Phone Numbers' }>\r\n                        <KeyValueBlock\r\n                            data={[\r\n                                { key: 'Primary', value: '+639273854600' },\r\n                                { key: 'Secondary', value: '--' }\r\n                            ]}/>\r\n                    </GenBlock>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AccountView","import { useState, useEffect } from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport Stepper from '@mui/material/Stepper'\r\nimport Step from '@mui/material/Step'\r\nimport StepLabel from '@mui/material/StepLabel'\r\nimport StepContent from '@mui/material/StepContent'\r\nimport Button from '@mui/material/Button'\r\nimport Paper from '@mui/material/Paper'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nimport LoadingButton from '../buttons/loadingButton'\r\n\r\nconst VerticalLinearStepperNav = (props) => {\r\n  const [activeStep, setActiveStep] = useState(0)\r\n  const [loadingStates, setLoadingStates] = useState({\r\n    steps: []\r\n  })\r\n\r\n  const handleNext = async () => {\r\n    let result = true\r\n\r\n    // set loading to true\r\n    let stps = loadingStates.steps\r\n    stps[activeStep] = true\r\n    setLoadingStates({ ...loadingStates, ...{ steps: stps }})\r\n\r\n    if (props.views && typeof props.views[activeStep].action === 'function') {\r\n      result = await props.views[activeStep].action()\r\n    }\r\n\r\n    // set loading to false\r\n    stps[activeStep] = false\r\n    setLoadingStates({ ...loadingStates, ...{ steps: stps }})\r\n\r\n    if (result) {\r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  const handleFinalAction = async () => {\r\n    if (   props.finalView\r\n        && props.finalView.action\r\n        && typeof props.finalView.action === 'function') {\r\n\r\n        // set loading to true\r\n        let stps = loadingStates.steps\r\n        stps[activeStep] = true\r\n        setLoadingStates({ ...loadingStates, ...{ steps: stps }})\r\n\r\n        let result = await props.finalView.action()\r\n\r\n        // set loading to false\r\n        stps[activeStep] = false\r\n        setLoadingStates({ ...loadingStates, ...{ steps: stps }})\r\n    }\r\n  }\r\n\r\n  let views = props.views? props.views: []\r\n  let nextLabel = props.nextBtnLabel? props.nextBtnLabel: 'Next'\r\n  let finishLabel = props.finishBtnlabel? props.finishBtnlabel: 'Finish'\r\n  let finalLabel = props.finalBtnLabel? props.finalBtnLabel: 'Save Changes'\r\n\r\n  useEffect(() => {\r\n    let stps = []\r\n\r\n    if (props.views && props.views.length) {\r\n      stps = props.views.map(() => false)\r\n      // push a loading state for the final view\r\n      stps.push(false)\r\n    }\r\n  \r\n    setLoadingStates({ ...loadingStates, ...{ steps: stps }})\r\n  }, [props.views])\r\n\r\n  return (\r\n    <Box>\r\n      {/* the main stepper */}\r\n      <Stepper\r\n        activeStep={activeStep}\r\n        orientation=\"vertical\">\r\n        {views.map((step, index) => (\r\n          <Step\r\n            key={step.title}>\r\n            {/* step label */}\r\n            <StepLabel>\r\n              <Typography\r\n                {...activeStep === index? { color: 'primary' }: {}}\r\n                onClick={() => {\r\n                  if (props.disableLabelClick || loadingStates.steps.some(item => item)) return\r\n                  setActiveStep(index)\r\n                }}\r\n                variant=\"subtitle1\"\r\n                style={{\r\n                  ...{\r\n                    width: 'fit-content',\r\n                    cursor: 'pointer'\r\n                  },\r\n                  ...(activeStep === index? { fontWeight: 700 }: { fontWeight: 400 })\r\n                }}>\r\n                {step.title}\r\n              </Typography>\r\n            </StepLabel>\r\n\r\n            {/* step content */}\r\n            <StepContent>\r\n              <Box>\r\n                { step.component? step.component: null }\r\n              </Box>\r\n              <Box sx={{ mb: 2 }}>\r\n                <div\r\n                  style={{\r\n                    marginTop: 10,\r\n                    marginBottom: 10,\r\n                    textAlign: 'end'\r\n                  }}>\r\n                  <Button\r\n                    disabled={index === 0}\r\n                    onClick={handleBack}\r\n                    sx={{ mt: 1, mr: 1 }}>\r\n                    Back\r\n                  </Button>\r\n                  <LoadingButton\r\n                    variant=\"contained\"\r\n                    isLoading={ loadingStates.steps[index] }\r\n                    onClick={ handleNext }\r\n                    sx={{ mt: 2}}>\r\n                    { index === views.length - 1 ? finishLabel : nextLabel }\r\n                  </LoadingButton>\r\n                </div>\r\n              </Box>\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n\r\n      {/* when finishing the last step */}\r\n      {activeStep === views.length && (\r\n        <Paper square elevation={0} sx={{ p: 3 }}>\r\n          { props.finalView? props.finalView.component: <Typography>All steps completed</Typography> }\r\n          <div\r\n            style={{\r\n              marginTop: 10,\r\n              marginBottom: 10,\r\n              textAlign: 'end'\r\n            }}>\r\n            <Button\r\n              variant='outlined'\r\n              onClick={handleReset}\r\n              sx={{ mt: 1, mr: 1 }}>\r\n              Reset\r\n            </Button>\r\n            <LoadingButton\r\n              variant='contained'\r\n              isLoading={ loadingStates.steps[activeStep] }\r\n              onClick={ handleFinalAction }\r\n              sx={{ mt: 1, mr: 1 }}>\r\n              { finalLabel }\r\n            </LoadingButton>\r\n          </div>\r\n        </Paper>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default VerticalLinearStepperNav","import React, { useEffect, useContext } from 'react'\r\n// import Container from '@mui/material/Container'\r\nimport Grid from '@mui/material/Grid'\r\n// import Box from '@mui/material/Box'\r\nimport TextField from '@mui/material/TextField'\r\nimport Button from '@mui/material/Button'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nimport AccountContext from '../../../common/contexts/accountContext'\r\nimport VerticalSteps from '../../../common/navs/verticalStepsNav'\r\nimport utils from '../../../common/utilities'\r\n\r\nimport { useSnackbar } from 'notistack'\r\n\r\nconst AccountEdit = (props) => {\r\n    const accountCtx = useContext(AccountContext)\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar()\r\n\r\n    const steps = [\r\n        {\r\n            icon: null,\r\n            title: 'Base Credentials',\r\n            component: (\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            style={styles.caption}\r\n                            variant='body1'>\r\n                            Username is immutable and updating User Role is only allowed to Admin module.\r\n                            You can only change the password.\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <TextField\r\n                            fullWidth\r\n                            required\r\n                            type='password'\r\n                            label=\"Old Password\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <TextField\r\n                            fullWidth\r\n                            required\r\n                            type='password'\r\n                            label=\"New password\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <TextField\r\n                            fullWidth\r\n                            required\r\n                            type='password'\r\n                            label=\"Retype Password\" />\r\n                    </Grid>\r\n                </Grid>\r\n            ),\r\n            action: async () => {\r\n                console.log('Base Credentials')\r\n                await utils.waitFor(1)\r\n                return true\r\n            }\r\n        },\r\n        {\r\n            icon: null,\r\n            title: 'Email Addresses',\r\n            component: (\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            style={styles.caption}\r\n                            variant='body1'>\r\n                            Emails are not required, however it will be usefull in authentication\r\n                            and some notifications. It is recommended to have atleast the primary email.\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Primary Email\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Secondary Email\" />\r\n                    </Grid>\r\n                </Grid>\r\n            ),\r\n            action: async () => {\r\n                console.log('email addresses')\r\n                await utils.waitFor(1)\r\n                return true\r\n            }\r\n        },\r\n        {\r\n            icon: null,\r\n            title: 'Phone Numbers',\r\n            component: (\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            style={styles.caption}\r\n                            variant='body1'>\r\n                            Phone numbers are not required, however it will be usefull in authentication\r\n                            and some notifications. It is recommended to have atleast the primary phone number.\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Primary Phone Number\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Secondary Phone Number\" />\r\n                    </Grid>\r\n                </Grid>\r\n            ),\r\n            action: async () => {\r\n                console.log('phone numbers')\r\n                await utils.waitFor(1)\r\n                return true\r\n            }\r\n        }\r\n    ]\r\n\r\n    let finalView = {\r\n        component: (\r\n            <>\r\n                <Typography>\r\n                    All steps completed. Please see the change details before\r\n                    saving.\r\n                </Typography>\r\n            </>\r\n        ),\r\n        action: async () => {\r\n            console.log('finish button')\r\n\r\n            // test for notifications\r\n            // this will also serve as reference\r\n            await utils.waitFor(1)\r\n            enqueueSnackbar('test notification 1', {\r\n                variant: 'info',\r\n            });\r\n            await utils.waitFor(1)\r\n            enqueueSnackbar('test notification 1', {\r\n                variant: 'error',\r\n                persist: true,\r\n                action: (key) => (\r\n                    <Button\r\n                        color='primary'\r\n                        variant='contained'\r\n                        onClick={() => { closeSnackbar(key) }}>\r\n                        Dismiss\r\n                    </Button>\r\n                )\r\n            });\r\n            await utils.waitFor(1)\r\n            enqueueSnackbar('test notification 1', {\r\n                variant: 'warning',\r\n                autoHideDuration: 10000,\r\n            });\r\n            await utils.waitFor(1)\r\n            enqueueSnackbar('test notification 1', {\r\n                variant: 'success'\r\n            });\r\n\r\n            return true\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('data in account edit: ', accountCtx.accountContext)\r\n\r\n    },[accountCtx.accountContext])\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <VerticalSteps\r\n                    nextBtnLabel={ 'Save and Next' }\r\n                    finishBtnlabel={ 'Save and Finish' }\r\n                    finalBtnLabel={ 'Save Changes' }\r\n                    disableLabelClick={ false }\r\n                    finalView={ finalView }\r\n                    views={ steps } />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    caption: {\r\n        textIndent: 50,\r\n        marginTop: 20,\r\n        marginBottom: 10\r\n    }\r\n}\r\n\r\nexport default AccountEdit","import { useState } from 'react'\r\nimport Grid from '@mui/material/Grid'\r\nimport Container from '@mui/material/Container'\r\nimport EditIcon from '@mui/icons-material/Edit'\r\n\r\n// import AccountContext from '../../common/contexts/accountContext'\r\nimport OpenCloseBox from '../../common/blocks/openCloseBox'\r\nimport AccountView from './components/accountCredentialsView'\r\nimport AccountEdit from './components/accountCredentialsEdit'\r\n\r\nconst AccountCredentials = (props) => {\r\n    const [states, setStates] = useState({\r\n        openUpdate: false\r\n    })\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} style={{ paddingTop: 30 }}>\r\n                    {/* <Typography>Account Core Content</Typography> */}\r\n                    { !states.openUpdate? <AccountView />: null }\r\n                    <OpenCloseBox\r\n                        btnIcon={ <EditIcon /> }\r\n                        btnLabel={ 'Update Credentials' }\r\n                        isOpen={ states.openUpdate }\r\n                        onOpen={ () => {\r\n                            setStates({ ...states, ...{ openUpdate: true } })\r\n                        }}\r\n                        onClose={ () => {\r\n                            setStates({ ...states, ...{ openUpdate: false } })\r\n                        }}>\r\n                        <AccountEdit />\r\n                    </OpenCloseBox>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AccountCredentials","import React, { useState, useEffect } from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Avatar from '@mui/material/Avatar'\r\n// import TextField from '@mui/material/TextField'\r\n// import Button from '@mui/material/Button'\r\n// import AccountContext from '../../../common/contexts/accountContext'\r\nimport KeyValueBlock from '../../../common/blocks/keyValueBlock'\r\nimport GenBlock from '../../../common/blocks/genBlock'\r\n\r\nconst AccountProfileView = (props) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            setIsLoading(true)\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 1000)\r\n        }\r\n\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Grid\r\n                style={{ marginBottom: 20 }}\r\n                container>\r\n                <Grid\r\n                    item xs={12} sm={12} md={4}\r\n                    style={{ padding: 5 }}>\r\n                    <GenBlock\r\n                        isLoading={isLoading}\r\n                        title={ 'Basic Profile' }>\r\n                        <Avatar\r\n                            alt=\"Profile Picture\"\r\n                            src=\"/favicon.png\"\r\n                            sx={{ width: 200, height: 200 }} />\r\n                        <KeyValueBlock\r\n                            data={[\r\n                                { key: 'First Name', value: 'Gilbert' },\r\n                                { key: 'Middle Name', value: 'Defante' },\r\n                                { key: 'Last Name', value: 'Cuerbo' },\r\n                                { key: 'Nick Name', value: 'Berto' },\r\n                                { key: 'Gender', value: 'Male' }\r\n                            ]}/>\r\n                    </GenBlock>\r\n                </Grid>\r\n\r\n                <Grid\r\n                    item xs={12} sm={12} md={4}\r\n                    style={{ padding: 5 }}>\r\n                    <GenBlock\r\n                        isLoading={isLoading}\r\n                        title={ 'Advance Profile' }>\r\n                        <KeyValueBlock\r\n                            data={[\r\n                                { key: 'Nationality', value: 'Filipino' },\r\n                                { key: 'Birth Date', value: 'April 27, 1995' },\r\n                                { key: 'Birth Place', value: 'Cantilan, Surigao del Sur' },\r\n                                { key: 'Home Address', value: 'Pagantayan, Cantilan, Surigao del Sur' },\r\n                                { key: 'Personal Website', value: 'https://gilbertgit95.github.com' },\r\n                                { key: 'Bio', value: 'lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem' }\r\n                            ]}/>\r\n                    </GenBlock>\r\n                </Grid>\r\n\r\n                <Grid\r\n                    item xs={12} sm={12} md={4}\r\n                    style={{ padding: 5 }}>\r\n                    <GenBlock\r\n                        isLoading={isLoading}\r\n                        title={ 'Work Related Profile' }>\r\n                        <KeyValueBlock\r\n                            data={[\r\n                                { key: 'Job Title', value: 'Sorfware Developer' },\r\n                                { key: 'Company Name', value: 'Kagiweb' },\r\n                                { key: 'Company Description', value: 'lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem' },\r\n                                { key: 'Industry Type', value: 'Information Technology' },\r\n                                { key: 'Contact Email', value: 'kagiweb@gmail.com' },\r\n                                { key: 'Contact Number', value: '09273854600' },\r\n                                { key: 'Company Website', value: 'https://gilbertgit95.github.com/kagiweb' },\r\n                                { key: 'Work Address', value: 'Cantilan, Surigao del Sur' }\r\n                            ]}/>\r\n                    </GenBlock>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AccountProfileView","import FormGroup from '@mui/material/FormGroup'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport Grid from '@mui/material/Grid'\r\nimport Radio from '@mui/material/Radio'\r\n\r\n// note! allowed col Sizes are numbers that when devided to 12 the result is integer\r\nconst RadioList = (props) => {\r\n\r\n    let selected = props.selected? props.selected: null\r\n    // compute the number of column to be rendered\r\n    let colNum = 1\r\n    let propSize = props.colSize? props.colSize: {}\r\n\r\n    // check if the number is valid\r\n    if (   propSize\r\n        && Object.values(propSize)\r\n        && Object.values(propSize).every(item => !Boolean(item % 1))) {\r\n        colNum = 12 / Math.min(...Object.values(propSize))\r\n    }\r\n\r\n    let list = props.list? props.list: []\r\n\r\n    // generate list divisions\r\n    let groupList = []\r\n    if (!list.length) {\r\n        for (let i = 0; i < colNum; i++) {\r\n            // push empty arrays\r\n            groupList.push([])\r\n        }\r\n    } else {\r\n        let groupSize = Math.ceil(list.length / colNum)\r\n        for (let i = 0; i < colNum; i++) {\r\n            // push empty arrays\r\n            groupList.push(list.slice(i * groupSize, i * groupSize + groupSize))\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        if (props.onChange) {\r\n            props.onChange({\r\n                key: e.target.value,\r\n                // checked: e.target.checked\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            {\r\n                groupList.map((subList, subListIndex) => {\r\n                    return (\r\n                        <Grid\r\n                            { ...propSize }\r\n                            key={'listCols' + subListIndex}\r\n                            style={{padding: 0}}\r\n                            item>\r\n                            <FormGroup>\r\n                                {\r\n                                    subList.map((item, index) => {\r\n                                        return (\r\n                                             <FormControlLabel\r\n                                                disabled={item.disabled}\r\n                                                control={\r\n                                                    <Radio\r\n                                                        checked={selected === item.key}\r\n                                                        value={item.key}\r\n                                                        name={props.radioListName? props.radioListName: 'radio-list'} />\r\n                                                }\r\n                                                onChange={onChange}\r\n                                                label={ item.label }\r\n                                                key={ item.label + index } />\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </FormGroup>\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default RadioList","import React, { useEffect, useRef, useContext } from 'react'\r\n\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport TextField from '@mui/material/TextField'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport Button from '@mui/material/Button'\r\nimport Typography from '@mui/material/Typography'\r\nimport FileUploadIcon from '@mui/icons-material/FileUpload'\r\n\r\nimport AccountContext from '../../../common/contexts/accountContext'\r\nimport VerticalSteps from '../../../common/navs/verticalStepsNav'\r\nimport RadioList from '../../../common/inputs/radioList'\r\nimport utils from '../../../common/utilities'\r\n\r\nconst AccountProfileEdit = (props) => {\r\n    const accountCtx = useContext(AccountContext)\r\n    const uploadProfilePicRef = useRef()\r\n\r\n    const steps = [\r\n        {\r\n            icon: null,\r\n            title: 'Basic Profile',\r\n            component: (\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={12} md={6}\r\n                        style={{...styles.grid, ...{ textAlign: '-webkit-center', margin: 'auto'}}}>\r\n                        <Avatar\r\n                            alt=\"Profile Picture\"\r\n                            src=\"/favicon.png\"\r\n                            sx={{ width: 200, height: 200 }} />\r\n                        <input\r\n                            accept=\".jpg, .png, .jpeg, .gif, .bmp\"\r\n                            ref={uploadProfilePicRef}\r\n                            type=\"file\"\r\n                            hidden />\r\n                        <Button\r\n                            color='primary'\r\n                            variant='outlined'\r\n                            onClick={() => {\r\n                                if (uploadProfilePicRef && uploadProfilePicRef.current) {\r\n                                    uploadProfilePicRef.current.click()\r\n                                }\r\n                            }}\r\n                            style={{ marginTop: 30 }}\r\n                            startIcon={ <FileUploadIcon /> }>\r\n                            Upload Image\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}\r\n                        style={styles.grid}>\r\n                        <Typography\r\n                            color='primary'\r\n                            style={{...styles.fields, ...{ marginTop: 15 }}}\r\n                            variant='body1'>\r\n                            Gender\r\n                        </Typography>\r\n                        <Box style={{ padding: 30, paddingTop: 15 }}>\r\n                            <RadioList\r\n                                radioListName='Gender'\r\n                                onChange={(e) => {}}\r\n                                selected={'male'}\r\n                                colSize={{xs: 6}}\r\n                                list={[\r\n                                    { disabled: false, key: 'male', label: 'Male'},\r\n                                    { disabled: false, key: 'female', label: 'Female'}\r\n                                ]} />\r\n                        </Box>\r\n                        <TextField\r\n                            style={styles.fields}\r\n                            fullWidth\r\n                            label=\"Nick Name\" />\r\n                        <TextField\r\n                            style={styles.fields}\r\n                            fullWidth\r\n                            label=\"First Name\" />\r\n                        <TextField\r\n                            style={styles.fields}\r\n                            fullWidth\r\n                            label=\"Middle Name\" />\r\n                        <TextField\r\n                            style={styles.fields}\r\n                            fullWidth\r\n                            label=\"Last Name\" />\r\n                    </Grid>\r\n                </Grid>\r\n            ),\r\n            action: async () => {\r\n                console.log('Basic Profile')\r\n                await utils.waitFor(1)\r\n                return true\r\n            }\r\n        },\r\n        {\r\n            icon: null,\r\n            title: 'Advance Profile',\r\n            component: (\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={12} md={6}\r\n                        style={styles.grid}>\r\n                        <TextField\r\n                            style={styles.fields}\r\n                            fullWidth\r\n                            label=\"Nationality\" />\r\n                        <TextField\r\n                            style={styles.fields}\r\n                            fullWidth\r\n                            label=\"Birth Date\" />\r\n                        <TextField\r\n                            style={styles.fields}\r\n                            fullWidth\r\n                            label=\"Birth Place\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}\r\n                        style={styles.grid}>\r\n                        <TextField\r\n                            style={styles.fields}\r\n                            rows={2}\r\n                            multiline\r\n                            fullWidth\r\n                            label=\"Home Address\" />\r\n                        <TextField\r\n                            style={styles.fields}\r\n                            fullWidth\r\n                            label=\"Personal Website\" />\r\n                        <TextField\r\n                            style={styles.fields}\r\n                            rows={3}\r\n                            multiline\r\n                            fullWidth\r\n                            label=\"Bio\" />\r\n                    </Grid>\r\n                </Grid>\r\n            ),\r\n            action: async () => {\r\n                console.log('Advance Profile')\r\n                await utils.waitFor(1)\r\n                return true\r\n            }\r\n        },\r\n        {\r\n            icon: null,\r\n            title: 'Work Related Profile',\r\n            component: (\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={12} md={6}\r\n                        style={styles.grid}>\r\n                        <TextField\r\n                            style={styles.fields}\r\n                            fullWidth\r\n                            label=\"Job Title\" />\r\n                        <TextField\r\n                            style={styles.fields}\r\n                            fullWidth\r\n                            label=\"Company Name\" />\r\n                        <TextField\r\n                            style={styles.fields}\r\n                            rows={5}\r\n                            multiline\r\n                            fullWidth\r\n                            label=\"Company Description\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}\r\n                        style={styles.grid}>\r\n                        <TextField\r\n                            style={styles.fields}\r\n                            fullWidth\r\n                            label=\"Industry Type\" />\r\n                        <TextField\r\n                            style={styles.fields}\r\n                            fullWidth\r\n                            label=\"Contact Email\" />\r\n                        <TextField\r\n                            style={styles.fields}\r\n                            fullWidth\r\n                            label=\"Contact Number\" />\r\n                        <TextField\r\n                            style={styles.fields}\r\n                            fullWidth\r\n                            label=\"Company Website\" />\r\n                        <TextField\r\n                            style={styles.fields}\r\n                            rows={2}\r\n                            multiline\r\n                            fullWidth\r\n                            label=\"Work Address\" />\r\n                    </Grid>\r\n                </Grid>\r\n            ),\r\n            action: async () => {\r\n                console.log('Work Related Profile')\r\n                await utils.waitFor(1)\r\n                return true\r\n            }\r\n        }\r\n    ]\r\n\r\n    let finalView = {\r\n        component: (\r\n            <>\r\n                <Typography>\r\n                    All steps completed. Please see the change details before\r\n                    saving.\r\n                </Typography>\r\n            </>\r\n        ),\r\n        action: async () => {\r\n            console.log('finish button')\r\n\r\n            await utils.waitFor(1)\r\n\r\n            return true\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('data in account edit: ', accountCtx.accountContext)\r\n\r\n    },[accountCtx.accountContext])\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <VerticalSteps\r\n                    nextBtnLabel={ 'Save and Next' }\r\n                    finishBtnlabel={ 'Save and Finish' }\r\n                    finalBtnLabel={ 'Save Changes' }\r\n                    disableLabelClick={ false }\r\n                    finalView={ finalView }\r\n                    views={ steps } />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    grid: {\r\n        paddingTop: 0\r\n    },\r\n    fields: {\r\n        marginTop: 10\r\n    }\r\n}\r\n\r\nexport default AccountProfileEdit","import { useState } from 'react'\r\n\r\n// import Link from '@mui/material/Link'\r\nimport Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport EditIcon from '@mui/icons-material/Edit'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/contexts/accountContext'\r\nimport AccountProfileView from './components/accountProfileView'\r\nimport AccountProfileEdit from './components/accountProfileEdit'\r\nimport OpenCloseBox from '../../common/blocks/openCloseBox'\r\n\r\nconst AccountProfile = (props) => {\r\n    const [states, setStates] = useState({\r\n        openUpdate: false\r\n    })\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} style={{ paddingTop: 30 }}>\r\n                    {/* <Typography>Account Core Content</Typography> */}\r\n                    { !states.openUpdate? <AccountProfileView />: null }\r\n                    <OpenCloseBox\r\n                        btnIcon={ <EditIcon /> }\r\n                        btnLabel={ 'Update Profile' }\r\n                        isOpen={ states.openUpdate }\r\n                        onOpen={ () => {\r\n                            setStates({ ...states, ...{ openUpdate: true } })\r\n                        }}\r\n                        onClose={ () => {\r\n                            setStates({ ...states, ...{ openUpdate: false } })\r\n                        }}>\r\n                        <AccountProfileEdit />\r\n                    </OpenCloseBox>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AccountProfile","import React, { useState, useEffect } from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\n// import TextField from '@mui/material/TextField'\r\n// import Button from '@mui/material/Button'\r\n// import AccountContext from '../../../common/contexts/accountContext'\r\nimport KeyValueBlock from '../../../common/blocks/keyValueBlock'\r\nimport GenBlock from '../../../common/blocks/genBlock'\r\n\r\n\r\nconst AccountSettingsView = (props) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            setIsLoading(true)\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 1000)\r\n        }\r\n\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Grid\r\n                style={{ marginBottom: 20 }}\r\n                container>\r\n                <Grid\r\n                    item xs={12} sm={12} md={4}\r\n                    style={{ padding: 5 }}>\r\n                    <GenBlock\r\n                        isLoading={isLoading}\r\n                        title={ 'Settings A' }>\r\n                        <KeyValueBlock\r\n                            data={[\r\n                                { key: 'settingsA1', value: 'value' },\r\n                                { key: 'settingsA2', value: 'value' },\r\n                                { key: 'settingsA3', value: '--' }\r\n                            ]}/>\r\n                    </GenBlock>\r\n                </Grid>\r\n\r\n                <Grid\r\n                    item xs={12} sm={12} md={4}\r\n                    style={{ padding: 5 }}>\r\n                    <GenBlock\r\n                        isLoading={isLoading}\r\n                        title={ 'Settings B' }>\r\n                        <KeyValueBlock\r\n                            data={[\r\n                                { key: 'settingsB1', value: 'value' },\r\n                                { key: 'settingsB2', value: 'value' },\r\n                                { key: 'settingsB3', value: '--' }\r\n                            ]}/>\r\n                    </GenBlock>\r\n                </Grid>\r\n\r\n                <Grid\r\n                    item xs={12} sm={12} md={4}\r\n                    style={{ padding: 5 }}>\r\n                    <GenBlock\r\n                        isLoading={isLoading}\r\n                        title={ 'Settings C' }>\r\n                        <KeyValueBlock\r\n                            data={[\r\n                                { key: 'settingsC1', value: 'value' },\r\n                                { key: 'settingsC2', value: 'value' },\r\n                                { key: 'settingsC3', value: '--' },\r\n                                { key: 'settingsC4', value: '--' }\r\n                            ]}/>\r\n                    </GenBlock>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AccountSettingsView","import React, { useEffect, useContext } from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport TextField from '@mui/material/TextField'\r\nimport Button from '@mui/material/Button'\r\nimport Typography from '@mui/material/Typography'\r\nimport AccountContext from '../../../common/contexts/accountContext'\r\nimport VerticalSteps from '../../../common/navs/verticalStepsNav'\r\nimport utils from '../../../common/utilities'\r\n\r\nconst AccountSettingsEdit = (props) => {\r\n\r\n    const accountCtx = useContext(AccountContext)\r\n\r\n    const steps = [\r\n        {\r\n            icon: null,\r\n            title: 'Settings A',\r\n            component: (\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            style={styles.caption}\r\n                            variant='body1'>\r\n                            lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem ipsum quia dolor sit amet\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsA1\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsA2\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsA3\" />\r\n                    </Grid>\r\n                </Grid>\r\n            ),\r\n            action: async () => {\r\n                console.log('Settings A')\r\n                await utils.waitFor(1)\r\n                return true\r\n            }\r\n        },\r\n        {\r\n            icon: null,\r\n            title: 'Settings B',\r\n            component: (\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            style={styles.caption}\r\n                            variant='body1'>\r\n                            lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem ipsum quia dolor sit amet\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsB1\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsB2\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsB3\" />\r\n                    </Grid>\r\n                </Grid>\r\n            ),\r\n            action: async () => {\r\n                console.log('Settings B')\r\n                await utils.waitFor(1)\r\n                return true\r\n            }\r\n        },\r\n        {\r\n            icon: null,\r\n            title: 'Settings C',\r\n            component: (\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            style={styles.caption}\r\n                            variant='body1'>\r\n                            lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem ipsum quia dolor sit amet\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsC1\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsC2\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsC3\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsC4\" />\r\n                    </Grid>\r\n                </Grid>\r\n            ),\r\n            action: async () => {\r\n                console.log('Settings C')\r\n                await utils.waitFor(1)\r\n                return true\r\n            }\r\n        }\r\n    ]\r\n\r\n    let finalView = {\r\n        component: (\r\n            <>\r\n                <Typography>\r\n                    All steps completed. Please see the change details before\r\n                    saving.\r\n                </Typography>\r\n            </>\r\n        ),\r\n        action: async () => {\r\n            console.log('finish button')\r\n\r\n            await utils.waitFor(1)\r\n\r\n            return true\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('data in account settings edit: ', accountCtx.accountContext)\r\n\r\n    },[accountCtx.accountContext])\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <VerticalSteps\r\n                    nextBtnLabel={ 'Save and Next' }\r\n                    finishBtnlabel={ 'Save and Finish' }\r\n                    finalBtnLabel={ 'Save Changes' }\r\n                    disableLabelClick={ false }\r\n                    finalView={ finalView }\r\n                    views={ steps } />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    caption: {\r\n        textIndent: 50,\r\n        marginTop: 20,\r\n        marginBottom: 10\r\n    }\r\n}\r\n\r\nexport default AccountSettingsEdit","import { useState } from 'react'\r\n\r\n// import Link from '@mui/material/Link'\r\nimport Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport EditIcon from '@mui/icons-material/Edit'\r\n// import Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/contexts/accountContext'\r\nimport AccountSettingsView from './components/accountSettingsView'\r\nimport AccountSettingsEdit from './components/accountSettingsEdit'\r\nimport OpenCloseBox from '../../common/blocks/openCloseBox'\r\n\r\nconst AccountSettings = (props) => {\r\n    const [states, setStates] = useState({\r\n        openUpdate: false\r\n    })\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} style={{ paddingTop: 30 }}>\r\n                    {/* <Typography>Account Core Content</Typography> */}\r\n                    { !states.openUpdate? <AccountSettingsView />: null }\r\n                    <OpenCloseBox\r\n                        btnIcon={ <EditIcon /> }\r\n                        btnLabel={ 'Update Settings' }\r\n                        isOpen={ states.openUpdate }\r\n                        onOpen={ () => {\r\n                            setStates({ ...states, ...{ openUpdate: true } })\r\n                        }}\r\n                        onClose={ () => {\r\n                            setStates({ ...states, ...{ openUpdate: false } })\r\n                        }}>\r\n                        <AccountSettingsEdit />\r\n                    </OpenCloseBox>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AccountSettings","import config from '../../../config'\r\nimport MailIcon from '@mui/icons-material/Mail'\r\nimport SettingsApplicationsIcon from '@mui/icons-material/SettingsApplications'\r\nimport LinkIcon from '@mui/icons-material/Link'\r\nimport AccessibilityNewIcon from '@mui/icons-material/AccessibilityNew'\r\nimport SettingsAccessibilityIcon from '@mui/icons-material/SettingsAccessibility';\r\nimport PeopleIcon from '@mui/icons-material/People'\r\n\r\nconst Pages = [\r\n    [\r\n        {\r\n            component: <SettingsApplicationsIcon />,\r\n            label: 'App Settings',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/admin/appSettings`\r\n        },\r\n        {\r\n            component: <LinkIcon />,\r\n            label: 'Endpoints',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/admin/appEndpoints`\r\n        },\r\n        {\r\n            component: <AccessibilityNewIcon />,\r\n            label: 'Role',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/admin/appRoles`\r\n        },\r\n        {\r\n            component: <SettingsAccessibilityIcon />,\r\n            label: 'Role Endpoints',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/admin/appRoleEndpoints`\r\n        },\r\n        {\r\n            component: <PeopleIcon />,\r\n            label: 'App Users',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/admin/appUsers`\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            component: <MailIcon />,\r\n            label: 'Notes',\r\n            type: 'action',\r\n            value: 'notes'\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            // component: <MailIcon />,\r\n            label: 'Notes II',\r\n            type: 'action',\r\n            value: 'notes II'\r\n        }\r\n    ]\r\n]\r\n\r\nexport default Pages","import { matchPath } from 'react-router'\r\nimport { useTheme } from '@mui/material/styles'\r\nimport { useLocation } from 'react-router-dom'\r\nimport MobileStepper from '@mui/material/MobileStepper'\r\nimport Button from '@mui/material/Button'\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft'\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight'\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight'\r\nimport Divider from '@mui/material/Divider'\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs'\r\nimport Link from '@mui/material/Link'\r\n\r\nconst PaginatedNav = (props) => {\r\n\r\n    const theme = useTheme();\r\n    const location = useLocation()\r\n\r\n    const handleNext = (navs, aNav) => {\r\n        let nextNav = aNav + 1\r\n\r\n        if (props.onChangeNav) props.onChangeNav(navs[nextNav])\r\n    }\r\n\r\n    const handleBack = (navs, aNav) => {\r\n        let nextNav = aNav - 1\r\n\r\n        if (props.onChangeNav) props.onChangeNav(navs[nextNav])\r\n    }\r\n\r\n    let activeNav = 0\r\n    let navs = (props.navMenu || [])\r\n        .reduce((acc, item) => {\r\n            acc = [...acc, ...item]\r\n            return acc\r\n        }, [])\r\n        .filter(item => item.type === 'link')\r\n        .map(item => ({\r\n            type: item.type,\r\n            value: item.value,\r\n            label: item.label\r\n        }))\r\n\r\n    navs.forEach((item, index) => {\r\n\r\n        let match = matchPath(\r\n            {\r\n                path: item.value,\r\n                exact: true,\r\n                strict: true\r\n            },\r\n            location.pathname\r\n        )\r\n\r\n        if (match) activeNav = index\r\n    })\r\n\r\n    let currentNav = navs[activeNav]\r\n    let locationRoutes = currentNav.value.split('/')\r\n\r\n    // clean and create breadcrumbs items\r\n    locationRoutes = locationRoutes.filter((item, index) => {\r\n        if (!Boolean(item)) return false\r\n        if (index >= locationRoutes.length - 1) return false\r\n\r\n        return true\r\n    })\r\n\r\n    let disabledNext = activeNav === (navs.length - 1)\r\n    let disabledBack = activeNav === 0\r\n\r\n    let routeOnTop = typeof props.routeOnTop === 'boolean'? props.routeOnTop: true\r\n\r\n    const generateBreadCrumbs = () => {\r\n        return (\r\n            <Breadcrumbs\r\n                style={{padding: 10}}\r\n                separator={<ArrowRightIcon fontSize=\"small\" />}\r\n                aria-label=\"breadcrumb\">\r\n                {\r\n                    locationRoutes.map((item, index) => (\r\n                        <Link\r\n                            key={'breadcrumb_' + index}\r\n                            underline=\"none\"\r\n                            fontSize=\"small\"\r\n                            color=\"inherit\">\r\n                            { item.toUpperCase() }\r\n                        </Link>\r\n                    ))\r\n                }\r\n                <Link\r\n                    underline=\"none\"\r\n                    color=\"text.primary\"\r\n                    fontSize=\"small\"\r\n                    aria-current=\"page\">\r\n                    { currentNav.label.toUpperCase() }\r\n                </Link>\r\n            </Breadcrumbs>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                routeOnTop? (\r\n                    <>\r\n                        { generateBreadCrumbs() }\r\n                        <Divider />\r\n                    </>\r\n                ): null\r\n            }\r\n\r\n\r\n            <MobileStepper\r\n                steps={ navs.length }\r\n                variant=\"dots\"\r\n                position=\"static\"\r\n                activeStep={ activeNav }\r\n                sx={{ maxWidth: '100%', flexGrow: 1 }}\r\n                nextButton={\r\n                    <Button size=\"small\" onClick={ () => handleNext(navs, activeNav) } disabled={ disabledNext }>\r\n                        { disabledNext? 'Next':  navs[activeNav + 1].label }\r\n                        { theme.direction === 'rtl' ? <KeyboardArrowLeft />: <KeyboardArrowRight /> }\r\n                    </Button>\r\n                }\r\n                backButton={\r\n                    <Button size=\"small\" onClick={() => handleBack(navs, activeNav) } disabled={ disabledBack }>\r\n                        { theme.direction === 'rtl' ?  <KeyboardArrowRight />: <KeyboardArrowLeft /> }\r\n                        { disabledBack? 'Back':  navs[activeNav - 1].label }\r\n                    </Button>\r\n                } />\r\n            \r\n            \r\n            {\r\n                !routeOnTop? (\r\n                    <>\r\n                        <Divider />\r\n                        { generateBreadCrumbs() }\r\n                    </>\r\n                ): null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaginatedNav","import React, {useContext, useState, useEffect, useRef} from 'react'\r\nimport { matchPath } from 'react-router'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Divider from '@mui/material/Divider'\r\n\r\nimport List from '@mui/material/List'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport ListItemIcon from '@mui/material/ListItemIcon'\r\nimport ListItemText from '@mui/material/ListItemText'\r\n\r\nimport PaginatedNav from '../../common/navs/paginatedNav'\r\nimport RouterContext from '../../common/contexts/routerContext'\r\n\r\nconst navAnchors = new Set(['left', 'right'])\r\n\r\nconst SubPagesLayout = (props) => {\r\n\r\n    // default to left when no anchore is setted\r\n    const navAnchor = props.navAnchor && navAnchors.has(props.navAnchor)? props.navAnchor: 'left'\r\n\r\n    const routerCtx = useContext(RouterContext)\r\n    const location = useLocation()\r\n    const [veryLong, setVeryLong] = useState(false)\r\n    const mainSection = useRef()\r\n    // const navigate = useNavigate()\r\n\r\n    const onClickNav = (e) => {\r\n        // check for event info\r\n        if (e && e.type) {\r\n          // navigate to routes if the its a link\r\n          if (e.type === 'link') {\r\n            routerCtx.setRouterContext(e.value)\r\n    \r\n          // callback nav value if its an action\r\n          } else if (e.type === 'action') {\r\n            //  check for callback property\r\n            if (props.onAction && typeof props.onAction == 'function') {\r\n              props.onAction(e.value)\r\n            }\r\n          }\r\n        }\r\n    \r\n        // return will imediately end the method in the stack\r\n        return\r\n    }\r\n\r\n    const generateDrawerItems = (anchor, itemsGroup) => {\r\n\r\n        return (\r\n          <Box\r\n            role='presentation'>\r\n            {\r\n              itemsGroup.map((items, itemsIndex) => {\r\n                return (\r\n                  <React.Fragment key={anchor + '_groupItemsFragment_' + itemsIndex}>\r\n                    <List\r\n                      // style={{ position: 'fixed' }}\r\n                      key={anchor + '_groupItems_' + itemsIndex}>\r\n                      {\r\n                        items.map((item, index) => {\r\n                          let match = null\r\n\r\n                          // proceed to matching if item is a link\r\n                          if (item.type === 'link') {\r\n                            match = matchPath(\r\n                              {\r\n                                path: item.value,\r\n                                exact: true,\r\n                                strict: true\r\n                              },\r\n                              location.pathname\r\n                            )\r\n                          }\r\n\r\n                          return (\r\n                            <ListItem\r\n                              button\r\n                              selected={ Boolean(match) }\r\n                              onClick={(e) => {\r\n                                onClickNav({type: item.type, value: item.value})\r\n                              }}\r\n                              key={anchor + '_groupChildItems_' + itemsIndex + '_' + index}>\r\n                              <ListItemIcon>\r\n                                { item.component? item.component: null }\r\n                              </ListItemIcon>\r\n                              <ListItemText primary={item.label} />\r\n                            </ListItem>\r\n                          )\r\n                        })\r\n                      }\r\n                    </List>\r\n    \r\n                    {/* divider */}\r\n                    { itemsIndex < itemsGroup.length -1? <Divider key={anchor + '_groupDivider_' + itemsIndex} />: null }\r\n                  </React.Fragment>\r\n                )\r\n              })\r\n            }\r\n          </Box>\r\n        )\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n      const onScroll = () => {\r\n        let mainSectionHeight = 0\r\n        let windowHeight = window.innerHeight\r\n\r\n        if (mainSection && mainSection.current && mainSection.current.clientHeight) {\r\n          mainSectionHeight = mainSection.current.clientHeight\r\n\r\n          setVeryLong(mainSectionHeight >= windowHeight)\r\n        }\r\n      }\r\n\r\n      window.addEventListener('scroll', onScroll)\r\n      return () => {\r\n        window.removeEventListener('scroll', onScroll)\r\n      }\r\n    }, [])\r\n\r\n    return (\r\n        <Box>\r\n            <Grid container spacing={2}>\r\n                {\r\n                  navAnchor === 'left'? (\r\n                    <Grid\r\n                      item md={3} lg={2}\r\n                      style={{ padding: 0 }}\r\n                      sx={{ display: { xs: 'none', sm: 'none', md: 'block' }}}>\r\n                      { generateDrawerItems('subPagesNav', props.navMenu? props.navMenu: []) }\r\n                    </Grid>\r\n                  ): null\r\n                }\r\n\r\n                <Grid item xs={12} sm={12} md={9} lg={10} style={{textAlign: 'center'}}>\r\n                    <Container>\r\n                      <Box\r\n                        sx={{\r\n                          display: { sm: 'block', md: 'none' },\r\n                        }}>\r\n                        <PaginatedNav\r\n                          navMenu={ props.navMenu }\r\n                          onChangeNav={(e) => {\r\n                            onClickNav({type: e.type, value: e.value})\r\n                          }} />\r\n                      </Box>\r\n                      <Box ref={mainSection}>\r\n                          { props.children? props.children: null }\r\n                      </Box>\r\n                      \r\n                      {/* show pagination when in mobile view and when the page is long */}\r\n                      {\r\n                        veryLong? (\r\n                          <Box\r\n                            sx={{\r\n                              display: { sm: 'block', md: 'none' },\r\n                            }}>\r\n                            <PaginatedNav\r\n                              routeOnTop={false}\r\n                              navMenu={ props.navMenu }\r\n                              onChangeNav={(e) => {\r\n                                onClickNav({type: e.type, value: e.value})\r\n                              }} />\r\n                          </Box>\r\n                        ): null\r\n                      }\r\n                    </Container>\r\n                </Grid>\r\n\r\n                {\r\n                  navAnchor === 'right'? (\r\n                    <Grid\r\n                      item md={3} lg={2}\r\n                      sx={{ display: { xs: 'none', sm: 'none', md: 'block' }}}>\r\n                      { generateDrawerItems('subPagesNav', props.navMenu? props.navMenu: []) }\r\n                    </Grid>\r\n                  ): null\r\n                }\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SubPagesLayout","import React, { useState, useEffect } from 'react'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\n// import TextField from '@mui/material/TextField'\r\n// import Button from '@mui/material/Button'\r\n// import AccountContext from '../../../common/contexts/accountContext'\r\nimport KeyValueBlock from '../../../common/blocks/keyValueBlock'\r\nimport GenBlock from '../../../common/blocks/genBlock'\r\n\r\n\r\nconst AppSettingsView = (props) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            setIsLoading(true)\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 1000)\r\n        }\r\n\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Grid\r\n                style={{ marginBottom: 20 }}\r\n                container>\r\n                <Grid\r\n                    item xs={12} sm={12} md={4}\r\n                    style={{ padding: 5 }}>\r\n                    <GenBlock\r\n                        isLoading={isLoading}\r\n                        title={ 'Settings A' }>\r\n                        <KeyValueBlock\r\n                            data={[\r\n                                { key: 'settingsA1', value: 'value' },\r\n                                { key: 'settingsA2', value: 'value' },\r\n                                { key: 'settingsA3', value: '--' }\r\n                            ]}/>\r\n                    </GenBlock>\r\n                </Grid>\r\n\r\n                <Grid\r\n                    item xs={12} sm={12} md={4}\r\n                    style={{ padding: 5 }}>\r\n                    <GenBlock\r\n                        isLoading={isLoading}\r\n                        title={ 'Settings B' }>\r\n                        <KeyValueBlock\r\n                            data={[\r\n                                { key: 'settingsB1', value: 'value' },\r\n                                { key: 'settingsB2', value: 'value' },\r\n                                { key: 'settingsB3', value: '--' }\r\n                            ]}/>\r\n                    </GenBlock>\r\n                </Grid>\r\n\r\n                <Grid\r\n                    item xs={12} sm={12} md={4}\r\n                    style={{ padding: 5 }}>\r\n                    <GenBlock\r\n                        isLoading={isLoading}\r\n                        title={ 'Settings C' }>\r\n                        <KeyValueBlock\r\n                            data={[\r\n                                { key: 'settingsC1', value: 'value' },\r\n                                { key: 'settingsC2', value: 'value' },\r\n                                { key: 'settingsC3', value: '--' },\r\n                                { key: 'settingsC4', value: '--' }\r\n                            ]}/>\r\n                    </GenBlock>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AppSettingsView","import React, { useEffect, useContext } from 'react'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport TextField from '@mui/material/TextField'\r\n// import Button from '@mui/material/Button'\r\nimport Typography from '@mui/material/Typography'\r\n// import AccountContext from '../../../common/contexts/accountContext'\r\nimport VerticalSteps from '../../../common/navs/verticalStepsNav'\r\nimport utils from '../../../common/utilities'\r\n\r\nconst AppSettingsEdit = (props) => {\r\n\r\n    const steps = [\r\n        {\r\n            icon: null,\r\n            title: 'Settings A',\r\n            component: (\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            style={styles.caption}\r\n                            variant='body1'>\r\n                            lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem ipsum quia dolor sit amet\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsA1\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsA2\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsA3\" />\r\n                    </Grid>\r\n                </Grid>\r\n            ),\r\n            action: async () => {\r\n                console.log('Settings A')\r\n                await utils.waitFor(1)\r\n                return true\r\n            }\r\n        },\r\n        {\r\n            icon: null,\r\n            title: 'Settings B',\r\n            component: (\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            style={styles.caption}\r\n                            variant='body1'>\r\n                            lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem ipsum quia dolor sit amet\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsB1\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsB2\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsB3\" />\r\n                    </Grid>\r\n                </Grid>\r\n            ),\r\n            action: async () => {\r\n                console.log('Settings B')\r\n                await utils.waitFor(1)\r\n                return true\r\n            }\r\n        },\r\n        {\r\n            icon: null,\r\n            title: 'Settings C',\r\n            component: (\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            style={styles.caption}\r\n                            variant='body1'>\r\n                            lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem ipsum quia dolor sit amet\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsC1\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsC2\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsC3\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"SettingsC4\" />\r\n                    </Grid>\r\n                </Grid>\r\n            ),\r\n            action: async () => {\r\n                console.log('Settings C')\r\n                await utils.waitFor(1)\r\n                return true\r\n            }\r\n        }\r\n    ]\r\n\r\n    let finalView = {\r\n        component: (\r\n            <>\r\n                <Typography>\r\n                    All steps completed. Please see the change details before\r\n                    saving.\r\n                </Typography>\r\n            </>\r\n        ),\r\n        action: async () => {\r\n            console.log('finish button')\r\n\r\n            await utils.waitFor(1)\r\n\r\n            return true\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <VerticalSteps\r\n                    nextBtnLabel={ 'Save and Next' }\r\n                    finishBtnlabel={ 'Save and Finish' }\r\n                    finalBtnLabel={ 'Save Changes' }\r\n                    disableLabelClick={ false }\r\n                    finalView={ finalView }\r\n                    views={ steps } />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    caption: {\r\n        textIndent: 50,\r\n        marginTop: 20,\r\n        marginBottom: 10\r\n    }\r\n}\r\n\r\nexport default AppSettingsEdit","import { useState, useEffect } from 'react'\r\nimport subpages from './lib/subPages'\r\n\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport EditIcon from '@mui/icons-material/Edit'\r\n// import Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/contexts/accountContext'\r\nimport AppSettingsView from './components/appSettingsView'\r\nimport AppSettingsEdit from './components/appSettingsEdit'\r\nimport OpenCloseBox from '../../common/blocks/openCloseBox'\r\n\r\nconst AppSettings = (props) => {\r\n    const [states, setStates] = useState({\r\n        openUpdate: false\r\n    })\r\n\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Container maxWidth=\"md\">\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} style={{ paddingTop: 30, textAlign: 'left' }}>\r\n                        {/* <Typography>Account Core Content</Typography> */}\r\n                        { !states.openUpdate? <AppSettingsView />: null }\r\n                        <OpenCloseBox\r\n                            btnIcon={ <EditIcon /> }\r\n                            btnLabel={ 'Update Settings' }\r\n                            isOpen={ states.openUpdate }\r\n                            onOpen={ () => {\r\n                                setStates({ ...states, ...{ openUpdate: true } })\r\n                            }}\r\n                            onClose={ () => {\r\n                                setStates({ ...states, ...{ openUpdate: false } })\r\n                            }}>\r\n                            <AppSettingsEdit />\r\n                        </OpenCloseBox>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default AppSettings","import { useState, useEffect } from 'react'\r\nimport subpages from './lib/subPages'\r\n\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/contexts/accountContext'\r\n\r\nconst AppEndpoints = (props) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            setIsLoading(true)\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 1000)\r\n        }\r\n\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Grid item xs={12}>\r\n                <Typography>App Endpoints</Typography>\r\n            </Grid>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default AppEndpoints","import { useState, useEffect } from 'react'\r\nimport subpages from './lib/subPages'\r\n\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/contexts/accountContext'\r\n\r\nconst AppRoles = (props) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            setIsLoading(true)\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 1000)\r\n        }\r\n\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Grid item xs={12}>\r\n                <Typography>App Roles</Typography>\r\n            </Grid>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default AppRoles","import { useState, useEffect } from 'react'\r\nimport subpages from './lib/subPages'\r\n\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/contexts/accountContext'\r\n\r\nconst AppRoleEndpoints = (props) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            setIsLoading(true)\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 1000)\r\n        }\r\n\r\n        fetchData()\r\n    }, [])\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Grid item xs={12}>\r\n                <Typography>App Role Endpoints</Typography>\r\n            </Grid>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default AppRoleEndpoints","import { useState, useEffect } from 'react'\r\nimport subpages from './lib/subPages'\r\n\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/contexts/accountContext'\r\n\r\nconst AppUsers = (props) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            setIsLoading(true)\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 1000)\r\n        }\r\n\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Grid item xs={12}>\r\n                <Typography>App Users</Typography>\r\n            </Grid>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default AppUsers","import config from '../../../config'\r\nimport CommitIcon from '@mui/icons-material/Commit'\r\n\r\nconst Pages = [\r\n    [\r\n        {\r\n            component: <CommitIcon />,\r\n            label: 'Introduction',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/demo/introduction`\r\n        },\r\n        {\r\n            component: <CommitIcon />,\r\n            label: 'Buttons',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/demo/buttons`\r\n        },\r\n        {\r\n            component: <CommitIcon />,\r\n            label: 'Inputs',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/demo/inputs`\r\n        },\r\n        {\r\n            component: <CommitIcon />,\r\n            label: 'Lists',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/demo/lists`\r\n        },\r\n        {\r\n            component: <CommitIcon />,\r\n            label: 'Navigations',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/demo/navigations`\r\n        },\r\n        {\r\n            component: <CommitIcon />,\r\n            label: 'Blocks',\r\n            type: 'link',\r\n            value: `/${ config.rootRoute }/demo/blocks`\r\n        }\r\n    ]\r\n]\r\n\r\nexport default Pages","import { useState, useEffect } from 'react'\r\nimport subpages from './lib/subPages'\r\n\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\nimport GenBlock from '../../common/blocks/genBlock'\r\n// import AccountContext from '../../common/contexts/accountContext'\r\n\r\nconst Introduction = (props) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            setIsLoading(true)\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 2000)\r\n        }\r\n\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Grid item xs={12}>\r\n                <GenBlock\r\n                    isLoading={isLoading}\r\n                    title={'The App'}\r\n                    description={`\r\n                        The lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem\r\n                        ipsum quia dolor sit amet. which translates to “Nor is there anyone who loves or pursues\r\n                        or desires to obtain pain of itself, because it is pain. The lorem ipsum gets its name \r\n                        from the Latin phrase Neque porro quisquam est qui dolorem ipsum quia dolor sit amet. which\r\n                        translates to “Nor is there anyone who loves or pursues or desires to obtain pain of itself,\r\n                        because it is pain.\r\n                    `} />\r\n\r\n                <GenBlock\r\n                    isLoading={isLoading}\r\n                    title={'Developer'}\r\n                    description={`\r\n                        The lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem\r\n                        ipsum quia dolor sit amet. which translates to “Nor is there anyone who loves or pursues\r\n                        or desires to obtain pain of itself, because it is pain. The lorem ipsum gets its name \r\n                        from the Latin phrase Neque porro quisquam est qui dolorem ipsum quia dolor sit amet. which\r\n                        translates to “Nor is there anyone who loves or pursues or desires to obtain pain of itself,\r\n                        because it is pain.\r\n                    `} />\r\n            </Grid>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default Introduction","import { useContext } from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport WebhookIcon from '@mui/icons-material/Webhook'\r\nimport Skeleton from '@mui/material/Skeleton'\r\nimport Typography from '@mui/material/Typography'\r\nimport LocalStorageContext from '../contexts/localStorageContext'\r\nimport { CodeBlock, vs2015, atomOneLight } from \"react-code-blocks\"\r\n\r\nconst CodeBlockComponent = (props) => {\r\n    const {localStorageContext} = useContext(LocalStorageContext)\r\n\r\n    let themeMode = localStorageContext.themeMode\r\n    let defaultTheme = themeMode === 'dark'? vs2015: atomOneLight\r\n\r\n    let isLoading = typeof props.isLoading === 'boolean'? props.isLoading: false\r\n    \r\n    return (\r\n        <Box\r\n            style={{\r\n                ...{marginBottom: 20, textAlign: 'left'},\r\n                ...(props.style? props.style: {})\r\n            }}>\r\n            {\r\n                !isLoading? (\r\n                    <>\r\n                        {/* the title section */}\r\n                        {\r\n                            props.title?  (\r\n                                <Typography\r\n                                    variant='h6'\r\n                                    color='primary'\r\n                                    id={props.title.replace(/\\s/g, '').toLowerCase()}\r\n                                    style={{marginBottom: 5}}>\r\n                                    <WebhookIcon size='small' /><span>{ props.title }</span>\r\n                                </Typography>\r\n                            ): null\r\n                        }\r\n\r\n                        {/* the description section */}\r\n                        {\r\n                            props.description? (\r\n                                <Typography\r\n                                    variant='body1'\r\n                                    style={{marginBottom: 15, textIndent: 50}}>\r\n                                    { props.description }\r\n                                </Typography>\r\n                            ): null\r\n                        }\r\n\r\n                        {/* the rendered section */}\r\n                        {\r\n                            props.rendered? (\r\n                                <>\r\n                                    <Typography\r\n                                        style={{\r\n                                            fontStyle: 'italic',\r\n                                            display: 'block'\r\n                                        }}\r\n                                        variant='caption'>Rendered Sample:</Typography>\r\n                                    <Box style={{padding: 20}}>\r\n                                        { props.rendered }\r\n                                    </Box>\r\n                                </>\r\n                            ): null\r\n                        }\r\n\r\n                        {/* the code block section */}\r\n                        {\r\n                            props.code? (\r\n                                <CodeBlock\r\n                                    text={props.code}\r\n                                    language={props.language? props.language: 'javascript'}\r\n                                    showLineNumbers={Boolean(props.showLineNumbers)}\r\n                                    theme={props.theme? props.theme: defaultTheme} />\r\n                            ): null\r\n                        }\r\n\r\n                        {/* the children content section */}\r\n                        {\r\n                            props.children? (\r\n                                <Box style={{marginTop: 10}}>\r\n                                    { props.children }\r\n                                </Box>\r\n                            ): null\r\n                        }\r\n                    </>\r\n                ): (\r\n                    <>\r\n                        <Typography\r\n                            component=\"div\"\r\n                            variant=\"h3\">\r\n                            <Skeleton\r\n                                animation=\"wave\"\r\n                                style={{width: 200}} />\r\n                        </Typography>\r\n                        <Typography\r\n                            component=\"div\"\r\n                            variant=\"caption\">\r\n                            <Skeleton\r\n                                animation=\"wave\" />\r\n                        </Typography>\r\n                        <Typography\r\n                            component=\"div\"\r\n                            variant=\"caption\">\r\n                            <Skeleton\r\n                                animation=\"wave\"\r\n                                style={{ width: '85%'}} />\r\n                        </Typography>\r\n                        <Skeleton\r\n                            animation=\"wave\"\r\n                            variant='rectangular'\r\n                            style={{height: 150, marginTop: 10}}>\r\n                        </Skeleton>\r\n                    </>\r\n                )\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CodeBlockComponent","import { useEffect, useState } from 'react'\r\nimport subpages from './lib/subPages'\r\n\r\nimport LoadingButton from '../../common/buttons/loadingButton'\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\nimport CodeBlock from '../../common/blocks/codeBlock'\r\n\r\n// import AccountContext from '../../common/contexts/accountContext'\r\n\r\nconst testTitle = 'Loading Button'\r\nconst testDescription = `\r\n    The lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem\r\n    ipsum quia dolor sit amet. which translates to “Nor is there anyone who loves or pursues\r\n    or desires to obtain pain of itself, because it is pain.\r\n`\r\nconst testCode = `\r\n// in the import section\r\nimport LoadingButton from '/common/buttons/loadingButton'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\n\r\n// ... in the component\r\n// in the render section\r\nreturn (\r\n    <LoadingButton\r\n        size='small'\r\n        variant='contained'\r\n        color='primary'\r\n        onClick={(e) => {}}\r\n        isLoading={false}\r\n        startIcon={<LoginIcon />}>\r\n        login\r\n    </LoadingButton>\r\n)\r\n`\r\n\r\nconst Buttons = (props) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            setIsLoading(true)\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 2000)\r\n        }\r\n\r\n        fetchData()\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Grid item xs={12}>\r\n                <CodeBlock\r\n                    isLoading={isLoading}\r\n                    title={testTitle}\r\n                    description={testDescription}\r\n                    code={testCode}\r\n                    language={'jsx'}\r\n                    showLineNumbers={true}\r\n                    rendered={(\r\n                        <>\r\n                            <LoadingButton\r\n                                size='small'\r\n                                variant='contained'\r\n                                color='primary'\r\n                                onClick={(e) => {}}\r\n                                isLoading={true}\r\n                                startIcon={<LoginIcon />}>\r\n                                login\r\n                            </LoadingButton>\r\n                            <LoadingButton\r\n                                size='small'\r\n                                variant='contained'\r\n                                color='primary'\r\n                                onClick={(e) => {}}\r\n                                isLoading={false}\r\n                                startIcon={<LoginIcon />}>\r\n                                login\r\n                            </LoadingButton>\r\n                        </>\r\n                    )}\r\n                    theme={null}>\r\n                    <Typography variant='body1'>\r\n                        The lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem\r\n                        ipsum quia dolor sit amet. which translates to “Nor is there anyone who loves or pursues\r\n                        or desires to obtain pain of itself, because it is pain.\r\n                    </Typography>\r\n                </CodeBlock>\r\n            </Grid>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default Buttons","import FormGroup from '@mui/material/FormGroup'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport Grid from '@mui/material/Grid'\r\n\r\n// note! allowed col Sizes are numbers that when devided to 12 the result is integer\r\nconst CheckList = (props) => {\r\n    \r\n    // compute the number of column to be rendered\r\n    let colNum = 1\r\n    let propSize = props.colSize? props.colSize: {}\r\n\r\n    // check if the number is valid\r\n    if (   propSize\r\n        && Object.values(propSize)\r\n        && Object.values(propSize).every(item => !Boolean(item % 1))) {\r\n        colNum = 12 / Math.min(...Object.values(propSize))\r\n    }\r\n\r\n    let list = props.list? props.list: []\r\n\r\n    // generate list divisions\r\n    let groupList = []\r\n    if (!list.length) {\r\n        for (let i = 0; i < colNum; i++) {\r\n            // push empty arrays\r\n            groupList.push([])\r\n        }\r\n    } else {\r\n        let groupSize = Math.ceil(list.length / colNum)\r\n        for (let i = 0; i < colNum; i++) {\r\n            // push empty arrays\r\n            groupList.push(list.slice(i * groupSize, i * groupSize + groupSize))\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        if (props.onChange) {\r\n            props.onChange({\r\n                key: e.target.value,\r\n                checked: e.target.checked\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            {\r\n                groupList.map((subList, subListIndex) => {\r\n                    return (\r\n                        <Grid\r\n                            { ...propSize }\r\n                            key={'listCols' + subListIndex}\r\n                            style={{padding: 0}}\r\n                            item>\r\n                            <FormGroup>\r\n                                {\r\n                                    subList.map((item, index) => {\r\n                                        return (\r\n                                             <FormControlLabel\r\n                                                disabled={item.disabled}\r\n                                                control={<Checkbox value={item.key} checked={item.checked} />}\r\n                                                onChange={onChange}\r\n                                                label={ item.label }\r\n                                                key={ item.label + index } />\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </FormGroup>\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default CheckList","import { useEffect, useState } from 'react'\r\nimport subpages from './lib/subPages'\r\n\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\nimport CodeBlock from '../../common/blocks/codeBlock'\r\nimport CheckList from '../../common/inputs/checkList'\r\nimport RadioList from '../../common/inputs/radioList'\r\n// import AccountContext from '../../common/contexts/accountContext'\r\n\r\nconst SelectListSampleCode = `\r\n// in import section\r\nimport CheckList from '/common/inputs/checkList'\r\nimport { useState } from 'react'\r\n\r\n// ...in component section\r\n// in the state section\r\nconst [items, setItems] = useState([\r\n    { checked: false, disabled: true, key: '001', label: 'Item number 1'},\r\n    { checked: false, disabled: false, key: '002', label: 'Item number 2'},\r\n    { checked: false, disabled: false, key: '003', label: 'Item number 3'},\r\n    { checked: false, disabled: false, key: '004', label: 'Item number 4'},\r\n    { checked: false, disabled: false, key: '005', label: 'Item number 5'},\r\n    { checked: true, disabled: false, key: '006', label: 'Item number 6'}\r\n])\r\n\r\n// in the methods section\r\nconst onChangeChecklist = (e) => {\r\n    if (e) {\r\n        let checkItems = items.map(item => {\r\n            if (e.key === item.key) item.checked = e.checked\r\n            return item\r\n        })\r\n\r\n        setItems(checkItems)\r\n    }\r\n}\r\n\r\n// in the render section\r\nreturn (\r\n    <CheckList\r\n        onChange={onChangeChecklist}\r\n        colSize={{xs: 12, sm: 6, md: 3}}\r\n        list={items} />\r\n)\r\n`\r\nconst RadioListSampleCode = `\r\n// in import section\r\nimport RadioList from '/common/inputs/radioList'\r\nimport { useState } from 'react'\r\n\r\n// ...in component section\r\n// in the state section\r\nconst [selectedRadio, setSelectedRadio] = useState(null)\r\nconst radioItems = [\r\n    { disabled: true, key: '001', label: 'Item number 1'},\r\n    { disabled: false, key: '002', label: 'Item number 2'},\r\n    { disabled: false, key: '003', label: 'Item number 3'},\r\n    { disabled: false, key: '004', label: 'Item number 4'},\r\n    { disabled: false, key: '005', label: 'Item number 5'},\r\n    { disabled: false, key: '006', label: 'Item number 6'}\r\n]\r\n\r\n// in the methods section\r\nconst onChangeRadiolist = (e) => {\r\n    if (e) {\r\n        setSelectedRadio(e.key)\r\n    }\r\n}\r\n\r\n// in the render section\r\nreturn (\r\n    <RadioList\r\n        radioListName='testRadio'\r\n        onChange={onChangeRadiolist}\r\n        selected={selectedRadio}\r\n        colSize={{xs: 12, sm: 6, md: 3}}\r\n        list={radioItems} />\r\n)\r\n`\r\n\r\nconst Inputs = (props) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [items, setItems] = useState([\r\n        { checked: false, disabled: true, key: '001', label: 'Item number 1'},\r\n        { checked: false, disabled: false, key: '002', label: 'Item number 2'},\r\n        { checked: false, disabled: false, key: '003', label: 'Item number 3'},\r\n        { checked: false, disabled: false, key: '004', label: 'Item number 4'},\r\n        { checked: false, disabled: false, key: '005', label: 'Item number 5'},\r\n        { checked: true, disabled: false, key: '006', label: 'Item number 6'}\r\n    ])\r\n    const [selectedRadio, setSelectedRadio] = useState(null)\r\n    const radioItems = [\r\n        { disabled: true, key: '001', label: 'Item number 1'},\r\n        { disabled: false, key: '002', label: 'Item number 2'},\r\n        { disabled: false, key: '003', label: 'Item number 3'},\r\n        { disabled: false, key: '004', label: 'Item number 4'},\r\n        { disabled: false, key: '005', label: 'Item number 5'},\r\n        { disabled: false, key: '006', label: 'Item number 6'}\r\n    ]\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    const onChangeChecklist = (e) => {\r\n        if (e) {\r\n            let checkItems = items.map(item => {\r\n                if (e.key === item.key) item.checked = e.checked\r\n                return item\r\n            })\r\n\r\n            setItems(checkItems)\r\n        }\r\n        // console.log(e)\r\n    }\r\n\r\n    const onChangeRadiolist = (e) => {\r\n        if (e) {\r\n            setSelectedRadio(e.key)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            setIsLoading(true)\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 2000)\r\n        }\r\n\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Grid item xs={12}>\r\n                <CodeBlock\r\n                    isLoading={isLoading}\r\n                    title={'Checkbox List Component'}\r\n                    description={`The lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem\r\n                    ipsum quia dolor sit amet. which translates to “Nor is there anyone who loves or pursues\r\n                    or desires to obtain pain of itself`}\r\n                    code={SelectListSampleCode}\r\n                    language={'jsx'}\r\n                    showLineNumbers={true}\r\n                    rendered={(\r\n                        <CheckList\r\n                            onChange={onChangeChecklist}\r\n                            colSize={{xs: 12, sm: 6, md: 3}}\r\n                            list={items} />\r\n                    )}>\r\n                    <Typography variant='body1'>\r\n                        The lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem\r\n                        ipsum quia dolor sit amet. which translates to “Nor is there anyone who loves or pursues\r\n                        or desires to obtain pain of itself, because it is pain.\r\n                    </Typography>\r\n                </CodeBlock>\r\n\r\n                <CodeBlock\r\n                    isLoading={isLoading}\r\n                    title={'Radio List Component'}\r\n                    description={`The lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem\r\n                    ipsum quia dolor sit amet. which translates to “Nor is there anyone who loves or pursues\r\n                    or desires to obtain pain of itself`}\r\n                    code={RadioListSampleCode}\r\n                    language={'jsx'}\r\n                    showLineNumbers={true}\r\n                    rendered={(\r\n                        <RadioList\r\n                            radioListName='testRadio'\r\n                            onChange={onChangeRadiolist}\r\n                            selected={selectedRadio}\r\n                            colSize={{xs: 12, sm: 6, md: 3}}\r\n                            list={radioItems} />\r\n                    )}>\r\n                    <Typography variant='body1'>\r\n                        The lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem\r\n                        ipsum quia dolor sit amet. which translates to “Nor is there anyone who loves or pursues\r\n                        or desires to obtain pain of itself, because it is pain.\r\n                        The lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem\r\n                        ipsum quia dolor sit amet. which translates to “Nor is there anyone who loves or pursues\r\n                        or desires to obtain pain of itself, because it is pain.\r\n                    </Typography>\r\n                </CodeBlock>\r\n            </Grid>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default Inputs","import Typography from '@mui/material/Typography'\r\nimport List from '@mui/material/List'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport ListItemIcon from '@mui/material/ListItemIcon'\r\nimport ListItemText from '@mui/material/ListItemText'\r\nimport TripOriginIcon from '@mui/icons-material/TripOrigin'\r\nimport Grid from '@mui/material/Grid'\r\n\r\nconst variants = new Set(['unordered', 'ordered'])\r\n\r\n// note! allowed col Sizes are numbers that when devided to 12 the result is integer\r\nconst BasicList = (props) => {\r\n    \r\n    // compute the number of column to be rendered\r\n    let colNum = 1\r\n    let propSize = props.colSize? props.colSize: {}\r\n\r\n    // check if the number is valid\r\n    if (   propSize\r\n        && Object.values(propSize)\r\n        && Object.values(propSize).every(item => !Boolean(item % 1))) {\r\n        colNum = 12 / Math.min(...Object.values(propSize))\r\n    }\r\n\r\n    let list = props.list? props.list: []\r\n    let variant = props.variant && variants.has(props.variant)? props.variant: 'unordered'\r\n\r\n    // generate list divisions\r\n    let groupList = []\r\n    if (!list.length) {\r\n        for (let i = 0; i < colNum; i++) {\r\n            // push empty arrays\r\n            groupList.push([])\r\n        }\r\n    } else {\r\n        let groupSize = Math.ceil(list.length / colNum)\r\n        for (let i = 0; i < colNum; i++) {\r\n            // push empty arrays\r\n            groupList.push(list.slice(i * groupSize, i * groupSize + groupSize))\r\n        }\r\n    }\r\n\r\n    // inital count is 0\r\n    let itemCount = 0\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            {\r\n                groupList.map((subList, subListIndex) => {\r\n                    return (\r\n                        <Grid\r\n                            { ...propSize }\r\n                            key={'listCols' + subListIndex}\r\n                            style={{padding: 0}}\r\n                            item>\r\n                            <List dense={true} style={{padding: 0, margin: 'auto'}}>\r\n                                {\r\n                                    subList.map((item, index) => {\r\n                                        itemCount++\r\n\r\n                                        return (\r\n                                            <ListItem key={item + index}>\r\n                                                <ListItemIcon style={{minWidth: 30}}>\r\n                                                    {\r\n                                                        variant === 'ordered'? (\r\n                                                            <Typography variant='subtitle1'>{ itemCount }.</Typography>\r\n                                                        ): <TripOriginIcon />\r\n                                                    }\r\n                                                </ListItemIcon>\r\n                                                <ListItemText\r\n                                                    primary={ item } />\r\n                                            </ListItem>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </List>\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default BasicList","import { useEffect, useState } from 'react'\r\n\r\nimport subpages from './lib/subPages'\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/contexts/accountContext'\r\n// import GenBlock from '../../common/blocks/genBlock'\r\nimport CodeBlock from '../../common/blocks/codeBlock'\r\nimport BasicList from '../../common/lists/basicList'\r\n\r\nconst items = [\r\n    'Item number 1',\r\n    'Item number 2',\r\n    'Item number 3',\r\n    'Item number 4',\r\n    'Item number 5'\r\n]\r\n\r\nlet basicListTestCode = `\r\n// in the import section\r\nimport BasicList from '/common/lists/basicList'\r\n\r\n// in the component\r\nreturn (\r\n    <BasicList\r\n        variant=\"ordered\"\r\n        colSize={{xs: 12, sm: 6}}\r\n        list={[\r\n            'Item number 1',\r\n            'Item number 2',\r\n            'Item number 3',\r\n            'Item number 4',\r\n            'Item number 5'\r\n        ]} />\r\n)\r\n`\r\n\r\nconst Lists = (props) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            setIsLoading(true)\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 2000)\r\n        }\r\n\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Grid item xs={12}>\r\n                <CodeBlock\r\n                    isLoading={isLoading}\r\n                    title={'Basic List Component'}\r\n                    description={`The lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem\r\n                    ipsum quia dolor sit amet. which translates to “Nor is there anyone who loves or pursues\r\n                    or desires to obtain pain of itself`}\r\n                    code={basicListTestCode}\r\n                    language={'jsx'}\r\n                    showLineNumbers={true}\r\n                    rendered={(\r\n                        <BasicList\r\n                            variant=\"unordered\"\r\n                            colSize={{xs: 12, sm: 6}}\r\n                            list={items} />\r\n                    )}>\r\n                    <Typography variant='body1'>\r\n                        The lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem\r\n                        ipsum quia dolor sit amet. which translates to “Nor is there anyone who loves or pursues\r\n                        or desires to obtain pain of itself, because it is pain. The lorem ipsum gets its name\r\n                        from the Latin phrase Neque porro quisquam est qui dolorem ipsum quia dolor sit amet.\r\n                        which translates to “Nor is there anyone who loves or pursues or desires to obtain pain\r\n                        of itself, because it is pain.\r\n                    </Typography>\r\n                </CodeBlock>\r\n            </Grid>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default Lists","// import { useState, useContext } from 'react'\r\nimport subpages from './lib/subPages'\r\n\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\n// import AccountContext from '../../common/contexts/accountContext'\r\n\r\nconst Navs = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Grid item xs={12}>\r\n                <Typography>Navigations</Typography>\r\n            </Grid>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default Navs","import { useEffect, useState } from 'react'\r\nimport subpages from './lib/subPages'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nimport SubPageslayout from '../../common/layouts/subPagesLayout'\r\n\r\n// import Link from '@mui/material/Link'\r\n// import Container from '@mui/material/Container'\r\n// import Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\n// import TextField from '@mui/material/TextField'\r\n// import LoginIcon from '@mui/icons-material/Login'\r\n// import Button from '@mui/material/Button'\r\n\r\nimport CodeBlock from '../../common/blocks/codeBlock'\r\nimport GenBlock from '../../common/blocks/genBlock'\r\n\r\n// import AccountContext from '../../common/contexts/accountContext'\r\n\r\nconst testCodeBlockDescription = `\r\n    The lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem\r\n    ipsum quia dolor sit amet. which translates to “Nor is there anyone who loves or pursues\r\n    or desires to obtain pain of itself, because it is pain.\r\n`\r\nconst testCodeBlockCode = `\r\nimport React from 'react'\r\nimport Button from '@mui/material/Button'\r\nimport CircularProgress from '@mui/material/CircularProgress'\r\n\r\nconst LoadingButton = (props) => {\r\n\r\n    let properties = {}\r\n\r\n    // properties not tobe included\r\n    let xProps = new Set(['isLoading'])\r\n\r\n    // assign object properties\r\n    Object.keys(props).forEach(key => {\r\n        if (xProps.has(key)) return\r\n        properties[key] = props[key]\r\n    })\r\n\r\n    // start icon\r\n    let startIcon = props.startIcon? props.startIcon: null\r\n\r\n    // if isLoading is true, set disabled to true\r\n    if (props.isLoading) {\r\n        startIcon = <CircularProgress size={12} />\r\n        properties.disabled = true\r\n    }\r\n\r\n    return (\r\n        <Button\r\n            {...properties}\r\n            startIcon={ startIcon }>\r\n            { props.children? props.children: '' }\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default LoadingButton\r\n`\r\n\r\nconst Blocks = (props) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            setIsLoading(true)\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 2000)\r\n        }\r\n\r\n        fetchData()\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <SubPageslayout\r\n            navAnchor={'left'}\r\n            navMenu={subpages}>\r\n            <Grid item xs={12}>\r\n                <CodeBlock\r\n                    isLoading={isLoading}\r\n                    title={'Code Block Component'}\r\n                    description={testCodeBlockDescription}\r\n                    code={testCodeBlockCode}\r\n                    language={'jsx'}\r\n                    showLineNumbers={true}\r\n                    theme={null}>\r\n                    <Typography variant='body1'>\r\n                        The lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem\r\n                        ipsum quia dolor sit amet. which translates to “Nor is there anyone who loves or pursues\r\n                        or desires to obtain pain of itself, because it is pain.\r\n                    </Typography>\r\n                </CodeBlock>\r\n                <GenBlock\r\n                    isLoading={isLoading}\r\n                    title={'General Block Component'}\r\n                    description={testCodeBlockDescription}>\r\n                    <Typography variant='body1'>\r\n                        The lorem ipsum gets its name from the Latin phrase Neque porro quisquam est qui dolorem\r\n                        ipsum quia dolor sit amet. which translates to “Nor is there anyone who loves or pursues\r\n                        or desires to obtain pain of itself, because it is pain. The lorem ipsum gets its name\r\n                        from the Latin phrase Neque porro quisquam est qui dolorem ipsum quia dolor sit amet.\r\n                        which translates to “Nor is there anyone who loves or pursues or desires to obtain pain\r\n                        of itself, because it is pain.\r\n                    </Typography>\r\n                </GenBlock>\r\n            </Grid>\r\n        </SubPageslayout>\r\n    )\r\n}\r\n\r\nexport default Blocks","import Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport Link from '@mui/material/Link'\r\nimport InitialLoadinglayout from '../../common/layouts/initalLoadingLayout'\r\nimport config from '../../config'\r\n\r\nconst NotFound = (props) => {\r\n\r\n    return (\r\n        <InitialLoadinglayout>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        style={{marginTop: '5%'}}\r\n                        color='primary'\r\n                        variant='h4'>\r\n                        Error 404 not found Content.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography\r\n                        color='primary'\r\n                        variant='subtitle1'>\r\n                        This page does not exist, or you are currently logged out.\r\n                        Try signing in to access the page.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Link\r\n                        color=\"primary\"\r\n                        href={`/${ config.rootRoute }/auth/login`}>\r\n                        click here to signin\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n        </InitialLoadinglayout>\r\n    )\r\n}\r\n\r\nexport default NotFound","import { useContext } from 'react'\r\nimport {\r\n    Navigate,\r\n    BrowserRouter,\r\n    Routes,\r\n    Route\r\n} from 'react-router-dom'\r\n\r\n// layouts components\r\nimport PublicPageLayout from '../common/layouts/publicPageLayout'\r\nimport AuthLayout from '../common/layouts/authLayout'\r\nimport MainLayout from '../common/layouts/mainLayout'\r\n\r\n// auth pages\r\nimport Login from './auth/login'\r\nimport ResetPassword from './auth/resetPassword'\r\nimport ForgotPassword from './auth/forgotPassword'\r\n\r\n// root pages\r\nimport Home from './home'\r\n\r\n// notifications pages\r\nimport Notifications from './notifications'\r\n\r\n// acount pages\r\nimport AccountCredentials from './account/accountCredentials'\r\nimport AccountProfile from './account/accountProfile'\r\nimport AccountSettings from './account/accountSettings'\r\n\r\n// admin pages\r\nimport AppSettings from './admin/appSettings'\r\nimport AppEndpoints from './admin/appEndpoints'\r\nimport AppRoles from './admin/appRoles'\r\nimport AppRoleEndpoints from './admin/appRoleEndpoints'\r\nimport AppUsers from './admin/appUsers'\r\n\r\n// demo pages\r\nimport DemoIntroduction from './demo/introduction'\r\nimport DemoButtons from './demo/buttons'\r\nimport DemoInputs from './demo/inputs'\r\nimport DemoLists from './demo/lists'\r\nimport DemoNavigations from './demo/navs'\r\nimport DemoBlocks from './demo/blocks'\r\n\r\n// error page\r\nimport NotFound from './notFound'\r\n\r\nimport config from '../config'\r\nimport AccountContext from '../common/contexts/accountContext'\r\n\r\nconst Pages = (props) => {\r\n    const AccCtx = useContext(AccountContext)\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Routes>\r\n                {/* initial redirect */}\r\n                <Route path=\"/\" element={<Navigate replace to={`/${ config.rootRoute }/auth/login`} />} />\r\n\r\n                {/* auth pages */}\r\n                <Route path={`${ config.rootRoute }/auth/`} element={<AuthLayout />}>\r\n                    <Route path=\"\" element={<Navigate replace to={`/${ config.rootRoute }/auth/login`} />} />\r\n                    <Route path=\"login\" element={<Login />} />\r\n                    <Route path=\"resetPassword\" element={<ResetPassword />} />\r\n                    <Route path=\"resetPassword/:key\" element={<ResetPassword />} />\r\n                    <Route path=\"forgotPassword\" element={<ForgotPassword />} />\r\n                </Route>\r\n\r\n                {\r\n                    // render the main content routes if the user has loggedin\r\n                    AccCtx.accountContext.__isLoggedIn? (\r\n                        <>\r\n                            {/* Root pages */}\r\n                            <Route path={`${ config.rootRoute }/`} element={<MainLayout />}>\r\n                                <Route path=\"\" element={<Navigate replace to={`/${ config.rootRoute }/home`} />} />\r\n                                <Route path=\"home\" element={<Home />} />\r\n                            </Route>\r\n\r\n                            {/* Notifications pages */}\r\n                            <Route path={`${ config.rootRoute }/notifications/`} element={<MainLayout />}>\r\n                                {/* <Route path=\"\" element={<Navigate replace to={`/${ config.rootRoute }/notifications`} />} /> */}\r\n                                <Route path=\"\" element={<Notifications />} />\r\n                            </Route>\r\n\r\n                            {/* Account pages */}\r\n                            <Route path={`${ config.rootRoute }/account/`} element={<MainLayout />}>\r\n                                <Route path=\"\" element={<Navigate replace to={`/${ config.rootRoute }/account/credentials`} />} />\r\n                                <Route path=\"credentials\" element={<AccountCredentials />} />\r\n                                <Route path=\"profile\" element={<AccountProfile />} />\r\n                                <Route path=\"settings\" element={<AccountSettings />} />\r\n                            </Route>\r\n\r\n                            {/* Admin pages */}\r\n                            <Route path={`${ config.rootRoute }/admin/`} element={<MainLayout />}>\r\n                                <Route path=\"\" element={<Navigate replace to={`/${ config.rootRoute }/admin/appSettings`} />} />\r\n                                <Route path=\"appSettings\" element={<AppSettings />} />\r\n                                <Route path=\"appEndpoints\" element={<AppEndpoints />} />\r\n                                <Route path=\"appRoles\" element={<AppRoles />} />\r\n                                <Route path=\"appRoleEndpoints\" element={<AppRoleEndpoints />} />\r\n                                <Route path=\"appUsers\" element={<AppUsers />} />\r\n                            </Route>\r\n\r\n                            {/* Demo pages */}\r\n                            <Route path={`${ config.rootRoute }/demo/`} element={<MainLayout />}>\r\n                                <Route path=\"\" element={<Navigate replace to={`/${ config.rootRoute }/demo/introduction`} />} />\r\n                                <Route path=\"introduction\" element={<DemoIntroduction />} />\r\n                                <Route path=\"buttons\" element={<DemoButtons />} />\r\n                                <Route path=\"inputs\" element={<DemoInputs />} />\r\n                                <Route path=\"lists\" element={<DemoLists />} />\r\n                                <Route path=\"navigations\" element={<DemoNavigations />} />\r\n                                <Route path=\"blocks\" element={<DemoBlocks />} />\r\n                            </Route>\r\n                        </>\r\n                    ): null\r\n                }\r\n\r\n                {/* error page */}\r\n                <Route\r\n                    path='*'\r\n                    element={\r\n                        <PublicPageLayout>\r\n                            <NotFound />\r\n                        </PublicPageLayout>\r\n                    } />\r\n            </Routes>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Pages","import { SnackbarProvider } from 'notistack'\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles'\r\nimport CssBaseline from '@mui/material/CssBaseline'\r\nimport PrimaryTheme from './common/themes/primary'\r\n\r\nimport LocalStorageContext, { useLocalStorageContext } from './common/contexts/localStorageContext'\r\nimport AccountContext, { useAccountContext } from './common/contexts/accountContext'\r\nimport AdminContext, { useAdminContext } from './common/contexts/adminContext'\r\nimport Pages from './pages'\r\n\r\nimport './App.css'\r\nimport config from './config'\r\n\r\nfunction App() {\r\n  const adminStates = useAdminContext()\r\n  const accountStates = useAccountContext()\r\n  const localStorageStates = useLocalStorageContext()\r\n\r\n  let theme = createTheme({\r\n    ...PrimaryTheme,\r\n    ...{\r\n      palette: {\r\n        ...PrimaryTheme.palette,\r\n        ...{ mode: localStorageStates.localStorageContext.themeMode}\r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <SnackbarProvider maxSnack={ config.notifLength }>\r\n        {/* provides local storage data globally with respect to the pages */}\r\n        <LocalStorageContext.Provider value={{ ...localStorageStates }}>\r\n            {/* provides account data globally with respect to the pages */}\r\n            <AccountContext.Provider value={{ ...accountStates }}>\r\n              {/* provides admin data globally with respect to the pages */}\r\n              <AdminContext.Provider value={{ ...adminStates }}>\r\n                <Pages />\r\n              </AdminContext.Provider>\r\n            </AccountContext.Provider>\r\n        </LocalStorageContext.Provider>\r\n      </SnackbarProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}