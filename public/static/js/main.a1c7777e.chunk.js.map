{"version":3,"sources":["common/utilities/index.js","common/context/accountContext.js","common/context/localStorageContext.js","common/themes/primary.js","config/index.js","common/layouts/publicPageLayout.js","common/themes/themeToggle.jsx","common/navs/mainNav.jsx","common/layouts/authLayout.js","common/layouts/mainLayout.js","common/buttons/loadingButton.js","pages/auth/login.js","pages/auth/logout.js","pages/auth/resetPassword.js","pages/auth/forgotPassword.js","pages/home/index.js","pages/account/components/accountView.js","pages/account/components/accountEdit.js","pages/account/index.js","pages/account/accountProfile.js","pages/account/accountSettings.js","pages/notFound/index.js","pages/index.js","App.js","reportWebVitals.js","index.js"],"names":["commonUtilities","waitFor","sec","Promise","resolve","reject","setTimeout","AccountContext","createContext","accountContext","setAccountContext","data","initAccountData","testAccountData","storageName","defaultValue","themeMode","LocalStorageContext","localStorageContext","updateLocalStorage","toggleThemeMode","primary","palette","mode","main","secondary","typography","fontSize","fontFamily","join","config","appName","environment","development","api","staging","production","PublicPagelayout","props","Container","maxWidth","Box","Grid","container","spacing","item","xs","style","textAlign","children","ThemeToggle","useContext","display","Boolean","noLabel","Typography","variant","gutterBottom","Switch","size","checked","onChange","MainNav","useState","anchorElRightMenu","setAnchorElRightMenu","navRoute","setNavRoute","leftMenu","rightMenu","drawer","setDrawer","navigate","useNavigate","useEffect","handleCloseRightMenu","toggleDrawer","anchor","open","event","type","key","onClickNav","e","value","onAction","generateDrawerItems","itemsGroup","mainMenu","role","map","items","itemsIndex","Fragment","List","index","ListItem","button","onClick","ListItemIcon","component","ListItemText","label","length","Divider","AppBar","position","isTransparent","background","boxShadow","Toolbar","disableGutters","noWrap","leftLogo","sx","mr","md","flexGrow","IconButton","color","Drawer","onClose","Button","my","middleMenu","Tooltip","title","marginRight","rightLogo","currentTarget","p","mt","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","AuthLayout","borderRadius","console","log","alt","width","src","margin","padding","paddingTop","paddingBottom","MainLayout","accountCtx","Avatar","Badge","badgeContent","LoadingButton","properties","xProps","Set","Object","keys","forEach","has","startIcon","isLoading","CircularProgress","disabled","Login","loginProgress","password","username","errors","internalstates","setInternalStates","login","a","utils","TextField","fullWidth","marginTop","Link","href","Logout","cancel","redirect","ResetPassword","useParams","resetProgress","newPassword","confirmPassword","resetKey","setResetKey","resetPassword","target","InputProps","endAdornment","InputAdornment","edge","ForgotPassword","forgotProgress","addressType","addressValue","forgotRequest","ToggleButtonGroup","exclusive","method","ToggleButton","email","phone","Home","AccountView","AccountEdit","required","Account","AccountProfile","AccountSettings","NotFound","Pages","path","element","App","accountStates","UseAccountContext","localStorageStates","setLocalStorageContext","valObj","newStorageVal","localStorage","setItem","JSON","stringify","localStoreVal","getItem","parsedVal","parse","UseLocalStorageContext","theme","createTheme","PrimaryTheme","Provider","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1c7777e.chunk.js","sourcesContent":["import moment from 'moment'\r\n\r\nconst commonUtilities = {\r\n    waitFor(sec) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => resolve(true), sec * 1e3)\r\n        })\r\n    }\r\n}\r\n\r\nexport default commonUtilities","import { useEffect, useState, createContext } from 'react'\r\nimport utils from '../utilities'\r\n\r\nconst AccountContext = createContext({\r\n    accountContext: {},\r\n    setAccountContext(data) { return },\r\n    initAccountData() { return }\r\n})\r\nexport default AccountContext\r\n\r\nexport const UseAccountContext = () => {\r\n    const [accountContext, setAccountContext] = useState({\"__isLoading\": false})\r\n\r\n    const initAccountData = async () => {\r\n        console.log('account data is being fetched')\r\n        setAccountContext({...accountContext, ...{\"__isLoading\": true}})\r\n        await utils.waitFor(2)\r\n        setAccountContext(testAccountData)\r\n        console.log('account data has loaded')\r\n    }\r\n\r\n    return {accountContext, setAccountContext, initAccountData}\r\n}\r\n\r\nconst testAccountData = {\r\n    \"__isLoading\": false,\r\n    \"id\": \"e79c8692-4cc2-4971-a52c-832e87b27e7f\",\r\n    \"username\": \"gilbert95\",\r\n    \"twoFactorAuth\": false,\r\n    \"disableAccount\": false,\r\n    \"primaryEmail\": null,\r\n    \"secondayEmail\": null,\r\n    \"primaryEmailVerified\": false,\r\n    \"secondaryEmailVerified\": false,\r\n    \"primaryNumber\": null,\r\n    \"secondayNumber\": null,\r\n    \"primaryNumberVerified\": false,\r\n    \"secondaryNumberVerified\": false,\r\n    \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n    \"updatedAt\": \"2021-11-20T15:27:31.513Z\",\r\n    \"roleId\": \"6b1b7d6a-c325-4908-912c-f485078a53fc\",\r\n    \"role\": {\r\n        \"id\": \"e79c8692-4cc2-4971-a52c-832e87b46e8f\",\r\n        \"name\": \"Super admin\",\r\n        \"description\": \"Has access to all endpoints\",\r\n        \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n        \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n    },\r\n    \"claims\": [\r\n        {\r\n            \"id\": \"e79c8692-4cc2-4971-a52c-832e87b11e8f\",\r\n            \"accountId\": \"e79c8692-4cc2-4971-a52c-832e87b28e8f\",\r\n            \"key\": \"fullName\",\r\n            \"value\": \"Master Account\",\r\n            \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n            \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n          },\r\n          {\r\n            \"id\": \"e79c8692-4cc2-4971-a52c-832e87b12e8f\",\r\n            \"accountId\": \"e79c8692-4cc2-4971-a52c-832e87b28e8f\",\r\n            \"key\": \"gender\",\r\n            \"value\": \"Male\",\r\n            \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n            \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n          },\r\n          {\r\n            \"id\": \"e79c8692-4cc2-4971-a52c-832e87b13e8f\",\r\n            \"accountId\": \"e79c8692-4cc2-4971-a52c-832e87b28e8f\",\r\n            \"key\": \"language\",\r\n            \"value\": \"Bisaya\",\r\n            \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n            \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n          },\r\n          {\r\n            \"id\": \"e79c8692-4cc2-4971-a52c-832e87b11e7f\",\r\n            \"accountId\": \"e79c8692-4cc2-4971-a52c-832e87b27e7f\",\r\n            \"key\": \"fullName\",\r\n            \"value\": \"Berto Admin\",\r\n            \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n            \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n          },\r\n          {\r\n            \"id\": \"e79c8692-4cc2-4971-a52c-832e87b12e7f\",\r\n            \"accountId\": \"e79c8692-4cc2-4971-a52c-832e87b27e7f\",\r\n            \"key\": \"gender\",\r\n            \"value\": \"Male\",\r\n            \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n            \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n          },\r\n          {\r\n            \"id\": \"e79c8692-4cc2-4971-a52c-832e87b13e7f\",\r\n            \"accountId\": \"e79c8692-4cc2-4971-a52c-832e87b27e7f\",\r\n            \"key\": \"language\",\r\n            \"value\": \"Bisaya\",\r\n            \"createdAt\": \"2021-11-20T15:27:31.513Z\",\r\n            \"updatedAt\": \"2021-11-20T15:27:31.513Z\"\r\n          }\r\n    ]\r\n}","import { useEffect, useState, createContext } from 'react'\r\n\r\nconst storageName = 'app_info'\r\n\r\nlet defaultValue = {\r\n    themeMode: 'light'\r\n}\r\n\r\nconst LocalStorageContext = createContext({\r\n    localStorageContext: defaultValue,\r\n    updateLocalStorage(data) { return },\r\n    toggleThemeMode() { return }\r\n})\r\nexport default LocalStorageContext\r\n\r\nexport const UseLocalStorageContext = () => {\r\n    const [localStorageContext, setLocalStorageContext] = useState(defaultValue)\r\n\r\n    const updateLocalStorage = (valObj) => {\r\n        let newStorageVal = {...localStorageContext, ...valObj}\r\n        setLocalStorageContext(newStorageVal)\r\n        localStorage.setItem(storageName, JSON.stringify(newStorageVal))\r\n    }\r\n\r\n    const toggleThemeMode = () => {\r\n        let themeMode = localStorageContext.themeMode\r\n        let newThemeMode = (themeMode && themeMode === 'light')? 'dark': 'light'\r\n        updateLocalStorage({themeMode: newThemeMode})\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log('use effect in localstorage')\r\n        let localStoreVal = localStorage.getItem(storageName)\r\n        let parsedVal = defaultValue\r\n\r\n        if (localStoreVal) {\r\n            parsedVal = JSON.parse(localStoreVal)\r\n        }\r\n\r\n        updateLocalStorage(parsedVal)\r\n\r\n    }, [])\r\n\r\n    return {localStorageContext, updateLocalStorage, toggleThemeMode}\r\n}","const primary = {\r\n    palette: {\r\n        mode: 'dark',\r\n        primary: {\r\n            main: '#176a75',\r\n        },\r\n        secondary: {\r\n            main: '#dc195b',\r\n        }\r\n    },\r\n    typography: {\r\n        fontSize: 14,\r\n        fontFamily: [\r\n          '-apple-system',\r\n          'BlinkMacSystemFont',\r\n          '\"Segoe UI\"',\r\n          'Roboto',\r\n          '\"Helvetica Neue\"',\r\n          'Arial',\r\n          'sans-serif',\r\n          '\"Apple Color Emoji\"',\r\n          '\"Segoe UI Emoji\"',\r\n          '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n    },\r\n}\r\n\r\nexport default primary","let config = {\r\n    appName: 'kagiweb',\r\n    environment: 'development',\r\n    // environment: 'staging'\r\n    // environment: 'production'\r\n    development: {\r\n        api: 'http://localhost:5000'\r\n    },\r\n    staging: {\r\n        api: 'http://localhost:5000'\r\n    },\r\n    production: {\r\n        api: 'http://localhost:5000'\r\n    }\r\n}\r\n\r\nconfig = {...config, ...config[config.environment]}\r\n\r\ndelete config.development\r\ndelete config.staging\r\ndelete config.production\r\n\r\nexport default config","import { useState, useContext } from 'react'\r\nimport { Outlet, Link } from \"react-router-dom\"\r\nimport Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nimport config from '../../config'\r\n\r\nconst PublicPagelayout = (props) => {\r\n\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <Box>\r\n                <Grid container spacing={2}>\r\n                    {/* <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                        <Typography variant=\"h4\" gutterBottom component=\"div\">\r\n                            { config.appName }\r\n                        </Typography>\r\n                    </Grid> */}\r\n                    <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                        <Box>\r\n                            { props.children? props.children: <Outlet /> }\r\n                        </Box>\r\n                    </Grid>\r\n                    {/* <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Copyrights 2021\r\n                        </Typography>\r\n                    </Grid> */}\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PublicPagelayout","\r\nimport React, { useState, useEffect, useContext } from 'react'\r\nimport Switch from '@mui/material/Switch'\r\nimport Typography from '@mui/material/Typography'\r\nimport LocalStorageContext from '../context/localStorageContext.js'\r\n\r\nconst ThemeToggle = (props) => {\r\n\r\n    const { localStorageContext, toggleThemeMode}  = useContext(LocalStorageContext)\r\n\r\n    return (\r\n        <div style={{ display: 'inline-block' }}>\r\n            {\r\n                !Boolean(props.noLabel)? (\r\n                    <Typography variant=\"caption\" display=\"inline-block\" gutterBottom>\r\n                        Dark Mode\r\n                    </Typography>\r\n                ): null\r\n            }\r\n            <Switch\r\n                size='small'\r\n                checked={localStorageContext.themeMode === 'dark'}\r\n                onChange={() => {\r\n                    toggleThemeMode()\r\n                }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeToggle","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport AppBar from '@mui/material/AppBar'\r\nimport Box from '@mui/material/Box'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Typography from '@mui/material/Typography'\r\nimport Menu from '@mui/material/Menu'\r\nimport MenuIcon from '@mui/icons-material/Menu'\r\nimport Container from '@mui/material/Container'\r\nimport Button from '@mui/material/Button'\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport Drawer from '@mui/material/Drawer'\r\nimport List from '@mui/material/List'\r\nimport Divider from '@mui/material/Divider'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport ListItemIcon from '@mui/material/ListItemIcon'\r\nimport ListItemText from '@mui/material/ListItemText'\r\n\r\nconst MainNav = (props) => {\r\n  const [anchorElRightMenu, setAnchorElRightMenu] = useState(null)\r\n  const [navRoute, setNavRoute] = useState(null)\r\n  const [drawer, setDrawer] = useState({\r\n      leftMenu: false,\r\n      rightMenu: false\r\n  })\r\n  const navigate = useNavigate()\r\n\r\n  // life cycles\r\n  useEffect(() => {\r\n    // use to navigate\r\n    if (navRoute) {\r\n      navigate(navRoute)\r\n    }\r\n  }, [navRoute, navigate])\r\n\r\n  const handleOpenRightMenu = (event) => {\r\n    setAnchorElRightMenu(event.currentTarget)\r\n  }\r\n\r\n  const handleCloseRightMenu = () => {\r\n    setAnchorElRightMenu(null)\r\n  }\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' || event.key === 'Shift')\r\n    ) {\r\n      return\r\n    }\r\n\r\n    setDrawer({ ...drawer, [anchor]: open })\r\n  }\r\n\r\n  const onClickNav = (e) => {\r\n    // check for event info\r\n    if (e && e.type) {\r\n      // navigate to routes if the its a link\r\n      if (e.type === 'link') {\r\n        setNavRoute(e.value)\r\n\r\n      // callback nav value if its an action\r\n      } else if (e.type === 'action') {\r\n        //  check for callback property\r\n        if (props.onAction && typeof props.onAction == 'function') {\r\n          props.onAction(e.value)\r\n        }\r\n      }\r\n    }\r\n\r\n    // return will imediately end the method in the stack\r\n    return\r\n  }\r\n\r\n  const generateDrawerItems = (anchor, itemsGroup) => {\r\n\r\n    if (props.mainMenu) {\r\n        // compute array of munus, including divisions\r\n    }\r\n\r\n    return (\r\n      <Box\r\n        // sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\r\n        role=\"presentation\">\r\n        {\r\n          itemsGroup.map((items, itemsIndex) => {\r\n            return (\r\n              <React.Fragment key={anchor + '_groupItemsFragment_' + itemsIndex}>\r\n                <List key={anchor + '_groupItems_' + itemsIndex}>\r\n                  {\r\n                    items.map((item, index) => (\r\n                      <ListItem\r\n                        button\r\n                        onClick={(e) => {\r\n                          onClickNav({type: item.type, value: item.value})\r\n                          if (item.type === 'action' || item.type === 'link') {\r\n                            toggleDrawer(anchor, false)(e)\r\n                          }\r\n                        }}\r\n                        key={anchor + '_groupChildItems_' + itemsIndex + '_' + index}>\r\n                        <ListItemIcon>\r\n                          { item.component? item.component: null }\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={item.label} />\r\n                      </ListItem>\r\n                    ))\r\n                  }\r\n                </List>\r\n\r\n                {/* divider */}\r\n                { itemsIndex < itemsGroup.length -1? <Divider key={anchor + '_groupDivider_' + itemsIndex} />: null }\r\n              </React.Fragment>\r\n            )\r\n          })\r\n        }\r\n      </Box>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"static\"\r\n      style={props.isTransparent? { background: 'transparent', boxShadow: 'none'}: {}}>\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n\r\n          {/* logo display for big screen size */}\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            onClick={() => {\r\n              onClickNav({type: props.leftLogo.type, value: props.leftLogo.value})\r\n            }}\r\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}>\r\n            { props.leftLogo? props.leftLogo.component: null }\r\n          </Typography>\r\n\r\n          {/* left drawer for small screen */}\r\n          {\r\n            props.leftMenu && props.leftMenu.length? (\r\n              <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  aria-label={ props.leftLogo? props.leftLogo.label: '' }\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={toggleDrawer('leftMenu', true)}\r\n                  color=\"inherit\">\r\n                  <MenuIcon />\r\n                </IconButton>\r\n                <Drawer\r\n                    anchor={'left'}\r\n                    open={drawer['leftMenu']}\r\n                    onClose={toggleDrawer('leftMenu', false)}>\r\n                    { generateDrawerItems('leftMenu', props.leftMenu? props.leftMenu: []) }\r\n                </Drawer>\r\n              </Box>\r\n            ): null\r\n          }\r\n\r\n          {/* logo display for small screen size */}\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            onClick={() => {\r\n              onClickNav({type: props.leftLogo.type, value: props.leftLogo.value})\r\n            }}\r\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            { props.leftLogo? props.leftLogo.component: null }\r\n          </Typography>\r\n\r\n          {/* main menu display for bigscreen size */}\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            {\r\n              props.leftMenu? props.leftMenu.map((items, itemsIndex) => {\r\n                return (\r\n                  items.map((item, index) => (\r\n                    <Button\r\n                      onClick={() => {\r\n                        onClickNav({type: item.type, value: item.value})\r\n                      }}\r\n                      key={'groupPlainItems_' + itemsIndex + '_' + index}\r\n                      // onClick={handleCloseNavMenu}\r\n                      sx={{ my: 2, color: 'white', display: 'block' }}>\r\n                      { item.label }\r\n                    </Button>\r\n                  ))\r\n                )\r\n              }): null\r\n            }\r\n          </Box>\r\n\r\n          {/* right settings section */}\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            {/* middle menu */}\r\n            {\r\n              props.middleMenu? props.middleMenu.map((item, index) => {\r\n                return (\r\n                  <Tooltip\r\n                    onClick={() => {\r\n                      onClickNav({type: item.type, value: item.value})\r\n                    }}\r\n                    title={ item.label }\r\n                    style={{marginRight: 15}}\r\n                    key={'middleMenu_' + index}>\r\n                    { item.component }\r\n                  </Tooltip>\r\n                )\r\n              }): null\r\n            }\r\n\r\n            {/* right menu */}\r\n            {/* right menu for big screen */}\r\n            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'inline-block' } }}>\r\n              <Tooltip title={ props.rightLogo? props.rightLogo.label: '' }>\r\n                <IconButton onClick={handleOpenRightMenu} sx={{ p: 0 }}>\r\n                  { props.rightLogo? props.rightLogo.component: null }\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Menu\r\n                sx={{ mt: '45px' }}\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElRightMenu}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={Boolean(anchorElRightMenu)}\r\n                onClose={handleCloseRightMenu}>\r\n                {\r\n                  props.rightMenu? props.rightMenu.map((items, itemsIndex) => {\r\n                    return (\r\n                      <List key={'rightMenuDDgroupItems_' + itemsIndex}>\r\n                        {\r\n                          items.map((item, index) => (\r\n                            <MenuItem\r\n                              key={'rightMenuDDgroupChildItems_' + itemsIndex + '_' + index}\r\n                              onClick={() => {\r\n                                onClickNav({type: item.type, value: item.value})\r\n                                if (item.type === 'action' || item.type === 'link') {\r\n                                  handleCloseRightMenu()\r\n                                }\r\n                              }}>\r\n                              <ListItemIcon>\r\n                                { item.component? item.component: null }\r\n                              </ListItemIcon>\r\n                              <Typography textAlign=\"center\">{item.label}</Typography>\r\n                            </MenuItem>\r\n                          ))\r\n                        }\r\n                        {/* divider */}\r\n                        { itemsIndex < props.rightMenu.length -1? <Divider key={'rightMenuDDgroupItems_groupDivider_' + itemsIndex} />: null }\r\n                      </List>\r\n                    )\r\n                  }): null\r\n                }\r\n              </Menu>\r\n            </Box>\r\n\r\n            {/* right settings for small screen */}\r\n            <Box sx={{ flexGrow: 1, display: { xs: 'inline-block', md: 'none' } }}>\r\n              <Tooltip title={ props.rightLogo? props.rightLogo.label: '' }>\r\n                <IconButton\r\n                  sx={{ p: 0 }}\r\n                  onClick={toggleDrawer('rightMenu', true)}>\r\n                  { props.rightLogo? props.rightLogo.component: null }\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Drawer\r\n                anchor={'top'}\r\n                open={drawer['rightMenu']}\r\n                onClose={toggleDrawer('rightMenu', false)}>\r\n                { generateDrawerItems('rightMenu', props.rightMenu? props.rightMenu: []) }\r\n              </Drawer>\r\n            </Box>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  )\r\n}\r\nexport default MainNav","import { useState, useContext } from 'react'\r\nimport { Outlet, Link } from \"react-router-dom\"\r\nimport Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport MenuIcon from '@mui/icons-material/Menu'\r\nimport MailIcon from '@mui/icons-material/Mail'\r\nimport IconButton from '@mui/material/Button'\r\nimport Button from '@mui/material/IconButton'\r\n\r\nimport AccountContext from '../context/accountContext'\r\nimport ThemeToggle from '../themes/themeToggle'\r\n\r\nimport MainNav from '../navs/mainNav'\r\nimport config from '../../config'\r\n\r\nconst AuthLayout = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // let accountVal = ctx.accountContext && ctx.accountContext.testVal? ctx.accountContext.testVal: ''\r\n    let rightLogo = {\r\n        label: 'Open settings',\r\n        component: <MenuIcon />,\r\n        type: 'action',\r\n        value: 'openSettings'\r\n    }\r\n    let middleMenu = [\r\n        {\r\n            label: 'Latest news from our team',\r\n            component: (\r\n                <Button size=\"small\" style={{ borderRadius: 5, marginRight: 15 }}>\r\n                    <Typography>News</Typography>\r\n                </Button>\r\n            ),\r\n            type: 'link',\r\n            value: '/home'\r\n        },\r\n        {\r\n            label: 'Contact or Learn about our Team',\r\n            component: (\r\n                <Button size=\"small\"  style={{ borderRadius: 5, marginRight: 15 }}>\r\n                    <Typography>About Us</Typography>\r\n                </Button>\r\n            ),\r\n            type: 'link',\r\n            value: '/home'\r\n        }\r\n    ]\r\n    let rightMenu = [\r\n        [\r\n            {\r\n                component: (\r\n                    <Box sx={{ display: 'inline-block' }}>\r\n                        <ThemeToggle noLabel={true} />\r\n                    </Box>\r\n                ),\r\n                label: 'Dark Mode',\r\n                type: 'none',\r\n                value: 'none'\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                component: <MailIcon />,\r\n                label: 'Notes',\r\n                type: 'action',\r\n                value: 'notes'\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                // component: <MailIcon />,\r\n                label: 'Notes II',\r\n                type: 'action',\r\n                value: 'notes II'\r\n            }\r\n        ]\r\n    ]\r\n\r\n    const onNavAction = (e) => {\r\n        console.log('Action: ', e)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MainNav\r\n                isTransparent={true}\r\n                leftLogo={null}\r\n                leftMenu={[]}\r\n                middleMenu={middleMenu}\r\n                rightLogo={rightLogo}\r\n                rightMenu={rightMenu}\r\n                onAction={onNavAction} />\r\n            <Container maxWidth=\"sm\">\r\n                <Box>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                            <img\r\n                                alt=\"logo\"\r\n                                style={{width: 150}}\r\n                                src='/favicon.png' />\r\n                            <Typography variant=\"h4\" gutterBottom component=\"div\">\r\n                                { config.appName }\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                            <Box\r\n                                style={{\r\n                                    width: 300,\r\n                                    margin: 'auto',\r\n                                    padding: 20,\r\n                                    paddingTop: 40,\r\n                                    paddingBottom: 40,\r\n                                    boxShadow: '2px 2px 3px 2px rgb(0 0 0 / 20%)'\r\n                                }}>\r\n                                <Outlet />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                            <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                                Copyrights 2021\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthLayout","import { useState, useEffect, useContext } from 'react'\r\nimport { Outlet, Link, useHistory } from \"react-router-dom\"\r\nimport Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\n// import Typography from '@mui/material/Typography'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport MailIcon from '@mui/icons-material/Mail'\r\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings'\r\nimport SettingsIcon from '@mui/icons-material/Settings'\r\nimport FaceIcon from '@mui/icons-material/Face'\r\nimport LogoutIcon from '@mui/icons-material/Logout'\r\n\r\n// import Tooltip from '@mui/material/Tooltip'\r\nimport Badge from '@mui/material/Badge'\r\nimport IconButton from '@mui/material/IconButton'\r\n\r\nimport MainNav from '../navs/mainNav'\r\nimport AccountContext from '../context/accountContext'\r\nimport ThemeToggle from '../themes/themeToggle'\r\n// import config from '../../config'\r\n\r\nconst MainLayout = (props) => {\r\n    const accountCtx = useContext(AccountContext)\r\n\r\n    let leftLogo = {\r\n        label: 'Root',\r\n        component: <Avatar alt=\"Logo\" src=\"/favicon.png\" />,\r\n        type: 'link',\r\n        value: '/'\r\n    }\r\n    let leftMenu = [\r\n        [\r\n            {\r\n              component: <MailIcon />,\r\n              label: 'Home',\r\n              type: 'link',\r\n              value: '/home'\r\n            },\r\n            {\r\n                component: <MailIcon />,\r\n                label: 'Login',\r\n                type: 'link',\r\n                value: '/auth/login'\r\n            },\r\n            {\r\n                component: <MailIcon />,\r\n                label: 'Reset Password',\r\n                type: 'link',\r\n                value: '/auth/resetPassword'\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                component: <MailIcon />,\r\n                label: 'Notes',\r\n                type: 'action',\r\n                value: 'notes'\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                // component: <MailIcon />,\r\n                label: 'Notes II',\r\n                type: 'action',\r\n                value: 'notes II'\r\n            }\r\n        ]\r\n    ]\r\n\r\n    let middleMenu = [\r\n        {\r\n            label: 'Home',\r\n            component: (\r\n                <IconButton size=\"large\" sx={{ p: 0 }}>\r\n                    <MailIcon color=\"action\" size=\"large\" />\r\n                </IconButton>\r\n            ),\r\n            type: 'link',\r\n            value: '/home'\r\n        },\r\n        {\r\n            label: 'notifications',\r\n            component: (\r\n                <IconButton size=\"large\" sx={{ p: 0 }}>\r\n                    <Badge badgeContent={4} color=\"error\">\r\n                        <MailIcon color=\"action\" size=\"large\" />\r\n                    </Badge>\r\n                </IconButton>\r\n            ),\r\n            type: 'action',\r\n            value: 'notifications'\r\n        }\r\n    ]\r\n\r\n    let rightLogo = {\r\n        label: 'Open settings',\r\n        component: <Avatar alt=\"Gebe\" src=\"/static/images/avatar/2.jpg\" />,\r\n        type: 'action',\r\n        value: 'openSettings'\r\n    }\r\n    let rightMenu = [\r\n        [\r\n            {\r\n                component: (\r\n                    <Box sx={{ display: 'inline-block' }}>\r\n                        <ThemeToggle noLabel={true} />\r\n                    </Box>\r\n                ),\r\n                label: 'Dark Mode',\r\n                type: 'none',\r\n                value: 'none'\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                component: <AdminPanelSettingsIcon />,\r\n                label: 'Account',\r\n                type: 'link',\r\n                value: '/account'\r\n            },\r\n            {\r\n                component: <FaceIcon />,\r\n                label: 'Profile',\r\n                type: 'link',\r\n                value: '/account/profile'\r\n            },\r\n            {\r\n                component: <SettingsIcon />,\r\n                label: 'Settings',\r\n                type: 'link',\r\n                value: '/account/settings'\r\n            },\r\n            // {\r\n            //     component: <MailIcon />,\r\n            //     label: 'Test Act',\r\n            //     type: 'action',\r\n            //     value: 'test_act'\r\n            // },\r\n        ],\r\n        [\r\n            {\r\n                component: <LogoutIcon />,\r\n                label: 'Logout',\r\n                type: 'link',\r\n                value: '/auth/logout'\r\n            }\r\n        ]\r\n    ]\r\n\r\n    const onNavAction = (e) => {\r\n        console.log('Action: ', e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        accountCtx.initAccountData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <MainNav\r\n                leftLogo={leftLogo}\r\n                leftMenu={leftMenu}\r\n                middleMenu={middleMenu}\r\n                rightLogo={rightLogo}\r\n                rightMenu={rightMenu}\r\n                onAction={onNavAction} />\r\n\r\n            <Container maxWidth=\"lg\">\r\n                <Box>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                            {/* <Typography variant=\"h4\" gutterBottom component=\"div\">\r\n                                { config.appName }\r\n                            </Typography> */}\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                            <Box>\r\n                                <Outlet />\r\n                            </Box>\r\n                        </Grid>\r\n                        {/* <Grid item xs={12} style={{textAlign: 'center'}}>\r\n                            <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                                Copyrights 2021\r\n                            </Typography>\r\n                        </Grid> */}\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainLayout","import React from 'react'\r\nimport Button from '@mui/material/Button'\r\nimport CircularProgress from '@mui/material/CircularProgress'\r\n\r\nconst LoadingButton = (props) => {\r\n\r\n    let properties = {}\r\n\r\n    // properties not tobe included\r\n    let xProps = new Set(['isLoading'])\r\n\r\n    // assign object properties\r\n    Object.keys(props).forEach(key => {\r\n        if (xProps.has(key)) return\r\n        properties[key] = props[key]\r\n    })\r\n\r\n    // start icon\r\n    let startIcon = props.startIcon? props.startIcon: null\r\n\r\n    // if isLoading is true, set disabled to true\r\n    if (props.isLoading) {\r\n        startIcon = <CircularProgress size={12} />\r\n        properties.disabled = true\r\n    }\r\n\r\n    return (\r\n        <Button\r\n            {...properties}\r\n            startIcon={ startIcon }>\r\n            { props.children? props.children: '' }\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default LoadingButton","import { useState, useContext, useEffect } from 'react'\r\n\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nimport Link from '@mui/material/Link'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport TextField from '@mui/material/TextField'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\nimport Button from '@mui/material/Button'\r\n\r\nimport AccountContext from '../../common/context/accountContext'\r\nimport LoadingButton from '../../common/buttons/loadingButton'\r\nimport utils from '../../common/utilities'\r\n\r\nconst Login = (props) => {\r\n\r\n    const [internalstates, setInternalStates] = useState({\r\n        loginProgress: false,\r\n        password: '',\r\n        username: '',\r\n        errors: []\r\n    })\r\n    const [navRoute, setNavRoute] = useState(null)\r\n    const navigate = useNavigate()\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'login test value from context'})\r\n    // }\r\n\r\n    const login = async () => {\r\n        setInternalStates({...internalstates, ...{loginProgress: true}})\r\n        await utils.waitFor(2)\r\n        setInternalStates({...internalstates, ...{loginProgress: false}})\r\n        setNavRoute('/')\r\n    }\r\n\r\n    // life cycles\r\n    useEffect(() => {\r\n        // use to navigate\r\n        if (navRoute) {\r\n            navigate(navRoute)\r\n        }\r\n    }, [navRoute, navigate])\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    type='text'\r\n                    label='username / email' />\r\n            </Grid>\r\n            \r\n\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    type='password'\r\n                    label='password' />\r\n            </Grid>\r\n            \r\n\r\n            <Grid item xs={12}>\r\n                <LoadingButton\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='contained'\r\n                    color='primary'\r\n                    onClick={login}\r\n                    isLoading={internalstates.loginProgress}\r\n                    startIcon={<LoginIcon />}>\r\n                    login\r\n                </LoadingButton>\r\n                <Box style={{marginTop: 15}}>\r\n                    <Link\r\n                        color=\"inherit\"\r\n                        href=\"/auth/forgotPassword\">\r\n                        Forgot password\r\n                    </Link>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Login","import { useState, useEffect } from 'react'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport CircularProgress from '@mui/material/CircularProgress'\r\n\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport utils from '../../common/utilities'\r\n\r\nconst Logout = (props) => {\r\n    const [navRoute, setNavRoute] = useState(null)\r\n    const navigate = useNavigate()\r\n\r\n    // life cycles\r\n    useEffect(() => {\r\n        // use to navigate\r\n        if (navRoute) {\r\n            navigate(navRoute)\r\n        }\r\n    }, [navRoute, navigate])\r\n\r\n    useEffect(() => {\r\n        // cancel is use for cleanup\r\n        let cancel = false\r\n        async function redirect() {\r\n            // use temporary wait to\r\n            // recreate logging out request\r\n            await utils.waitFor(2)\r\n\r\n            // then redirect after successful logout\r\n            if (!navRoute && !cancel) {\r\n                setNavRoute('/auth/login')\r\n            }\r\n        }\r\n\r\n        redirect()\r\n\r\n        // cleanup function on unmount\r\n        return () => {\r\n            cancel = true\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography>\r\n                    Signing out...\r\n                </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <CircularProgress />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Logout","import { useState } from 'react'\r\nimport Link from '@mui/material/Link'\r\nimport Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport TextField from '@mui/material/TextField'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\nimport Button from '@mui/material/Button'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport InputAdornment from '@mui/material/InputAdornment'\r\nimport RotateLeftIcon from '@mui/icons-material/RotateLeft'\r\n\r\nimport LoadingButton from '../../common/buttons/loadingButton'\r\nimport utils from '../../common/utilities'\r\n\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nconst ResetPassword = (props) => {\r\n    const { key } = useParams()\r\n    const [internalstates, setInternalStates] = useState({\r\n        resetProgress: false,\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n        resetKey: '',\r\n        errors: []\r\n    })\r\n    const [resetKey, setResetKey] = useState(key? key: '')\r\n\r\n    const onChangeResetKey = (e) => {\r\n        setResetKey(e.target.value)\r\n    }\r\n\r\n    const handleResetKeyValue = (e) => {\r\n        let keyVal = key? key: ''\r\n        setResetKey(keyVal)\r\n    }\r\n\r\n    const resetPassword = async () => {\r\n        setInternalStates({...internalstates, ...{resetProgress: true}})\r\n        await utils.waitFor(2)\r\n        setInternalStates({...internalstates, ...{resetProgress: false}})\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography>\r\n                    Please enter the correct key and the new password you wanted.\r\n                </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    value={resetKey}\r\n                    onChange={onChangeResetKey}\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    type='text'\r\n                    label='Reset Key'\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"Reset key\"\r\n                                    onClick={handleResetKeyValue}\r\n                                    edge=\"end\">\r\n                                    <RotateLeftIcon />\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        ),\r\n                    }} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    type='password'\r\n                    label='New Password' />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    type='password'\r\n                    label='Confirm Password' />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <LoadingButton\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='contained'\r\n                    color='primary'\r\n                    onClick={resetPassword}\r\n                    isLoading={internalstates.resetProgress}\r\n                    startIcon={<LoginIcon />}>\r\n                    Reset\r\n                </LoadingButton>\r\n                <Box style={{marginTop: 15}}>\r\n                    <Link\r\n                        style={{margin: 10}}\r\n                        color=\"inherit\"\r\n                        href=\"/auth/forgotPassword\">\r\n                        Forgot password\r\n                    </Link>\r\n                    <Link\r\n                        style={{margin: 10}}\r\n                        color=\"inherit\"\r\n                        href=\"/auth/login\">\r\n                        Login\r\n                    </Link>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ResetPassword","import { useState } from 'react'\r\nimport Link from '@mui/material/Link'\r\nimport Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport TextField from '@mui/material/TextField'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\nimport Button from '@mui/material/Button'\r\nimport EmailIcon from '@mui/icons-material/Email'\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone'\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport ToggleButton from '@mui/material/ToggleButton'\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\r\n\r\nimport LoadingButton from '../../common/buttons/loadingButton'\r\nimport utils from '../../common/utilities'\r\n\r\nconst ForgotPassword = (props) => { \r\n    const [internalstates, setInternalStates] = useState({\r\n        forgotProgress: false,\r\n        addressType: 'email',\r\n        addressValue: '',\r\n        errors: []\r\n    })\r\n\r\n    const promptText = {\r\n        email: 'A password reset code or link will be sent to this email address.',\r\n        phone: 'A password reset code or link will be sent to this phone number.'\r\n    }\r\n\r\n    const switchMethod = (e, method) => {\r\n        setInternalStates({...internalstates, ...{addressType: method}})\r\n    }\r\n\r\n    const forgotRequest = async () => {\r\n        setInternalStates({...internalstates, ...{forgotProgress: true}})\r\n        await utils.waitFor(2)\r\n        setInternalStates({...internalstates, ...{forgotProgress: false}})\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12} style={{marginTop: 0, paddingTop: 0, textAlign: 'right'}}>\r\n                <ToggleButtonGroup\r\n                    value={internalstates.addressType}\r\n                    exclusive\r\n                    onChange={switchMethod}\r\n                    aria-label=\"Address Type\">\r\n                    <ToggleButton size=\"small\" value=\"email\">\r\n                        <Tooltip title=\"Send reset code to my Email\">\r\n                            <EmailIcon />\r\n                        </Tooltip>\r\n                    </ToggleButton>\r\n                    <ToggleButton size=\"small\" value=\"phone\">\r\n                        <Tooltip title=\"Send reset code to my Phone\">\r\n                            <ContactPhoneIcon />\r\n                        </Tooltip>\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Typography>\r\n                    { promptText[internalstates.addressType] }\r\n                </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    type='text'\r\n                    label={ internalstates.addressType === 'email'? 'Email Address': 'Phone Number' } />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <LoadingButton\r\n                    size='small'\r\n                    fullWidth\r\n                    variant='contained'\r\n                    color='primary'\r\n                    onClick={forgotRequest}\r\n                    isLoading={internalstates.forgotProgress}\r\n                    startIcon={<LoginIcon />}>\r\n                    Submit\r\n                </LoadingButton>\r\n                <Box style={{marginTop: 15}}>\r\n                    <Link\r\n                        color=\"inherit\"\r\n                        href=\"/auth/login\">\r\n                        Back to login\r\n                    </Link>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword","import { useState, useContext } from 'react'\r\n\r\nimport Link from '@mui/material/Link'\r\nimport Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport TextField from '@mui/material/TextField'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\nimport Button from '@mui/material/Button'\r\n\r\nimport AccountContext from '../../common/context/accountContext'\r\n\r\nconst Home = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography>Home Content</Typography>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useState, useEffect, useContext } from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport TextField from '@mui/material/TextField'\r\nimport Button from '@mui/material/Button'\r\nimport AccountContext from '../../../common/context/accountContext'\r\n\r\n\r\nconst AccountView = (props) => {\r\n\r\n    return (\r\n        <Box>\r\n            Account View\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={6}></Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AccountView","import React, { useState, useEffect, useContext } from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport TextField from '@mui/material/TextField'\r\nimport Button from '@mui/material/Button'\r\nimport AccountContext from '../../../common/context/accountContext'\r\n\r\nconst AccountEdit = (props) => {\r\n    const accountCtx = useContext(AccountContext)\r\n\r\n    useEffect(() => {\r\n        console.log('data in account edit: ', accountCtx.accountContext)\r\n\r\n    },[accountCtx.accountContext])\r\n\r\n    return (\r\n        <Box>\r\n            <Grid container spacing={2}>\r\n                {/* <Grid item xs={12}>\r\n                    Account Edit\r\n                </Grid> */}\r\n                <Grid item xs={12} md={6} sx={{textAlign: {xs: 'center', md: 'right'}}}>\r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        Required Fields\r\n                    </Grid>\r\n\r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"outlined-required\"\r\n                            label=\"Required\"\r\n                            defaultValue=\"Hello World\" />\r\n                    </Grid>\r\n                    \r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"outlined-required\"\r\n                            label=\"Required\"\r\n                            defaultValue=\"Hello World\" />\r\n                    </Grid>\r\n\r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"outlined-required\"\r\n                            label=\"Required\"\r\n                            defaultValue=\"Hello World\" />\r\n                    </Grid>\r\n\r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        <Button variant=\"contained\">Primary</Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6} sx={{textAlign: {xs: 'center', md: 'left'}}}>\r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        Required Fields\r\n                    </Grid>\r\n\r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"outlined-required\"\r\n                            label=\"Required\"\r\n                            defaultValue=\"Hello World\" />\r\n                    </Grid>\r\n                    \r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"outlined-required\"\r\n                            label=\"Required\"\r\n                            defaultValue=\"Hello World\" />\r\n                    </Grid>\r\n\r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"outlined-required\"\r\n                            label=\"Required\"\r\n                            defaultValue=\"Hello World\" />\r\n                    </Grid>\r\n\r\n                    <Grid item style={{padding: 10}} xs={12}>\r\n                        <Button variant=\"contained\">Primary</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AccountEdit","import { useState, useContext } from 'react'\r\n\r\nimport Link from '@mui/material/Link'\r\nimport Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport TextField from '@mui/material/TextField'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\nimport Button from '@mui/material/Button'\r\n\r\nimport AccountContext from '../../common/context/accountContext'\r\nimport AccountView from './components/accountView'\r\nimport AccountEdit from './components/accountEdit'\r\n\r\nconst Account = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                {/* <Typography>Account Core Content</Typography> */}\r\n                <AccountView />\r\n                <AccountEdit />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Account","import { useState, useContext } from 'react'\r\n\r\nimport Link from '@mui/material/Link'\r\nimport Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport TextField from '@mui/material/TextField'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\nimport Button from '@mui/material/Button'\r\n\r\nimport AccountContext from '../../common/context/accountContext'\r\n\r\nconst AccountProfile = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography>Account Profile Content</Typography>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default AccountProfile","import { useState, useContext } from 'react'\r\n\r\nimport Link from '@mui/material/Link'\r\nimport Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport TextField from '@mui/material/TextField'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\nimport Button from '@mui/material/Button'\r\n\r\nimport AccountContext from '../../common/context/accountContext'\r\n\r\nconst AccountSettings = (props) => {\r\n    // const ctx = useContext(AccountContext)\r\n\r\n    // const btnClicked = (e) => {\r\n    //     ctx.setAccountContext({testVal: 'Home test value from context'})\r\n    // }\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography>Account Settings Content</Typography>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default AccountSettings","import { useState, useContext } from 'react'\r\n\r\nimport Link from '@mui/material/Link'\r\nimport Container from '@mui/material/Container'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Typography from '@mui/material/Typography'\r\nimport TextField from '@mui/material/TextField'\r\nimport LoginIcon from '@mui/icons-material/Login'\r\nimport Button from '@mui/material/Button'\r\n\r\nconst NotFound = (props) => {\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography\r\n                    style={{marginTop: '5%'}}\r\n                    color='secondary'\r\n                    variant='h4'\r\n                    gutterBottom\r\n                    component='div'>\r\n                    Error 404 not found Content.\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default NotFound","import { useState } from 'react'\r\nimport {\r\n    BrowserRouter,\r\n    Routes,\r\n    Route\r\n} from 'react-router-dom'\r\n\r\n// layouts\r\nimport PublicPageLayout from '../common/layouts/publicPageLayout'\r\nimport AuthLayout from '../common/layouts/authLayout'\r\nimport MainLayout from '../common/layouts/mainLayout'\r\n\r\n// auth pages\r\nimport Login from './auth/login'\r\nimport Logout from './auth/logout'\r\nimport ResetPassword from './auth/resetPassword'\r\nimport ForgotPassword from './auth/forgotPassword'\r\n\r\n// main pages\r\nimport Home from './home'\r\nimport Account from './account'\r\nimport AccountProfile from './account/accountProfile'\r\nimport AccountSettings from './account/accountSettings'\r\n\r\n// error page\r\nimport NotFound from './notFound'\r\n\r\nimport config from '../config'\r\n\r\nconst Pages = (props) => {\r\n    // console.log(config)\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Routes>\r\n                {/* auth pages */}\r\n                <Route path=\"/auth/\" element={<AuthLayout />}>\r\n                    <Route path=\"login\" element={<Login />} />\r\n                    <Route path=\"logout\" element={<Logout />} />\r\n                    <Route path=\"resetPassword\" element={<ResetPassword />} />\r\n                    <Route path=\"resetPassword/:key\" element={<ResetPassword />} />\r\n                    <Route path=\"forgotPassword\" element={<ForgotPassword />} />\r\n                </Route>\r\n\r\n                {/* main pages */}\r\n                <Route path=\"/\" element={<MainLayout />}>\r\n                    <Route path=\"home\" element={<Home />} />\r\n                    <Route path=\"account\" element={<Account />} />\r\n                    <Route path=\"account/profile\" element={<AccountProfile />} />\r\n                    <Route path=\"account/settings\" element={<AccountSettings />} />\r\n                </Route>\r\n\r\n                {/* error page */}\r\n                <Route\r\n                    path='*'\r\n                    element={\r\n                        <PublicPageLayout>\r\n                            <NotFound />\r\n                        </PublicPageLayout>\r\n                    }></Route>\r\n            </Routes>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Pages","// import React, { useStates, useEffect } from 'react'\r\nimport AccountContext, { UseAccountContext } from './common/context/accountContext'\r\nimport LocalStorageContext, { UseLocalStorageContext } from './common/context/localStorageContext'\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles'\r\nimport CssBaseline from '@mui/material/CssBaseline'\r\nimport PrimaryTheme from './common/themes/primary'\r\nimport Pages from './pages'\r\n\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  const accountStates = UseAccountContext()\r\n  const localStorageStates = UseLocalStorageContext()\r\n\r\n  let theme = createTheme({\r\n    ...PrimaryTheme,\r\n    ...{\r\n      palette: {\r\n        ...PrimaryTheme.palette,\r\n        ...{ mode: localStorageStates.localStorageContext.themeMode}\r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <LocalStorageContext.Provider\r\n      value={{\r\n        ...localStorageStates\r\n      }}>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <AccountContext.Provider\r\n          value={{\r\n            ...accountStates\r\n          }}>\r\n          <Pages />\r\n        </AccountContext.Provider>\r\n      </ThemeProvider>\r\n    </LocalStorageContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}