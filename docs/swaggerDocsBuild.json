{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "API documenations using Swagger",
    "description": "Sample project which generates API documentaion using swagger.",
    "contact": {
      "name": "Gilbert D. Cuerbo",
      "email": "gilbert.cuerbo@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/gilbertgit95/kagiweb-api-core-a/blob/master/LICENSE"
    }
  },
  "servers": [
    {
      "url": "localhost:5000/api/core/v1/"
    }
  ],
  "tags": [
    {
      "name": "Auths",
      "description": "Contains all endpoints related to roles. This will give a package access to users"
    },
    {
      "name": "Features",
      "description": "Contains all endpoints related to features. This will be the bases for user access in the roles"
    },
    {
      "name": "Roles",
      "description": "Contains all endpoints related to roles. This will give a package access to users"
    },
    {
      "name": "Users",
      "description": "Contains all endpoints related to users."
    }
  ],
  "paths": {
    "/signin": {
      "post": {
        "tags": [
          "Auths"
        ],
        "security": [],
        "summary": "Get all the Roles",
        "description": "Get all the Roles",
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "password"
                ],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Roles fetched successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SigninResponse"
              }
            }
          },
          "400": {
            "description": "Error in fetching Roles",
            "schema": {
              "type": "object",
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "/features": {
      "get": {
        "tags": [
          "Features"
        ],
        "summary": "Get all the Features",
        "description": "Get all the Features",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "array of features",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/PagginatedResponse"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "$ref": "#/components/schemas/AutoGeneratedData"
                                },
                                {
                                  "$ref": "#/components/schemas/Feature"
                                }
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "example": {
                  "items": [
                    {
                      "_id": "3f74c3a5-3200-4c9f-a5c7-077515e1e45b",
                      "createdAt": "2023-08-06T18:03:06.290Z",
                      "description": "One of the server endpoint",
                      "name": "GET \\api\\v1\\systemInfo",
                      "tags": [
                        "Server",
                        "Api Route",
                        "GET"
                      ],
                      "type": "api-route",
                      "updatedAt": "2023-08-07T03:10:24.423Z",
                      "value": "[GET]_\\api\\v1\\systemInfo"
                    }
                  ],
                  "totalItems": 1,
                  "page": 1,
                  "pageSize": 100,
                  "totalPages": 1,
                  "nextURL": null
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access to resources",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get all the Roles",
        "description": "Get all the Roles",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Roles fetched successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Role"
              }
            }
          },
          "400": {
            "description": "Error in fetching Roles",
            "schema": {
              "type": "object",
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all the Users",
        "description": "Get all the Users",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "400": {
            "description": "Error in fetching users",
            "schema": {
              "type": "object",
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "/users/create": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a Users",
        "description": "Create a User",
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "password"
                ],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  },
                  "userInfos": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/AutoGeneratedData"
                        },
                        {
                          "$ref": "#/components/schemas/UsersInfo"
                        }
                      ]
                    }
                  },
                  "contactInfos": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/AutoGeneratedData"
                        },
                        {
                          "$ref": "#/components/schemas/UsersContactInfo"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Users fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error in fetching users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Create a Users",
        "description": "Create a User",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "this the uuid of the user in the database.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "400": {
            "description": "Error in fetching users",
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Create a Users",
        "description": "Create a User",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "this the uuid of the user in the database.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "400": {
            "description": "Error in fetching users",
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Create a Users",
        "description": "Create a User",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "this the uuid of the user in the database.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "400": {
            "description": "Error in fetching users",
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "SigninResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "AutoGeneratedData": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "createdAt": "2023-07-23T11:22:30.886Z",
          "updatedAt": "2023-07-23T11:22:30.886Z"
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "PagginatedResponse": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageSize": {
            "type": "number"
          },
          "totalPages": {
            "type": "number"
          },
          "nextUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "totalItems": 100,
          "page": 1,
          "pageSize": 50,
          "totalPages": 2,
          "nextUrl": "api/v1/module?page=2"
        }
      },
      "Feature": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "just a name use to identify the feature",
            "example": "get feature route"
          },
          "type": {
            "type": "string",
            "description": "use to identify type of feature.",
            "example": "api-route"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "this will be use in UI to categorize the features",
            "example": [
              "Server",
              "Api Route",
              "Get"
            ]
          },
          "value": {
            "type": "string",
            "description": "the actual value to use when checking internally in the application",
            "example": "[GET]_\\api\\v1\\systemInfo"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "UsersInfo": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "example": {
          "key": "firstname",
          "value": "Gilbert",
          "type": "string"
        }
      },
      "UsersContactInfo": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "the type of contact information.",
            "example": "email, phone and more"
          },
          "value": {
            "type": "string",
            "description": "the actual value of the contact type.",
            "example": "gilbert.cuerbo@gmail.com"
          },
          "countryCode": {
            "type": "string",
            "description": "the country code",
            "example": "PH for PHilippines"
          },
          "disabled": {
            "type": "boolean",
            "description": "the user wont be able to use this contact info if this is true"
          }
        },
        "example": {
          "type": "email",
          "value": "gilbert.cuerbo@gmail.com",
          "countryCode": "PH",
          "disabled": false
        }
      }
    }
  }
}
