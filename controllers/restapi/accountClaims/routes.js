const router = require('express').Router();

const {
    getMultipleAccountClaims,
    createMultipleAccountClaims,
    updateMultipleAccountClaims,
    deleteMultipleAccountClaims
} = require('./multipleAccountClaims');

const {
    getAccountClaim,
    createAccountClaim,
    updateAccountClaim,
    deleteAccountClaim
} = require('./singleAccountClaim');

/**
 * @swagger
 * components:
 *      schemas:
 *          AccountClaim:
 *              type: object
 *              required:
 *                  - username
 *                  - roleId
 *              properties:
 *                  id:
 *                      type: string
 *                      description: autogenerated value
 *                  username:
 *                      type: string
 *                      description: accountClaim username
 *                  roleId:
 *                      type: string
 *                      description: accountClaim role id
 *                  twoFactorAuth:
 *                      type: boolean
 *                      description: two factor authentication
 *                  disableAccountClaim:
 *                      type: boolean
 *                      description: accountClaim disable status
 *                  primaryEmail:
 *                      type: string
 *                      description: primary accountClaim email
 *                  secondayEmail:
 *                      type: string
 *                      description: secondary accountClaim email
 *                  primaryEmailVerified:
 *                      type: string
 *                      description: primary email verified status
 *                  secondaryEmailVerified:
 *                      type: string
 *                      description: secondary email verified status
 *                  primaryNumber:
 *                      type: string
 *                      description: primary contact number
 *                  secondayNumber:
 *                      type: string
 *                      description: secondary contact number
 *                  primaryNumberVerified:
 *                      type: string
 *                      description: primary contact verified status
 *                  secondaryNumberVerified:
 *                      type: string
 *                      description: secondary contact verified status
 *                  resetPasswordAttempt:
 *                      type: string
 *                      description: reset password attempt count
 *                  loginAccountClaimAttempt:
 *                      type: string
 *                      description: login accountClaim attemp count
 *                  createdAt:
 *                      type: string
 *                      description: date when this item was created
 *                  updatedAt:
 *                      type: string
 *                      description: date when this item was updated
 *              example:
 *                  id: e79c8692-4cc2-4971-a52c-832e87b28e8f
 *                  username: master
 *                  twoFactorAuth: false
 *                  disableAccountClaim: false
 *                  primaryEmail: null
 *                  secondayEmail: null
 *                  primaryEmailVerified: false
 *                  secondaryEmailVerified: false
 *                  primaryNumber: null
 *                  secondayNumber: null
 *                  primaryNumberVerified: false
 *                  secondaryNumberVerified: false
 *                  resetPasswordAttempt: 0
 *                  loginAccountClaimAttempt: 0
 *                  createdAt: 2021-11-20T15:27:31.513Z
 *                  updatedAt: 2021-11-20T15:27:31.513Z
 *                  roleId: e79c8692-4cc2-4971-a52c-832e87b46e8f
 */

/**
 * @swagger
 * tags:
 *      name: AccountClaims
 *      description: Api to manage accountClaims
 */

/**
 * @swagger
 * /api/v1/accountClaims:
 *      get:
 *          tags: [AccountClaims]
 *          summary: returns list of accountClaims
 *          responses:
 *              200:
 *                  description: object containing list of accountClaims
 *                  content:
 *                      application/json:
 *                          schema:
 *                              type: object
 *                              properties:
 *                                  data:
 *                                      type: object
 *                                      properties:
 *                                          next:
 *                                              type: string
 *                                              nullable: true
 *                                              description: url pointing to the next page
 *                                          pageSize:
 *                                              type: number
 *                                              description: number of items per page
 *                                          pageNumber:
 *                                              type: number
 *                                              description: the current page number
 *                                          totalPage:
 *                                              type: number
 *                                              description: all the availbale pages
 *                                          totalItems:
 *                                              type: number
 *                                              description: all items in all pages
 *                                          items:
 *                                              type: array
 *                                              items:
 *                                                  allOf:
 *                                                      - $ref: '#/components/schemas/AccountClaim'
 *                                                      - type: object
 *                                                        properties:
 *                                                          role:
 *                                                              $ref: '#/components/schemas/Role'
 *                                                          accountClaimClaims:
 *                                                              type: array
 *                                                              items:
 *                                                                  $ref: '#/components/schemas/Role'
 *              500:
 *                  description: Some error occured in the server
 *                  content:
 *                      application/json:
 *                          schema:
 *                              $ref: '#/components/schemas/Error'
 */

router.get('/accountClaims', getMultipleAccountClaims)
router.post('/accountClaims', createMultipleAccountClaims)
router.put('/accountClaims', updateMultipleAccountClaims)
router.delete('/accountClaims', deleteMultipleAccountClaims)

router.get('/accountClaims/{id}', getAccountClaim)
router.post('/accountClaims/new', createAccountClaim)
router.put('/accountClaims/{id}', updateAccountClaim)
router.delete('/accountClaims/{id}', deleteAccountClaim)

module.exports = router